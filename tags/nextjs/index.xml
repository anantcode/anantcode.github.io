<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>nextjs on Anant Code</title>
    <link>https://anantcode.github.io/tags/nextjs/</link>
    <description>Recent content in nextjs on Anant Code</description>
    <image>
      <url>https://anantcode.github.io/%3Clink%20or%20path%20of%20image%20for%20opengraph,%20twitter-cards%3E</url>
      <link>https://anantcode.github.io/%3Clink%20or%20path%20of%20image%20for%20opengraph,%20twitter-cards%3E</link>
    </image>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sat, 04 Jun 2022 12:19:20 +0530</lastBuildDate><atom:link href="https://anantcode.github.io/tags/nextjs/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Day14 #100DaysOfCode</title>
      <link>https://anantcode.github.io/posts/2022-06-04-day14-100doc/</link>
      <pubDate>Sat, 04 Jun 2022 12:19:20 +0530</pubDate>
      
      <guid>https://anantcode.github.io/posts/2022-06-04-day14-100doc/</guid>
      <description>Implement Google Signin with next-auth</description>
    </item>
    
    <item>
      <title>Day13 #100DaysOfCode</title>
      <link>https://anantcode.github.io/posts/2022-06-02-day13-100doc/</link>
      <pubDate>Thu, 02 Jun 2022 23:05:52 +0530</pubDate>
      
      <guid>https://anantcode.github.io/posts/2022-06-02-day13-100doc/</guid>
      <description>Local env variables in NextJS</description>
    </item>
    
    <item>
      <title>Day12 #100DaysOfCode</title>
      <link>https://anantcode.github.io/posts/2022-05-31-day12-100doc/</link>
      <pubDate>Tue, 31 May 2022 21:46:29 +0530</pubDate>
      
      <guid>https://anantcode.github.io/posts/2022-05-31-day12-100doc/</guid>
      <description>Add .env file Added env_var.env file at root with following content:
GOOGLE_ID=GOOGLE_SECRET= with the values.
Also added it to gitignore
Install node module dotenv npm install dotenv
and in pages\api\auth\[...nextauth].js used at very start, this conditional require:
if (process.env.NODE_ENV !== &amp;#34;production&amp;#34;) {  require(&amp;#34;dotenv&amp;#34;).config(); }  npm run dev - start my next app
forgot to do the basic - npm install next-auth
restart:
Amazing! shows the login button because of change I did in components\layout\MainNavigation.</description>
    </item>
    
    <item>
      <title>NextJS vs React</title>
      <link>https://anantcode.github.io/posts/2022-05-16-my-first-impressions-of-next-js-over-react/</link>
      <pubDate>Mon, 16 May 2022 21:57:09 +0530</pubDate>
      
      <guid>https://anantcode.github.io/posts/2022-05-16-my-first-impressions-of-next-js-over-react/</guid>
      <description>Listing impressions of nextjs from my experience with it so far, and how it differs from react from a devs perspective.
How reactjs works: In case of react, on a prod website, server could be a CDN. Need not be EC2 etc.
CDN is dumb server - which is just a convenient way to say CDN is a server but optimized for file delivery, not for compute.
index.html contains bundle.js</description>
    </item>
    
    <item>
      <title>Day8 #100DaysOfCode</title>
      <link>https://anantcode.github.io/posts/2022-05-14-day8-100doc/</link>
      <pubDate>Sat, 14 May 2022 12:31:18 +0530</pubDate>
      
      <guid>https://anantcode.github.io/posts/2022-05-14-day8-100doc/</guid>
      <description>Now extend the fetching from MongoDB to
 Individual page (dynamic page) of next. On the same dynamic page, the URLs also we will get from the DB (GSPa)  Both of these to be done in dynamic page [ ]
fetching URLs for GSPa export async function getStaticPaths() {  const uri = `mongodb+srv://${secret.user}:${secret.pass}@cluster0.xf7jy.mongodb.net/myFirstDB?retryWrites=true&amp;amp;w=majority`;  const client = await MongoClient.connect(uri);  const db = client.db();  const notesCollection = db.</description>
    </item>
    
    <item>
      <title>Day7 #100DaysOfCode</title>
      <link>https://anantcode.github.io/posts/2022-05-14-day7-100doc/</link>
      <pubDate>Sat, 14 May 2022 12:30:58 +0530</pubDate>
      
      <guid>https://anantcode.github.io/posts/2022-05-14-day7-100doc/</guid>
      <description>In last post
 MongoDB was set up - able to store data from a form.  Redirecting to homepage after successful form submit. Use useRouter to do it:
 In pages/new-note/index.js  import { useRouter } from &amp;#39;next/router&amp;#39;  ..  const router = useRouter(); // as usual, hook should be called first in react functional component   //after successful response of submit  router.replace(&amp;#34;/&amp;#34;); // or push() Getting data from mongoDB  We could do it like, in page component GSP write a connection to our API route &amp;gt; that API route connects to mongoDB  i.</description>
    </item>
    
    <item>
      <title>Day6 #100DaysOfCode</title>
      <link>https://anantcode.github.io/posts/2022-05-11-day6-100doc/</link>
      <pubDate>Wed, 11 May 2022 08:20:38 +0530</pubDate>
      
      <guid>https://anantcode.github.io/posts/2022-05-11-day6-100doc/</guid>
      <description>Day 6 Using mongoDB in the nextjs app.
So far covered:
 getStaticProps, and getStaticPaths and getServerSideProps They allow us to fetch data for pre-rendering those pages, So that we pre-render the pages with the data, instead of without the data they might need.  Upto this point, we&amp;rsquo;re only working with dummy data though (not actually fetching from anywhere) - it is actually hard-coded data
We do have this Add New Meetup page here, which would allow users to enter data for a new meetup.</description>
    </item>
    
    <item>
      <title>Day5 #100DaysOfCode</title>
      <link>https://anantcode.github.io/posts/2022-05-10-day5-100doc/</link>
      <pubDate>Tue, 10 May 2022 20:18:35 +0530</pubDate>
      
      <guid>https://anantcode.github.io/posts/2022-05-10-day5-100doc/</guid>
      <description>Day 5 Key learnings:
  React hooks like useRouter cant be used in GSP (getStaticProps) - it can only be used in React function component.
 So can&amp;rsquo;t use useRouter to get the slug (like ID of note/post). But we dont need it - we have context param in GSP.    In GSP the context will not hold req and res - it has params:
 the params object has  key = the thing between [] in the filename.</description>
    </item>
    
    <item>
      <title>Day4 #100DaysOfCode</title>
      <link>https://anantcode.github.io/posts/2022-05-10-day4-100doc/</link>
      <pubDate>Tue, 10 May 2022 06:29:49 +0530</pubDate>
      
      <guid>https://anantcode.github.io/posts/2022-05-10-day4-100doc/</guid>
      <description>Build $ npm run build generates static pages.
Terminal:
Page Size First Load JS ┌ ● / 724 B 78.2 kB ├ └ css/233a1356c16eb650.css 416 B ├ /_app 0 B 77.5 kB ├ ○ /[noteId] 484 B 78 kB ├ └ css/f0a2be9a550dc29f.css 79 B ├ ○ /404 193 B 77.7 kB └ ○ /new-note 749 B 78.2 kB └ css/29ba8ee8d48d1f49.css 359 B + First Load JS shared by all 77.5 kB ├ chunks/framework-1f10003e17636e37.</description>
    </item>
    
    <item>
      <title>Day3 #100DaysOfCode</title>
      <link>https://anantcode.github.io/posts/2022-05-09-day3-100doc/</link>
      <pubDate>Mon, 09 May 2022 06:10:59 +0530</pubDate>
      
      <guid>https://anantcode.github.io/posts/2022-05-09-day3-100doc/</guid>
      <description>Replace mock data with a real datasource:
Send HTTP request once the page has loaded - we would typically use useEffect() Runs whenever component is frist rendered, never after. Do: fetch your data inside it.
Manage state for the component - use useState() hook
const [loadedNotes, setLoadedNotes] = useState([]);  useEffect(()=&amp;gt; {  //send http request and fetch data.  //set on component  setLoadedNotes(LOADED_NOTES); }, []); Full code (with function component):</description>
    </item>
    
    <item>
      <title>Day 2 #100DaysOfCode</title>
      <link>https://anantcode.github.io/posts/2022-05-08-day2-100doc/</link>
      <pubDate>Sun, 08 May 2022 09:21:18 +0530</pubDate>
      
      <guid>https://anantcode.github.io/posts/2022-05-08-day2-100doc/</guid>
      <description>Day 2 Key Learnings:
 pages folder name is reserved in nextjs.  Others like components is not reserved.   How props are passed to a component. Utilize _app.js for anything that affects all pages like Layout - wrap with Layout component, Navigation (with links) etc Using Programmatic (Imperative) Navigation  The usual rule of a Reach Hook:  Only use directly only at the root level of component function.</description>
    </item>
    
    <item>
      <title>Creating a Blog with Next.js and Markdown - Part 2</title>
      <link>https://anantcode.github.io/posts/publishing-nextjs-site-blog/</link>
      <pubDate>Mon, 11 Apr 2022 00:00:00 +0000</pubDate>
      
      <guid>https://anantcode.github.io/posts/publishing-nextjs-site-blog/</guid>
      <description>In this article we cover deploying the blog site on Vercel</description>
    </item>
    
    <item>
      <title>Creating a Blog with Next.js and Markdown - Part 1</title>
      <link>https://anantcode.github.io/posts/2-create-blog-with-nextjs-markdown/</link>
      <pubDate>Sun, 10 Apr 2022 00:00:00 +0000</pubDate>
      
      <guid>https://anantcode.github.io/posts/2-create-blog-with-nextjs-markdown/</guid>
      <description>Creating a blog with NextJS and Markdown</description>
    </item>
    
  </channel>
</rss>
