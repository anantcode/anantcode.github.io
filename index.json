[{"content":"A Cloudflare outage from 2019 has roots in regex change done in WAF (Web Application Firewall). Exponential runtime regex match caused outages.\nThe incident is described in the excellet \u0026ldquo;Post Mortem\u0026rdquo; blog post by Cloudflare : https://blog.cloudflare.com/details-of-the-cloudflare-outage-on-july-2-2019/\nReferences:\nExplained in this excellent video by Kevin Fang: https://www.youtube.com/watch?v=DDe-S3uef2w\n","permalink":"https://anantcode.github.io/posts/2023-07-25-cloudfare-jul2019-incident-waf-regex-exponential/","summary":"A Cloudflare outage from 2019 has roots in regex change done in WAF (Web Application Firewall). Exponential runtime regex match caused outages.\nThe incident is described in the excellet \u0026ldquo;Post Mortem\u0026rdquo; blog post by Cloudflare : https://blog.cloudflare.com/details-of-the-cloudflare-outage-on-july-2-2019/\nReferences:\nExplained in this excellent video by Kevin Fang: https://www.youtube.com/watch?v=DDe-S3uef2w","title":"Cloudfare July 2019 Incident: Regex's exponential runtime"},{"content":" gPRC became possible with HTTP/2. HTTP/2 added a new layer called \u0026ldquo;binary framing\u0026rdquo;. References:\nhttps://www.freecodecamp.org/news/what-is-grpc-protocol-buffers-stream-architecture/ ","permalink":"https://anantcode.github.io/posts/2023-07-24-grpc-intro/","summary":" gPRC became possible with HTTP/2. HTTP/2 added a new layer called \u0026ldquo;binary framing\u0026rdquo;. References:\nhttps://www.freecodecamp.org/news/what-is-grpc-protocol-buffers-stream-architecture/ ","title":"gRPC - what is it"},{"content":"A digital certificate provides a convenient way of distributing trusted public encryption keys.\nExample Usage To illustrate we will look at a typical web browser and web server connection using SSL. (https).\nThis connection is used on the Internet to send email in Gmail etc and when doing online banking,shopping etc.\nBrowser connects to server Using SSL (https) Server Responds with Server Certificate containing the public key of the web server. Browser verifies the certificate by checking the signature of the CA. To do this the CA certificate needs to be in the browser’s trusted store( See later) Browser uses this Public Key to agree a session key with the server. (session key is for symmetric encryption) Web Browser and server encrypt data over the connection using the session key. References:\nExcellent explanation on:\nHow SSL works What are CA https://youtu.be/iQsKdtjwtYI and related blog on SSL Certificates: http://www.steves-internet-guide.com/ssl-certificates-explained/\n","permalink":"https://anantcode.github.io/posts/2023-07-17-sssl-handshake/","summary":"A digital certificate provides a convenient way of distributing trusted public encryption keys.\nExample Usage To illustrate we will look at a typical web browser and web server connection using SSL. (https).\nThis connection is used on the Internet to send email in Gmail etc and when doing online banking,shopping etc.\nBrowser connects to server Using SSL (https) Server Responds with Server Certificate containing the public key of the web server.","title":"How SSL works"},{"content":"Why is it fine to send access token to resource server in a GET request\nIn a header - Authorization header as Bearer Authorization: Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9 \u0026ldquo;the header is not logged anywhere\u0026rdquo;? - to verify. Maybe wrong. Find the correct.\nFollowing were a little helpful (must read):\nhttps://security.stackexchange.com/questions/229892/sending-token-through-get-vs-post https://security.stackexchange.com/questions/188975/is-a-redirect-showing-the-password-in-plain-text-a-security-vulnerability/188995#188995 In query param A contrasting answer saying why it can be ok:\nFrom: https://security.stackexchange.com/questions/158541/sending-access-token-through-get-request\nAs explained here, sensitive data in the URL query part (such as a secret API token) is primarily an issue if the URL is accessed directly in the browser and therefore visible in the URL bar as well as stored in the browser history.\nBut API requests are usually performed in the background of an app or via a background AJAX request and therefore you\u0026rsquo;re much less likely to run into a situation where the plain API request URL is presented to a user. Therefore the dangers of sensitive data in the URL are negligible for an API.\nAlso note that over HTTPS the full HTTP request is encrypted, including the query part. Only the hostname (api.instagram.com) would be exposed to a MITM as a side effect of SNI.\n","permalink":"https://anantcode.github.io/posts/2023-07-12-access-token-in-get-request/","summary":"Why is it fine to send access token to resource server in a GET request\nIn a header - Authorization header as Bearer Authorization: Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9 \u0026ldquo;the header is not logged anywhere\u0026rdquo;? - to verify. Maybe wrong. Find the correct.\nFollowing were a little helpful (must read):\nhttps://security.stackexchange.com/questions/229892/sending-token-through-get-vs-post https://security.stackexchange.com/questions/188975/is-a-redirect-showing-the-password-in-plain-text-a-security-vulnerability/188995#188995 In query param A contrasting answer saying why it can be ok:\nFrom: https://security.stackexchange.com/questions/158541/sending-access-token-through-get-request\nAs explained here, sensitive data in the URL query part (such as a secret API token) is primarily an issue if the URL is accessed directly in the browser and therefore visible in the URL bar as well as stored in the browser history.","title":"Access Token in GET Request"},{"content":"Starting VSCode in Linux:\nwhile as a root user:\nInstalled the VSCode (forgot exact way - but was easy, just googled). when trying to start VSCode by using code ., got this error: You are trying to start Visual Studio Code as a super user which isn\u0026#39;t recommended. If this was intended, please add the argument `--no-sandbox` and specify an alternate user data directory using the `--user-data-dir` argument. Tried different ways to run it:\ncreated a new user anant(some 1 liner to create the new user) and switched to it (su anant). Googled everything.\nNone of it worked.\nUsed chatGPT with prompt:\nHow to start Visual Studio code NOT as a super user.\nGot the following response:\nTo start Visual Studio Code (VSCode) as a regular user and not as a super user, you can follow these steps:\nOpen your terminal or command prompt.\nNavigate to the directory where the VSCode executable is located. The location can vary depending on your operating system and installation method. Common locations include:\nWindows: C:\\Program Files\\Microsoft VS Code\\ macOS: /Applications/Visual Studio Code.app/Contents/Resources/app/bin/ Linux: /usr/share/code/ If you installed VSCode using a package manager, you can usually run the code command directly from the terminal without specifying the full path.\nOnce you are in the correct directory, run the code command with the \u0026ndash;user-data-dir flag followed by the path to a directory where you want to store your user-specific data and configurations. For example:\n./code --user-data-dir=~/vscode-data This command starts VSCode with the specified user data directory.\nNote: Make sure to replace ~/vscode-data with the actual path to the directory where you want to store your VSCode user data.\nVSCode should now start as a regular user without requiring superuser privileges. You can use it normally and install extensions, modify settings, and work on your projects.\nBy specifying a custom user data directory, you ensure that your extensions, settings, and other user-specific data are separate from the system-wide installation. This approach allows you to run VSCode as a regular user and avoid potential permission issues.\nFollowed above:\nIndeed the VSCode was installed at /usr/share/code its bin dir had the code.sh Tried in the /usr/share/code to do ./code --user-data-dir=~/annvscode-data This failed with error:\nAtleast something worked!\nAdded the --no-sandbox flag\ngives this error (but atleast the applicatoin starts!! for the first time!! (seems like app was starting and faced network issue, maybe due to office internet)):\n","permalink":"https://anantcode.github.io/posts/2023-07-07-starting-vscode-in-linux/","summary":"Starting VSCode in Linux:\nwhile as a root user:\nInstalled the VSCode (forgot exact way - but was easy, just googled). when trying to start VSCode by using code ., got this error: You are trying to start Visual Studio Code as a super user which isn\u0026#39;t recommended. If this was intended, please add the argument `--no-sandbox` and specify an alternate user data directory using the `--user-data-dir` argument. Tried different ways to run it:","title":"Starting Vscode in Linux [Pending]"},{"content":"This interesting video by Kevin Fang explains the events very well.\n","permalink":"https://anantcode.github.io/posts/2023-06-14-cross-region-failover-github-down-casestudy/","summary":"This interesting video by Kevin Fang explains the events very well.","title":"An interesting case study - GitHub services outage"},{"content":"Problem: Was unable to connect to internet in the VM, and found the solution as described in a previous blog post.\nThe problem that remains is - had to sudo dhclient eth0 everytime when the VM restarts. Is there a way to do this automatically?\nSolution:\nUsing this post:\nhttps://superuser.com/questions/151936/how-to-automate-running-the-dhclient-in-ubuntu\ntried the steps:\nYou should check your network configuration in:\n/etc/network/interfaces\nIf you want DHCP, it should be something like this:\nauto eth0\riface eth0 inet dhcp Inspected my file:\nAfter making the above changes in this file, do not need to run sudo dhclient eth0 anymore!\n","permalink":"https://anantcode.github.io/posts/2023-06-11-sudo-dhclient-eth0/","summary":"Problem: Was unable to connect to internet in the VM, and found the solution as described in a previous blog post.\nThe problem that remains is - had to sudo dhclient eth0 everytime when the VM restarts. Is there a way to do this automatically?\nSolution:\nUsing this post:\nhttps://superuser.com/questions/151936/how-to-automate-running-the-dhclient-in-ubuntu\ntried the steps:\nYou should check your network configuration in:\n/etc/network/interfaces\nIf you want DHCP, it should be something like this:","title":"sudo dhclient eth0 everytime Linux starts"},{"content":"While using a Kali Linux VM on VMWare Player, faced issues connecting to the internet from the VM.\nThe VM Settings have Network Adapter = NAT\nFound after troubleshooting:\nifconfig was not showing eth0 (only lo) (refer to 1 in Image 1)\nGot an idea to UP this by: https://reachsibi.wordpress.com/2021/01/08/how-to-fix-the-error-network-unreachable-when-you-ping-any-domain-computer-in-kali-linux-2020/\nThen this post here was useful to figure out that need to execute:\nsudo dhclient eth0 Summary:\nCheck ifconfig shows eth0. If not, follow next steps. ifconfig eth0 up to \u0026lsquo;up\u0026rsquo; the eth0 recheck if eth0 is up sudo dhclient eth0 ","permalink":"https://anantcode.github.io/posts/2023-06-10-kali-linux-vm-internet-not-working/","summary":"While using a Kali Linux VM on VMWare Player, faced issues connecting to the internet from the VM.\nThe VM Settings have Network Adapter = NAT\nFound after troubleshooting:\nifconfig was not showing eth0 (only lo) (refer to 1 in Image 1)\nGot an idea to UP this by: https://reachsibi.wordpress.com/2021/01/08/how-to-fix-the-error-network-unreachable-when-you-ping-any-domain-computer-in-kali-linux-2020/\nThen this post here was useful to figure out that need to execute:\nsudo dhclient eth0 Summary:\nCheck ifconfig shows eth0.","title":"Internet doesnt work in vm Kali Linux (on VMWare Player)"},{"content":"Docker Docker wants to make \u0026ldquo;installing\u0026rdquo; and running software super easy, without you needing to worry about dependencies (prereqs) required on the system (docker image will help with that).\n","permalink":"https://anantcode.github.io/posts/2023-05-31-docker/","summary":"Docker Docker wants to make \u0026ldquo;installing\u0026rdquo; and running software super easy, without you needing to worry about dependencies (prereqs) required on the system (docker image will help with that).","title":"Docker"},{"content":"Ports and what they mean as a process:\nSometimes working on react app, you run into issues like:\nSomething is already running on port 3000. To handle this:\nFor Linux/Mac OS search (sudo) run this in the terminal:\n$ lsof -i tcp:3000\r$ kill -9 PID On Windows:\nnetstat -ano | findstr :3000\rtskill typeyourPIDhere change tskill for taskkill in git bash Source: referring to this SO: https://stackoverflow.com/a/45130296\n","permalink":"https://anantcode.github.io/posts/2023-02-25-something-already-running-on-port/","summary":"Ports and what they mean as a process:\nSometimes working on react app, you run into issues like:\nSomething is already running on port 3000. To handle this:\nFor Linux/Mac OS search (sudo) run this in the terminal:\n$ lsof -i tcp:3000\r$ kill -9 PID On Windows:\nnetstat -ano | findstr :3000\rtskill typeyourPIDhere change tskill for taskkill in git bash Source: referring to this SO: https://stackoverflow.com/a/45130296","title":"Something Already Running on Port XXX"},{"content":"To open a new git-bash terminal from existing terminal:\nSet alias:\nalias git-bash=\u0026#39;/git-bash.exe \u0026amp; \u0026gt; /dev/null 2\u0026amp;\u0026gt;1\u0026#39; Simply type git-bash into your already open git bash terminal now. to open a new git bash terminal.\nAlso this opens the new terminal at the same path.\nRef: https://superuser.com/a/1360806\n","permalink":"https://anantcode.github.io/posts/2023-02-25-new-git-bash-window-from-existing/","summary":"To open a new git-bash terminal from existing terminal:\nSet alias:\nalias git-bash=\u0026#39;/git-bash.exe \u0026amp; \u0026gt; /dev/null 2\u0026amp;\u0026gt;1\u0026#39; Simply type git-bash into your already open git bash terminal now. to open a new git bash terminal.\nAlso this opens the new terminal at the same path.\nRef: https://superuser.com/a/1360806","title":"New Git Bash Terminal From Existing"},{"content":"When using suitecloud command from npm package (globally installed) on windows (powershell inside VSCodde), got the following error:\nFile C:\\Users\\Anant\\AppData\\Roaming\\npm\\suitecloud.ps1 cannot be loaded because running scripts is disabled on this system. For more information, see about_Execution_Policies at https:/go.microsoft.com/fwlink/?LinkID=135170. At line:1 char:1 + suitecloud project:deploy + ~~~~~~~~~~ + CategoryInfo : SecurityError: (:) [], PSSecurityException + FullyQualifiedErrorId : UnauthorizedAccess On googling found the reason and solution:\nhttps://www.sharepointdiary.com/2014/03/fix-for-powershell-script-cannot-be-loaded-because-running-scripts-is-disabled-on-this-system.html\nSummary:\n\u0026ldquo;Execution policy\u0026rdquo; of Windows powershell - was set (for some reason - default) to Restricted. This is done to prevent untrusted scripts which can affect your Windows client environment.\nSee it by Get-ExecutionPolicy and change it by Set-ExecutionPolicy\n","permalink":"https://anantcode.github.io/posts/2023-01-17-powershell-execution-policy/","summary":"When using suitecloud command from npm package (globally installed) on windows (powershell inside VSCodde), got the following error:\nFile C:\\Users\\Anant\\AppData\\Roaming\\npm\\suitecloud.ps1 cannot be loaded because running scripts is disabled on this system. For more information, see about_Execution_Policies at https:/go.microsoft.com/fwlink/?LinkID=135170. At line:1 char:1 + suitecloud project:deploy + ~~~~~~~~~~ + CategoryInfo : SecurityError: (:) [], PSSecurityException + FullyQualifiedErrorId : UnauthorizedAccess On googling found the reason and solution:\nhttps://www.sharepointdiary.com/2014/03/fix-for-powershell-script-cannot-be-loaded-because-running-scripts-is-disabled-on-this-system.html\nSummary:\n\u0026ldquo;Execution policy\u0026rdquo; of Windows powershell - was set (for some reason - default) to Restricted.","title":"Powershell ExecutionPolicy"},{"content":"Started with official documentation of React Native.\nExpo Go Problem 1: Network Response Timeout Error.\nGoogled - found that had to change connection from LAN to tunnel: https://stackoverflow.com/questions/43593042/network-response-time-out-error-create-react-native-app-expo\nnpx expo start --tunnel Saw that solution was to toggle this on a UI - but didnt find the UI (Metro UI)\nProblem 2: The Metro UI would not open in Browser.\nFound the reason: https://github.com/expo/expo/issues/19069\nThe Web UI was deprecated a while back. Please read the full announcement in this blog post: https://blog.expo.dev/sunsetting-the-web-ui-for-expo-cli-ab12936d2206\n","permalink":"https://anantcode.github.io/posts/2023-01-16-react-native-first/","summary":"Started with official documentation of React Native.\nExpo Go Problem 1: Network Response Timeout Error.\nGoogled - found that had to change connection from LAN to tunnel: https://stackoverflow.com/questions/43593042/network-response-time-out-error-create-react-native-app-expo\nnpx expo start --tunnel Saw that solution was to toggle this on a UI - but didnt find the UI (Metro UI)\nProblem 2: The Metro UI would not open in Browser.\nFound the reason: https://github.com/expo/expo/issues/19069\nThe Web UI was deprecated a while back.","title":"React Native Setup - Intro"},{"content":"What is Hydration? As per wikipedia:\nIn web development, hydration or rehydration is a technique in which client-side JavaScript converts a static HTML web page, delivered either through static hosting or server-side rendering, into a dynamic web page by attaching event handlers to the HTML elements.\nIt makes the server rendered website fully interactive.\nMajor frameworks like Next, Nuxt, Angular use it.\nPage load stages. (source: Fireship)\n","permalink":"https://anantcode.github.io/posts/2022-10-22-hydration/","summary":"What is Hydration? As per wikipedia:\nIn web development, hydration or rehydration is a technique in which client-side JavaScript converts a static HTML web page, delivered either through static hosting or server-side rendering, into a dynamic web page by attaching event handlers to the HTML elements.\nIt makes the server rendered website fully interactive.\nMajor frameworks like Next, Nuxt, Angular use it.\nPage load stages. (source: Fireship)","title":"Hydration"},{"content":"ARM vs AMD\nWhen downloading Hugo. It gives the binary which we can place in PATH.\nThis binary comes in 2 flavours for Windows:\nARM AMD How to find your Windows Hardware is AMD or ARM \u0026hellip;so that you can download the correct binary?\nTurns out its very simple:\nD:\\mywork\u0026gt;echo %PROCESSOR_ARCHITECTURE%\rAMD64\rD:\\mywork\u0026gt; ","permalink":"https://anantcode.github.io/posts/2022-10-22-amd-vs-arm/","summary":"ARM vs AMD\nWhen downloading Hugo. It gives the binary which we can place in PATH.\nThis binary comes in 2 flavours for Windows:\nARM AMD How to find your Windows Hardware is AMD or ARM \u0026hellip;so that you can download the correct binary?\nTurns out its very simple:\nD:\\mywork\u0026gt;echo %PROCESSOR_ARCHITECTURE%\rAMD64\rD:\\mywork\u0026gt; ","title":"AMD vs ARM"},{"content":"Also called CSRF / XSRF (Cross Site Request Forgery)\nWhen a malicious site can cause a visitor\u0026rsquo;s browser to make a request to your server that causes a change on server.\nThe server thinks that because the request comes with the user\u0026rsquo;s cookies, the user wanted to submit that form.\nOn every request to a site A, from browser, the browser includes automatically the cookies that came from Site A.\nCookies contain sessionId.\nOther sites cannot read cookie\u0026rsquo;s content(that came from 1 site (server))\nNext time when you request another page, your browser will automatically send cookies containing your sessionID.\nCookies are sent using HTTP Headers. HTTP Headers.\nCookies are used as transportation medium for session IDs.\nbrowsers will automatically send any cookies associated with the websites.\nCookies can be or could have been modified by client therefore server cannot trust them and always server will validate it.\n(in other words - cookies could have been modified as they come from client - so server cant trust info in them - unless it validates it then its fine - so only sesssionID is stored in cookies(no other info). Storing sessionID works because server also validates it with its own copy every time (from some table of session IDs in some DB)).\n","permalink":"https://anantcode.github.io/posts/2022-09-24-csrf-basics/","summary":"Also called CSRF / XSRF (Cross Site Request Forgery)\nWhen a malicious site can cause a visitor\u0026rsquo;s browser to make a request to your server that causes a change on server.\nThe server thinks that because the request comes with the user\u0026rsquo;s cookies, the user wanted to submit that form.\nOn every request to a site A, from browser, the browser includes automatically the cookies that came from Site A.","title":"CSRF basics"},{"content":"Running shell commands in your node application:\nFound great explanation here,\nThe Child Process Module When we execute shell commands, we are running code outside of our Node.js application. In order to do this, we need to run these commands in a child process.\nA child process is code that is run in a different thread (and process id) outside your Node.js application. However, we can still send and receive information from the child process using standard I/O streams.\nIn Node.js, we can use the child_process standard library to start these processes to run shell commands.\nRunning Basic Shell Commands# To run a simple command and read its output, we can use the exec function.\nIn this example, let’s list the files in our current directory using ls, and print the output from our Node.js code:\nconst { exec } = require(\u0026#39;node:child_process\u0026#39;) // run the `ls` command using exec exec(\u0026#39;ls ./\u0026#39;, (err, output) =\u0026gt; { // once the command has completed, the callback function is called if (err) { // log and return if we encounter an error console.error(\u0026#34;could not execute command: \u0026#34;, err) return } // log the output received from the command console.log(\u0026#34;Output: \\n\u0026#34;, output) }) Note\nWhen we run exec, our application spawns a shell ('/bin/sh' by default) and runs the given command on that shell. This means that the command is first processed by the shell and then executed. So for example, when we run ls ./*.md , the shell processes ./*.md into README.md and then runs the command ls README.md:\nWe are also limited to 1MB by default as the maximum size of output generated by the command.\nExecuting Long Running Commands The previous example executed the ls command that returned its output immediately. What about commands whose output is continuous, or takes a long time to retrieve?\nFor example, when we run the ping command, we get continuous output at periodic intervals:\n➜ ~ ping google.com PING google.com (142.250.77.110): 56 data bytes 64 bytes from 142.250.77.110: icmp_seq=0 ttl=116 time=11.397 ms 64 bytes from 142.250.77.110: icmp_seq=1 ttl=116 time=17.646 ms ## this is received after 1 second 64 bytes from 142.250.77.110: icmp_seq=2 ttl=116 time=10.036 ms ## this is received after 2 seconds 64 bytes from 142.250.77.110: icmp_seq=3 ttl=116 time=9.656 ms ## and so on # ... More in the article. Check it (link at start)\n","permalink":"https://anantcode.github.io/posts/2022-09-15-execute-command-line-from-node/","summary":"Running shell commands in your node application:\nFound great explanation here,\nThe Child Process Module When we execute shell commands, we are running code outside of our Node.js application. In order to do this, we need to run these commands in a child process.\nA child process is code that is run in a different thread (and process id) outside your Node.js application. However, we can still send and receive information from the child process using standard I/O streams.","title":"Running shell commands from a Node application"},{"content":"How to update 1 branch local (say A) - to match exactly the remote branch A\nIf you have any commits made locally, remove them - match the remote branch A. Any untracked files also remove. develop branch is an example case of A - I always try to keep my local develop branch matching to remote because I never do commits directly to develop branch locally apart from updating local develop to match remote develop.\nUseful when develop branch has unwanted changes.\ngit checkout master git reset --hard origin/master That is,\nSwitch to that branch A, and reset --hard origin/A This SO has good details.\n","permalink":"https://anantcode.github.io/posts/2022-07-12-update-local-branch-with-clean-copy-of-remote/","summary":"How to update 1 branch local (say A) - to match exactly the remote branch A\nIf you have any commits made locally, remove them - match the remote branch A. Any untracked files also remove. develop branch is an example case of A - I always try to keep my local develop branch matching to remote because I never do commits directly to develop branch locally apart from updating local develop to match remote develop.","title":"Git - Update Local Branch With Clean Copy of Remote branch"},{"content":"Apart from\ndiskmgmt.msc On cmd: wmic diskdrive get size\nC:\\Users\\Anant\u0026gt;wmic diskdrive get size Size 256052966400 Above shows ~ 256 GB\n256,052,966,400\nSame on diskmgnt.msc :\n","permalink":"https://anantcode.github.io/posts/2022-06-29-disk-size-on-your-windows-machine/","summary":"Apart from\ndiskmgmt.msc On cmd: wmic diskdrive get size\nC:\\Users\\Anant\u0026gt;wmic diskdrive get size Size 256052966400 Above shows ~ 256 GB\n256,052,966,400\nSame on diskmgnt.msc :","title":"Quickly check - Disk Size on your Windows machine"},{"content":"The remote tracking branches may still exist in your local after a feature branch is merged(to a main branch) and deleted from remote (the normal pull request workflow)\nThe corresponding local branches too may exist and pile up locally, if you are too lazy to delete them.\nIs there a way to use the information available on remote (say only main branch exists on remote (the longest living branch.)) -\nI want to:\nGet rid of the remote tracking branches that my local still shows (although the actual remote branches are now deleted, probably because they were merged-and-then-deleted) Get rid of local branches that I was too lazy to delete - and which have been merged on remote already (and deleted - dont exist on remote anymore because merged) Everything in above screenshot in 1 (except remotes/origin/main) - is non existent in reality on remote. So want to delete these tracking branches (they start with remote/...) from my local too.\nEverything under 2 (except main) is branches that I sent to remote, created MR, got merged remotly, and I was lazy/forgot to delete from local. Most likely wont be using them ever (unless some rework is needed - but that should anyway happen as new feature/fix). So its safe to delete because its content is already merged to a long living branch - thats why it was delted on remote! Just want to do the same but now.\nFound this SO has some great ways discussed to do this.\nAnd also this improved solution.\n# Step 1 git remote prune origin # Step 2 git branch --merged # better, if main is the long living branch name that appears in when doing `git branch --merged` then to avoid deleting `main` branch: git branch --merged main | grep -v \u0026#39;^[ *]*main$\u0026#39; | xargs git branch -d # Step 3 xargs git branch -d If you want to delete all local branches that are already merged into master, you can use the following command:\ngit branch --merged master | grep -v \u0026#39;^[ *]*master$\u0026#39; | xargs git branch -d If you are using main as your master branch, you should modify the command accordingly:\ngit branch --merged main | grep -v \u0026#39;^[ *]*main$\u0026#39; | xargs git branch -d ","permalink":"https://anantcode.github.io/posts/2022-06-28-remove-tracking-branches-no-longer-on-remote/","summary":"The remote tracking branches may still exist in your local after a feature branch is merged(to a main branch) and deleted from remote (the normal pull request workflow)\nThe corresponding local branches too may exist and pile up locally, if you are too lazy to delete them.\nIs there a way to use the information available on remote (say only main branch exists on remote (the longest living branch.)) -","title":"Git - Remove Tracking Branches that are no longer on remote"},{"content":"Add a better link (styling), remove button I originally have 3 things\nFirst one is:\n\u0026lt;li\u0026gt;\r\u0026lt;Link href=\u0026#34;/\u0026#34;\u0026gt;All Notes\u0026lt;/Link\u0026gt;\r\u0026lt;/li\u0026gt; The button, however are:\n\u0026lt;li\u0026gt;\r\u0026lt;button onClick={() =\u0026gt; signIn()}\u0026gt;Sign Up\u0026lt;/button\u0026gt;\r\u0026lt;/li\u0026gt; Either style the buttons, or use Link.\nTried using Link for Sign Up\nBut Link cannot be without href , get error.\nGoogled - create link without href, says to use #, but it didnt work for me:\nhttps://stackoverflow.com/questions/20165590/make-a-clickable-link-with-onclick-but-without-href In same SO, this answer worked for me well: https://stackoverflow.com/a/20165637/11515646\nSo the change was:\n\u0026lt;li\u0026gt; - \u0026lt;button onClick={() =\u0026gt; signIn()}\u0026gt;Sign Up\u0026lt;/button\u0026gt; + \u0026lt;a className={classes.link} onClick={() =\u0026gt; signIn()}\u0026gt; + Sign Up + \u0026lt;/a\u0026gt; \u0026lt;/li\u0026gt; and in the related CSS:\n+++ b/components/layout/MainNavigation.module.css @@ -37,3 +37,7 @@ .header a.active { color: white; } + +.link { + cursor: pointer; +} Also BTW, running locally the OAuth did not work because Credentials \u0026gt; Redirect URI in Google API Console did not have localhost anymore.\nBut Google lets you add multiple, so I did it and locally also OAuth works now:\nGreat success!\nObserved that mylink was coming undefined (just reading DOMAIN from process.env.DOMAIN)\nSo realiezed that NextJS needs a prefix NEXT_PUBLIC_ on an env var if you want that var to be available on browser too.\nThat is where I need - on browser to show on Modal.\nrenamed in local .env.local and also on Vercel project env variables.\nWorks now!\nAnother error: https://yournote.vercel.app/new-note/xian991gm\nWhen using a good My Link, getting a 500 error.\non checking logs:\non Vercel - nothing useful\nbut on locally found that:\ndb\\DBManager.js (99:31) @ Object.getUser 97 | 98 | async function getUser(username) { \u0026gt; 99 | const uri = `mongodb+srv://${user}:${pass}@cluster0.xf7jy.mongodb.net/?retryWrites=true\u0026amp;w=majority`; | ^ 100 | const client = await MongoClient.connect(uri); 101 | const db = client.db(\u0026#34;users\u0026#34;); 102 | const user = await db.collection(\u0026#34;users\u0026#34;).findOne({ username }); Fixed the bug.\n","permalink":"https://anantcode.github.io/posts/2022-06-12-day18-100doc/","summary":"Add a better link (styling), remove button I originally have 3 things\nFirst one is:\n\u0026lt;li\u0026gt;\r\u0026lt;Link href=\u0026#34;/\u0026#34;\u0026gt;All Notes\u0026lt;/Link\u0026gt;\r\u0026lt;/li\u0026gt; The button, however are:\n\u0026lt;li\u0026gt;\r\u0026lt;button onClick={() =\u0026gt; signIn()}\u0026gt;Sign Up\u0026lt;/button\u0026gt;\r\u0026lt;/li\u0026gt; Either style the buttons, or use Link.\nTried using Link for Sign Up\nBut Link cannot be without href , get error.\nGoogled - create link without href, says to use #, but it didnt work for me:\nhttps://stackoverflow.com/questions/20165590/make-a-clickable-link-with-onclick-but-without-href In same SO, this answer worked for me well: https://stackoverflow.","title":"Day18 #100DaysOfCode"},{"content":"Getting App ready to deploy remove hardcoded localhost\nexternalize it to\n.env.local\nDOMAIN=\u0026#34;localhost\u0026#34;\rPORT=3000 and use in code as:\nOld:\nconst HOME_URL = \u0026#34;localhost:3000\u0026#34;; New:\nconst HOME_URL = `${process.env.DOMAIN}:${process.env.PORT}`; Change also somewhere in Google OAuth\u0026hellip; I gave somewhere in google auth setup, the localhost as callback URL. Will update it with cloud url (production env. url, where I deploy)\nGoogle it:\ngoogle oauth callback URL googled google oauth setup found a visited URL: Integrating Google Sign-In into your web app Go to the Credentials page. - this should be my goto place.\nLook for OAuth 2.0 Client IDs\nGot it!\nAuthorized redirect URIs is what I was looking for! edit: later saw I can add both localhost and PROD,\nAlso BTW, running locally the OAuth did not work because Credentials \u0026gt; Redirect URI in Google API Console did not have localhost anymore.\nBut Google lets you add multiple, so I did it and locally also OAuth works now:\nI think app is ready tp deploy. Only some cosmetic improvements - will do it later.\noh I forgot DB!\nto store DB credentials, remove my custom solution - replace with .env\nGoogle nextjs deploy next build generates an optimized version of your application for production. This output is generated inside the .next folder: All JavaScript code inside .next has been compiled and browser bundles have been minified to help achieve the best performance and support all modern browsers.\nAll this on Nextjs documentation: https://nextjs.org/docs/deployment\nAlso if using Vercel, even the next build is run automatically be Vercel. Any changes - just git push and Vercel will redeploy.\nI am trying to deploy to Vercel Now.\nDeploying on Vercel Go to vercel. Once logged in (signup if needed) you can add a GitHub account , or just few repos so Vercel can access them.\nTo add particular repo, I used again: (alreday have some repos connected to vercel, dont have all repos permission to Vercel, I do it when needed, on repo basis) As soon as I click Import, the next screen lets me\nselect a Preset (auto fills after detecting this is Nextjs app) define env variables if any. Yess Got error\nFailed to compile. ./pages/api/restricted.js 2:1 Warning: Assign arrow function to a variable before exporting as module default import/no-anonymous-default-export ./components/home/NoteList.js 11:11 Error: Missing \u0026#34;key\u0026#34; prop for element in iterator react/jsx-key ./components/modal/Modal.js 25:20 Error: \u0026#39;StyledModalTitle\u0026#39; is not defined. react/jsx-no-undef info - Need to disable some ESLint rules? Learn more here: https://nextjs.org/docs/basic-features/eslint#disabling-rules Error: Command \u0026#34;npm run build\u0026#34; exited with 1 Then saw why it was working locally.\nLocally tried to build - it also falied.\nwith same error:\nFailed to compile. ./pages/api/restricted.js 2:1 Warning: Assign arrow function to a variable before exporting as module default import/no-anonymous-default-export ./components/home/NoteList.js 11:11 Error: Missing \u0026#34;key\u0026#34; prop for element in iterator react/jsx-key ./components/modal/Modal.js 25:20 Error: \u0026#39;StyledModalTitle\u0026#39; is not defined. react/jsx-no-undef For the last error, googled styled-components, and guessed to import looking at https://styled-components.com/\nimport styled, { StyledModalTitle } from \u0026quot;styled-components\u0026quot;; in components\\modal\\Modal.js\nnpm run build Locally - worked, no longer the error: Error: \u0026lsquo;StyledModalTitle\u0026rsquo; is not defined. But still deploy gave error that styled-components does not export StyledModalTitle\nNext, tried to google, and found this: https://gist.github.com/tommymarshall/facbb6152e0a4fba0dab0f396ce89fb4. So accordingly added:\nconst StyledModalTitle = styled.h1` font-size: 20px; `; after this, vercel deploy did not face same error\u0026hellip; (looks like passed that stage, because compiled successflly), but now goot new error\ninfo - Creating an optimized production build... info - Compiled successfully info - Collecting page data... \u0026gt; Build error occurred MongoServerSelectionError: connection \u0026lt;monitor\u0026gt; to 35.154.177.91:27017 closed at Timeout._onTimeout (/vercel/path0/node_modules/mongodb/lib/sdam/topology.js:305:38) at listOnTimeout (node:internal/timers:559:17) at processTimers (node:internal/timers:502:7) { type: \u0026#39;MongoServerSelectionError\u0026#39;, reason: { type: \u0026#39;ReplicaSetNoPrimary\u0026#39;, servers: {}, stale: false, compatible: true, heartbeatFrequencyMS: 10000, setName: \u0026#39;atlas-xs71cx-shard-0\u0026#39; } } Error: Command \u0026#34;npm run build\u0026#34; exited with 1 Maybe mongoDB does not allow vercel server/IP to connect.\ngoogled how to mongodb allow connection from another server\nbut I wanted a quick fix, so decided to first try making db public access\nLogin to Mongo \u0026gt; Database Acceess : didnt look like useful\nNetwork Access: yes! this maybe I need to change.\nGot this error: check the server logs so I found function logs in vercel on my project. Saw this.\n[GET] /api/auth/providers\r20:07:33:85\r2022-06-12T14:37:33.969Z\t72eb66ff-165c-4120-bf78-d8a999733425\tERROR\t[next-auth][error][NO_SECRET] https://next-auth.js.org/errors#no_secret Please define a `secret` in production. MissingSecret [MissingSecretError]: Please define a `secret` in production.\rat assertConfig (/var/task/node_modules/next-auth/core/lib/assert.js:26:14)\rat NextAuthHandler (/var/task/node_modules/next-auth/core/index.js:34:52)\rat NextAuthNextHandler (/var/task/node_modules/next-auth/next/index.js:21:51)\rat /var/task/node_modules/next-auth/next/index.js:57:38\rat Object.apiResolver (/var/task/node_modules/next/dist/server/api-utils/node.js:185:15)\rat processTicksAndRejections (node:internal/process/task_queues:96:5)\rat async NextNodeServer.runApi (/var/task/node_modules/next/dist/server/next-server.js:395:9)\rat async Object.fn (/var/task/node_modules/next/dist/server/base-server.js:496:37)\rat async Router.execute (/var/task/node_modules/next/dist/server/router.js:226:36)\rat async NextNodeServer.run (/var/task/node_modules/next/dist/server/base-server.js:606:29) {\rcode: \u0026#39;NO_SECRET\u0026#39;\r} Googled found this:\nNO_SECRET In production, we expect you to define a secret property in your configuration. In development, this is shown as a warning for convenience. Read more\nBTW since the redirect uri is not localhost (I changed it), locally running shows this error on trying to login with google Googled the error and found: https://github.com/nextauthjs/next-auth/issues/3245\nAdd SECRET=\u0026ldquo;MY_STRONG_SECRET\u0026rdquo; to your .env Replace MY_STRONG_SECRET with a strong secret generate by a tool like https://generate-secret.vercel.app/32 Add secret: process.env.SECRET, at the same level as the providers array to pages/api/auth/[...nextauth].js Later also saw: in redirect URI, the https was missing, http gave same error. Updated https instead of http Fixed this problem too:\nDone!\nFinally the app is deployed and working!!\n","permalink":"https://anantcode.github.io/posts/2022-06-08-100doc-day17/","summary":"Getting App ready to deploy remove hardcoded localhost\nexternalize it to\n.env.local\nDOMAIN=\u0026#34;localhost\u0026#34;\rPORT=3000 and use in code as:\nOld:\nconst HOME_URL = \u0026#34;localhost:3000\u0026#34;; New:\nconst HOME_URL = `${process.env.DOMAIN}:${process.env.PORT}`; Change also somewhere in Google OAuth\u0026hellip; I gave somewhere in google auth setup, the localhost as callback URL. Will update it with cloud url (production env. url, where I deploy)\nGoogle it:\ngoogle oauth callback URL googled google oauth setup found a visited URL: Integrating Google Sign-In into your web app Go to the Credentials page.","title":"Day17 #100DaysOfCode"},{"content":"Show Modal in nextjs Show the personal link in a modal\nBetter UI\nUser may copy\nGoogle how to show modal.\nFound this, following it: https://devrecipes.net/modal-component-with-next-js/\nIt says to create a file _document.js that nextjs supports to render in a specific DOM node outside of root node of React.\nThe way to modify the root DOM structure of our app is to use the _document.js file, which is provided by the library. You can read more about it in the official documentation.\nit worked!\nBTW, noticed that this DID NOT work: (got )\nhttps://localhost:3000/new-note/xian991gm\nGot this browser error:\nThis site can’t provide a secure connectionlocalhost sent an invalid response.\rTry running Windows Network Diagnostics.\rERR_SSL_PROTOCOL_ERROR But this worked:\nhttp://localhost:3000/new-note/xian991gm\nor if I simply write\nlocalhost:3000/new-note/xian991gm in address bar, (then browser adds http:// automatically, if I do by hand)\nSummary: TIL: with localhost, https wont work. Use http\n","permalink":"https://anantcode.github.io/posts/2022-06-05-day16-100doc/","summary":"Show Modal in nextjs Show the personal link in a modal\nBetter UI\nUser may copy\nGoogle how to show modal.\nFound this, following it: https://devrecipes.net/modal-component-with-next-js/\nIt says to create a file _document.js that nextjs supports to render in a specific DOM node outside of root node of React.\nThe way to modify the root DOM structure of our app is to use the _document.js file, which is provided by the library.","title":"Day16 #100DaysOfCode"},{"content":"While looking for examples if a route can cause a modal (popup) to appear.\nI saw this discussion: https://github.com/anantcode/anote-next/pull/2\nthat leads to this example: https://github.com/vercel/next.js/tree/canary/examples/with-route-as-modal\nThat had this link to live preview: preview live with StackBlitz\n","permalink":"https://anantcode.github.io/posts/2022-06-04-stackblitz/","summary":"While looking for examples if a route can cause a modal (popup) to appear.\nI saw this discussion: https://github.com/anantcode/anote-next/pull/2\nthat leads to this example: https://github.com/vercel/next.js/tree/canary/examples/with-route-as-modal\nThat had this link to live preview: preview live with StackBlitz","title":"Stackblitz"},{"content":"Signup using Google If simply a user logs in using Google for first time - we also sign him up(record him in our DB)\nIf user selected sign up - we check for already existing record in our DB and create session - else add in records and create session(messages will be empty) If user selected Sign In (first time) - we check if user is not found in DB - we add that user. So Sign In and Sign Up with Google will have common (same) internal impl.\nDecided to use the getNotesByEmail DBManager to even register new user if needed (if that user is not already existing in my DB)\nPassing it the second required thing to register (name) - its a shortcut but its ok.\nRegistering new user now! sign up works!\nMy Personal Link button: Added at main navigation bar:\nshowing an alert for now. The URL that user needs to see is : https://${HOME_URL}:${PORT}/new-note/${username}\ngenerating username from email, as I am in MainNavigation, there is no other way.\nI have session object - can get email, name from there. But need to show username.\nGenerating the username from email - by same logic I used in DBManager.\nBut DBManager fails - with dns error - it seems just to import a module that has mongodb imported - but not being used - would fail.\nSo created util/UserDataHelper.js\nthis worked!\n--- a/components/layout/MainNavigation.js +++ b/components/layout/MainNavigation.js @@ -1,10 +1,27 @@ import classes from \u0026#34;./MainNavigation.module.css\u0026#34;; import Link from \u0026#34;next/link\u0026#34;; import { useSession, signIn, signOut } from \u0026#34;next-auth/react\u0026#34;; +import UserDataHelper from \u0026#34;../../util/UserDataHelper\u0026#34;; +//import DBManager from \u0026#34;../../db/DBManager\u0026#34;; + +const HOME_URL = \u0026#34;https:/localhost:3000\u0026#34;; function MainNavigation() { const { data: session } = useSession(); + function showLink() { + const username = UserDataHelper.constructUsernameFromEmail( + session.user.email + ); //DBManager.constructUsernameFromEmail(session.user.email); + let personalLink = HOME_URL + \u0026#34;/new-note/\u0026#34; + username; + + alert( + \u0026#34;Allow people to anonymously write to you using your personal link:\\n\u0026#34; + + \u0026#34;Share your personal link: \\n\u0026#34; + + personalLink + ); + } + if (session) { return ( \u0026lt;header className={classes.header}\u0026gt; @@ -16,6 +33,9 @@ function MainNavigation() { \u0026lt;li\u0026gt; \u0026lt;Link href=\u0026#34;/\u0026#34;\u0026gt;All Notes\u0026lt;/Link\u0026gt; \u0026lt;/li\u0026gt; + \u0026lt;li\u0026gt; + \u0026lt;button onClick={() =\u0026gt; showLink()}\u0026gt;My Personal Link\u0026lt;/button\u0026gt; + \u0026lt;/li\u0026gt; \u0026lt;li\u0026gt; ","permalink":"https://anantcode.github.io/posts/2022-06-04-day15-100doc/","summary":"Signup using Google If simply a user logs in using Google for first time - we also sign him up(record him in our DB)\nIf user selected sign up - we check for already existing record in our DB and create session - else add in records and create session(messages will be empty) If user selected Sign In (first time) - we check if user is not found in DB - we add that user.","title":"Day15 #100DaysOfCode"},{"content":"After signin is implemented and you get session -\nuseSession hook by \u0026rsquo;next-auth/react\u0026rsquo; gives you session object in react-function-component\nget the user data from:\nimport { useSession } from \u0026#34;next-auth/react\u0026#34;; export default function Home(props) { const { data: session } = useSession(); if (session) { console.log(`User: -- ${session.user.email}`); Notice the if check on session - Tried to use session without checking if session is not undefined. Got errors - figured it our eventually.\nAlso you can use getSession on server side functions:\nimport { useSession, getSession } from \u0026#34;next-auth/react\u0026#34;; export async function getServerSideProps(ctx) { const session = await getSession(ctx); let notes = []; if (session) { console.log(\u0026#34;ANN1234 \u0026#34; + session); const notesObj = await DBManager.getNotesByEmail(session.user.email); notes = JSON.parse(JSON.stringify(notesObj)); console.log(`This is original props, notes = ${JSON.stringify(notes)}`); } else { console.log(\u0026#34;ANN1234: In gSSP - session not found\u0026#34;); } return { props: { notes: notes, }, }; } Notice getSession in above code.\nMust read getSession documentation: https://next-auth.js.org/getting-started/client#getsession\nComplete code:\npages\\index.js\nimport NoteList from \u0026#34;../components/home/NoteList\u0026#34;; import DBManager from \u0026#34;../db/DBManager\u0026#34;; import { useSession, getSession } from \u0026#34;next-auth/react\u0026#34;; export default function Home(props) { const { data: session } = useSession(); if (session) { const user = { name: session.user.name, email: session.user.email, }; return \u0026lt;NoteList notes={props.notes} user={user} /\u0026gt;; } else { return \u0026lt;h1\u0026gt;SignIn to continue\u0026lt;/h1\u0026gt;; } } export async function getServerSideProps(ctx) { const session = await getSession(ctx); let notes = []; if (session) { console.log(\u0026#34;ANN1234 \u0026#34; + session); const notesObj = await DBManager.getNotesByEmail(session.user.email); notes = JSON.parse(JSON.stringify(notesObj)); console.log(`This is original props, notes = ${JSON.stringify(notes)}`); } else { console.log(\u0026#34;ANN1234: In gSSP - session not found\u0026#34;); } return { props: { notes: notes, }, }; } Notice the way to use getSession:\nconst session = await getSession(ctx);\nMust read getSession documentation: https://next-auth.js.org/getting-started/client#getsession\nNotice the DB changes I had to do: getNotesByEmail\nSo the DB changes were:\npatch:\nasync function getNotesByEmail(email) { const client = await getClient(); const db = client.db(\u0026#34;users\u0026#34;); const user = await db.collection(\u0026#34;users\u0026#34;).findOne({ email: email }); const username = user.username; console.log( `got username from email, in DBM getNotesByEmail: username = ${username})}` ); client.close(); return await getNotesByUsername(username); //TODO 2 times db connection and close for getNotesByEmail - make it 1. } async function getNotesByUsername(username) { const client = await getClient(); const db = client.db(\u0026#34;notes\u0026#34;); const notes = await db .collection(\u0026#34;notes\u0026#34;) .find({ username: username }) .toArray(); console.log(`got notes in DBM getNotesByUsername : ${JSON.stringify(notes)}`); client.close(); return notes.map((note) =\u0026gt; ({ id: note._id, message: note.message })); } ","permalink":"https://anantcode.github.io/posts/2022-06-04-day14-100doc/","summary":"After signin is implemented and you get session -\nuseSession hook by \u0026rsquo;next-auth/react\u0026rsquo; gives you session object in react-function-component\nget the user data from:\nimport { useSession } from \u0026#34;next-auth/react\u0026#34;; export default function Home(props) { const { data: session } = useSession(); if (session) { console.log(`User: -- ${session.user.email}`); Notice the if check on session - Tried to use session without checking if session is not undefined. Got errors - figured it our eventually.","title":"Day14 #100DaysOfCode"},{"content":"Using Nextjs\u0026rsquo;s built in support for env. variables\nNext.js has built-in support for loading environment variables from .env.local into process.env.\nTried, it worked!\nSome mistakes I made:\nI named the file something.env.local - it didnt work - file should be on root with name .env.local. gitignore from nextjs also gives an idea of what this filename should be: # local env files\r.env*.local Accessing user data (name, email) Using session.user.email\nin pages\\index.js:\nimport NoteList from \u0026#34;../components/home/NoteList\u0026#34;; import DBManager from \u0026#34;../db/DBManager\u0026#34;; import { useSession } from \u0026#34;next-auth/react\u0026#34;; export default function Home(props) { const { data: session } = useSession(); if (session) { console.log(`User: -- ${session.user.email}`); return \u0026lt;NoteList notes={props.notes} user={props.user} /\u0026gt;; } else { return \u0026lt;h1\u0026gt;SignIn to continue\u0026lt;/h1\u0026gt;; } } export async function getStaticProps() { const notesObj = await DBManager.getAllNotes(); const notes = JSON.parse(JSON.stringify(notesObj)); console.log(`This is original props, notes = ${JSON.stringify(notes)}`); return { props: { notes, }, }; } The console log prints on browser console! It Works! ","permalink":"https://anantcode.github.io/posts/2022-06-02-day13-100doc/","summary":"Using Nextjs\u0026rsquo;s built in support for env. variables\nNext.js has built-in support for loading environment variables from .env.local into process.env.\nTried, it worked!\nSome mistakes I made:\nI named the file something.env.local - it didnt work - file should be on root with name .env.local. gitignore from nextjs also gives an idea of what this filename should be: # local env files\r.env*.local Accessing user data (name, email) Using session.user.email","title":"Day13 #100DaysOfCode"},{"content":"Beete Lamhe Mithoon\nAlvida Pritam\nAawarapan Banjarapan M. M. Keeravani\nAakhon me teri ajab si Vishal-Shekhar\nO Meri Jaan Pritam\nDil Kyu ye mera\nTujhe Sochta Hoon\nPyar ke Pal\nand so many more.\nHis renditions have a special place. Very dear and close to heart. One of a kind.\nKK is immortal - his music will continue to strike emotions to millions of listeners.\n","permalink":"https://anantcode.github.io/posts/2022-06-01-kk/","summary":"Beete Lamhe Mithoon\nAlvida Pritam\nAawarapan Banjarapan M. M. Keeravani\nAakhon me teri ajab si Vishal-Shekhar\nO Meri Jaan Pritam\nDil Kyu ye mera\nTujhe Sochta Hoon\nPyar ke Pal\nand so many more.\nHis renditions have a special place. Very dear and close to heart. One of a kind.\nKK is immortal - his music will continue to strike emotions to millions of listeners.","title":"KK"},{"content":"Add .env file Added env_var.env file at root with following content:\nGOOGLE_ID=\rGOOGLE_SECRET= with the values.\nAlso added it to gitignore\nInstall node module dotenv npm install dotenv\nand in pages\\api\\auth\\[...nextauth].js used at very start, this conditional require:\nif (process.env.NODE_ENV !== \u0026#34;production\u0026#34;) { require(\u0026#34;dotenv\u0026#34;).config(); } npm run dev - start my next app\nforgot to do the basic - npm install next-auth\nrestart:\nAmazing! shows the login button because of change I did in components\\layout\\MainNavigation.js that is similiar to this change that next-auth expects.\non clicking this also shows Sign in with Google\nbut on clicking I saw unexpected:\nsaw this error on server log:\nclient_id is required\rTypeError: client_id is required logged and saw the values:\nif (process.env.NODE_ENV !== \u0026#34;production\u0026#34;) { require(\u0026#34;dotenv\u0026#34;).config(); } console.log(`google ID: ${process.env.GOOGLE_ID}`); console.log(`google ID: ${process.env.GOOGLE_SECRET}`); result:\ngoogle ID: undefined\rgoogle ID: undefined ok let me try to add the loading require('dotenv').config() at start of _app.js\ndidnt work.\nsearch on npm - https://www.npmjs.com/package/dotenv\nSaw that with import a different syntax:\n// .. or using ES6? import \u0026#39;dotenv/config\u0026#39; // see https://github.com/motdotla/dotenv#how-do-i-use-dotenv-with-import this also didnt work. Both are loaded as undefined.\nF it. For now hardcoding it - (dont commit it! )\nWorks! clicking button takes to the Google Auth\nwhy was loading env file not working? Anyway.\n| Also redirectes back to where the Sign In button was clicked, and button turns into SignOut\nNextjs has inbuilt support for env variables! Next.js has built-in support for loading environment variables from .env.local into process.env.\nSee more on the official documentation: https://nextjs.org/docs/basic-features/environment-variables\n","permalink":"https://anantcode.github.io/posts/2022-05-31-day12-100doc/","summary":"Add .env file Added env_var.env file at root with following content:\nGOOGLE_ID=\rGOOGLE_SECRET= with the values.\nAlso added it to gitignore\nInstall node module dotenv npm install dotenv\nand in pages\\api\\auth\\[...nextauth].js used at very start, this conditional require:\nif (process.env.NODE_ENV !== \u0026#34;production\u0026#34;) { require(\u0026#34;dotenv\u0026#34;).config(); } npm run dev - start my next app\nforgot to do the basic - npm install next-auth\nrestart:\nAmazing! shows the login button because of change I did in components\\layout\\MainNavigation.","title":"Day12 #100DaysOfCode"},{"content":"Learn how to work with environment variabes in Node.js\nCan check environment variables: Start node REPL: node in terminal (before this check if node is installed by node -v)\nconsole.log(process.env)\nconst app = require(\u0026#39;http\u0026#39;).createServer((req, res) =\u0026gt; res.send(\u0026#39;Ahoy!\u0026#39;)); //in case of PORT, this particular var is undefined usually in all cloud providers, so this way works - gets 3000, or prefers if YOU define something in sys env const PORT = process.env.PORT || 3000; app.listen(PORT, () =\u0026gt; { console.log(`Server is listening on port ${PORT}`); }); The line const PORT = process.env.PORT || 3000 will take the value of the PORT if it’s available or default to listening to 3000 as a fallback port. Try running the code by saving it in a file like server.js and run:\nnode server.js The output should be a message saying, \u0026ldquo;Server is listening on port 3000.\u0026rdquo; Stop the server with Ctrl+C and restart it with the following command:\nPORT=9999 node server.js The message should now say, “Server is listening on port 9999.” This means the PORT variable has been temporarily set in front of the node for this execution by PORT=9999.\nHow to set env variable PORT=9999 node server.js\nA similiar way to do this is:\nprocess.env.MY_VARIABLE = 'ahoy';\nboth above are temporary ways\nvalue is only set during the execution of this Node.js process and only available in child processes spawned by this process. You should avoid overriding environment variables as much as possible and just initialize a configuration variable in your code, as shown in the PORT example (works for PORT because usually in case of PORT, this particular var is undefined usually in all cloud providers, so this way works - gets 3000, or prefers if YOU define something in sys env) .env files If you develop multiple Node.js projects on one computer, you might have overlapping environment variable names. For example, different messaging apps might need different Twilio Messaging Service SIDs, but both would be called TWILIO_MESSAGE_SERVICE_SID. A great way to achieve project-specific configuration is by using .env files. These files allow you to specify a variety of different environment variables and associated values.\nTypically, you don’t want to checkin these files in source control. So when you create one, just add .env to your .gitignore file.\nbecause you dont checkin these, you can search and get .env.example - it is shared by others as template file, refer it to write your .env file and and write your values.\nHow do we load the values from this file? The easiest way is by using an npm module called dotenv. Simply install the module via npm:\nnpm install dotenv --save Afterward, add the following line to the very top of your entry file:\nrequire(\u0026#39;dotenv\u0026#39;).config(); This code will automatically load the .env file in the root of your project and initialize the values, skipping any variables already preset. Be careful not to use .env files in your production environment, though. Instead, set the values directly on the respective host. So you might want to wrap your load statement in an if statement:\nif (process.env.NODE_ENV !== \u0026#39;production\u0026#39;) { require(\u0026#39;dotenv\u0026#39;).config(); } With this code, we’ll only load the .env file if the server isn’t already in production mode.\nLet’s see this in action. Install dotenv in a directory, as shown above. Create an dotenv-example.js file in the same directory and place the following lines into it:\nconsole.log(\u0026#39;No value for FOO yet:\u0026#39;, process.env.FOO); if (process.env.NODE_ENV !== \u0026#39;production\u0026#39;) { require(\u0026#39;dotenv\u0026#39;).config(); } console.log(\u0026#39;Now the value for FOO is:\u0026#39;, process.env.FOO); Afterward, create a file called .env in the same directory with this content:\nFOO=bar Run the script:\nnode dotenv-example.js The output should look like:\nNo value for FOO yet: undefined Now the value for FOO is: bar As you can see, the value was loaded and defined using dotenv. If you rerun the same command with NODE_ENV set to production, you’ll see that it’ll stay undefined.\nNODE_ENV=production node dotenv-example.js Now the output should be:\nNo value for FOO yet: undefined Now the value for FOO is: undefined If you don’t want to modify your actual code, you can also use Node’s -r argument to load dotenv when executing the script. Change your dotenv-example.js file to:\nconsole.log(\u0026#39;The value for FOO is:\u0026#39;, process.env.FOO); Now execute the file as you normally would:\nnode dotenv-example.js The script should output that the current value for FOO is undefined. Now execute it with the appropriate flag to require dotenv:\nnode -r dotenv/config dotenv-example.js The result is that FOO is now set to bar since the .env file has been loaded. If you want to learn more about dotenv, make sure to check out its documentation.\nEnvironment Varialbes in Next.js Next.js has built-in support for loading environment variables from .env.local into process.env.\nSee more on the official documentation: https://nextjs.org/docs/basic-features/environment-variables\nReference: This article by Dominik Kundel\n","permalink":"https://anantcode.github.io/posts/2022-05-31-process-env-in-node/","summary":"Learn how to work with environment variabes in Node.js\nCan check environment variables: Start node REPL: node in terminal (before this check if node is installed by node -v)\nconsole.log(process.env)\nconst app = require(\u0026#39;http\u0026#39;).createServer((req, res) =\u0026gt; res.send(\u0026#39;Ahoy!\u0026#39;)); //in case of PORT, this particular var is undefined usually in all cloud providers, so this way works - gets 3000, or prefers if YOU define something in sys env const PORT = process.","title":"Environment variables in Node.js"},{"content":"To begin with,\nTo begin, obtain OAuth 2.0 client credentials from the Google API Console\nGot this from below:\nGoogle Documentation https://developers.google.com/identity/protocols/oauth2\nConfiguration\nhttps://console.developers.google.com/apis/credentials\nThen\nyour client application requests an access token from the Google Authorization Server, extracts a token from the response, and sends the token to the Google API that you want to access. Same steps in detail: given here: https://developers.google.com/identity/protocols/oauth2\nNew Project:\non same page, asks for Authorized redirect URI\nAs per https://next-auth.js.org/providers/google\nConfiguration\rhttps://console.developers.google.com/apis/credentials\rThe \u0026#34;Authorized redirect URIs\u0026#34; used when creating the credentials must include your full domain and end in the callback path. For example;\rFor production: https://{YOUR_DOMAIN}/api/auth/callback/google\rFor development: http://localhost:3000/api/auth/callback/google Going to use\nhttp://localhost:3000/api/auth/callback/google\n","permalink":"https://anantcode.github.io/posts/2022-05-30-day11-100doc/","summary":"To begin with,\nTo begin, obtain OAuth 2.0 client credentials from the Google API Console\nGot this from below:\nGoogle Documentation https://developers.google.com/identity/protocols/oauth2\nConfiguration\nhttps://console.developers.google.com/apis/credentials\nThen\nyour client application requests an access token from the Google Authorization Server, extracts a token from the response, and sends the token to the Google API that you want to access. Same steps in detail: given here: https://developers.google.com/identity/protocols/oauth2\nNew Project:\non same page, asks for Authorized redirect URI","title":"Day11 #100DaysOfCode"},{"content":"Continuing the 100doc challenge, although with a break 😜\nRead Part 1 here.\nSubmit the \u0026lsquo;message sent to a user\u0026rsquo; to DB, by username How to fetch\npromise version async await version https://rapidapi.com/guides/fetch-api-async-await\nDont forget to add req body!\nin client:\nin /[username].js\nfunction addNoteHandler(noteData) { //console.log(`in [username], got noteData: ${JSON.stringify(noteData)}`); //submit to DB API fetch(\u0026#34;/api/add-note\u0026#34;, { method: \u0026#34;POST\u0026#34;, body: JSON.stringify({ test: \u0026#34;test\u0026#34; }), // Adding headers to the request. It is actually optiona here. headers: { \u0026#34;Content-type\u0026#34;: \u0026#34;application/json; charset=UTF-8\u0026#34;, }, }) .then((res) =\u0026gt; { return res.json(); }) .then((res) =\u0026gt; { console.log(res); }); } at server:\nexport default async function handler(req, res) { //due to concatenation, prints [object Object] console.log(\u0026#34;at /api/add-note, req body \u0026#34; + req); //shows that type is object console.log(\u0026#34;typeof req body \u0026#34; + typeof req); // below commented line will give error: /* * https://stackoverflow.com/questions/27101240/typeerror-converting-circular-structure-to-json-in-nodejs * happens when strinfigying req. */ //console.log(\u0026#34;typeof req body \u0026#34; + JSON.stringify(req)); //directly printing req shows it is indeed an object (due to absence of concatenation, it shows its real content, instead of [object Object]) console.log(req); //access req.body without any problem console.log(req.body) // prints { test: \u0026#39;test\u0026#39; } res.status(200).json({ name: \u0026#34;John Doe\u0026#34; }); } When connecting to DB, I realized I have DB that looks like this (has this schema currently):\ndb: notes has collection notes:\n_id:6289dbb9665bacfa9931ad5d,\rmessage:\u0026#34;Message for you\u0026#34;\r_id:628c3d0303ce3a46a2e33025\rmessage:\u0026#34;Where are you?\u0026#34; db: users has collection users:\n_id\r:\r62904c3e4031695742c58665\rusername\r:\r\u0026#34;anant\u0026#34;\rname\r:\r\u0026#34;Anant\u0026#34;\r_id\r:\r62904c7a4031695742c58666\rusername\r:\r\u0026#34;anthony\u0026#34;\rname\r:\r\u0026#34;Anthony\u0026#34; So if I use the (1) notes db and notes collection, I need to have 1 more key: username.\nWill searching (\u0026lsquo;query\u0026rsquo;, when I load data) work well? If I store every user\u0026rsquo;s data in single collection? To answer this I googled: how to store user data in mongodb\nfound this blogpost\nand then this official documention, looks useful. Will check this later.\nTODO read above, specially the official\nFor now, updating the notes collection. adding 1 more key: username\nGoogle: how to insert to a collection mongodb\nits done using insertOne(\u0026lt;your object\u0026gt;)\nI noticed(because insetOne gave this error: error - TypeError: Cannot create property '_id' on string '{\u0026quot;username\u0026quot;:\u0026quot;anant\u0026quot;,\u0026quot;message\u0026quot;:\u0026quot;sfgsdfgasdfasdasasdfdfasdfadasdfsfadsfaasdfasdfdsfasdfasdfasfd\u0026quot;}') that I was passing string to it!\nmeans that req in api route handler is an object. req.body of the POST request is always a string (JSON string).\nSo need to parse it.\nWow it actually inserted it!!!\nAs we can see the data has different schema.\nAlso fixed the redirect after submit.\nNow - implement login and session with next-auth Next-Auth is used for authentication, from examples seems pretty cool.\nFollowing the getting started\nWill develop this feature on a new branch\ngit checkout -b login-impl\nStep 1\nAdd API route\nhttps://next-auth.js.org/getting-started/example#add-api-route\nConfigure Shared session state\nModified _app.js\nStep 2\nFrontend - Add React Hook\nhttps://next-auth.js.org/getting-started/example#frontend---add-react-hook\nNow thinking of doing this on Navigation/layout page.\ncomponents\\layout\\MainNavigation.js\nDid following change for now:\nimport classes from \u0026#34;./MainNavigation.module.css\u0026#34;;\rimport Link from \u0026#34;next/link\u0026#34;;\rimport { useSession, signIn, signOut } from \u0026#34;next-auth/react\u0026#34;;\rfunction MainNavigation() {\rconst { data: session } = useSession();\rif (session) {\rreturn (\r\u0026lt;header className={classes.header}\u0026gt;\r\u0026lt;div className={classes.logo}\u0026gt;\r\u0026lt;Link href=\u0026#34;/\u0026#34;\u0026gt;Notes\u0026lt;/Link\u0026gt;\r\u0026lt;/div\u0026gt;\r\u0026lt;nav\u0026gt;\r\u0026lt;ul\u0026gt;\r\u0026lt;li\u0026gt;\r\u0026lt;Link href=\u0026#34;/\u0026#34;\u0026gt;All Notes\u0026lt;/Link\u0026gt;\r\u0026lt;/li\u0026gt;\r\u0026lt;li\u0026gt;\r\u0026lt;button onClick={() =\u0026gt; signOut()}\u0026gt;Sign out\u0026lt;/button\u0026gt;\r\u0026lt;/li\u0026gt;\r\u0026lt;/ul\u0026gt;\r\u0026lt;/nav\u0026gt;\r\u0026lt;/header\u0026gt;\r);\r}\rreturn (\r\u0026lt;header className={classes.header}\u0026gt;\r\u0026lt;div className={classes.logo}\u0026gt;\r\u0026lt;Link href=\u0026#34;/\u0026#34;\u0026gt;Notes\u0026lt;/Link\u0026gt;\r\u0026lt;/div\u0026gt;\r\u0026lt;nav\u0026gt;\r\u0026lt;ul\u0026gt;\r\u0026lt;li\u0026gt;\r\u0026lt;Link href=\u0026#34;/\u0026#34;\u0026gt;All Notes\u0026lt;/Link\u0026gt;\r\u0026lt;/li\u0026gt;\r\u0026lt;li\u0026gt;\r\u0026lt;button onClick={() =\u0026gt; signIn()}\u0026gt;Sign in\u0026lt;/button\u0026gt;\r\u0026lt;/li\u0026gt;\r\u0026lt;/ul\u0026gt;\r\u0026lt;/nav\u0026gt;\r\u0026lt;/header\u0026gt;\r);\r}\rexport default MainNavigation; Step 3\nBackend - API Route\nhttps://next-auth.js.org/getting-started/example#backend---api-route\ncreate pages/api/restricted.js\nGoogle Documentation https://developers.google.com/identity/protocols/oauth2\nConfiguration https://console.developers.google.com/apis/credentials\n","permalink":"https://anantcode.github.io/posts/2022-05-28-day10-100doc/","summary":"Continuing the 100doc challenge, although with a break 😜\nRead Part 1 here.\nSubmit the \u0026lsquo;message sent to a user\u0026rsquo; to DB, by username How to fetch\npromise version async await version https://rapidapi.com/guides/fetch-api-async-await\nDont forget to add req body!\nin client:\nin /[username].js\nfunction addNoteHandler(noteData) { //console.log(`in [username], got noteData: ${JSON.stringify(noteData)}`); //submit to DB API fetch(\u0026#34;/api/add-note\u0026#34;, { method: \u0026#34;POST\u0026#34;, body: JSON.stringify({ test: \u0026#34;test\u0026#34; }), // Adding headers to the request. It is actually optiona here.","title":"Day10 #100DaysOfCode (Next app Part 2)"},{"content":"git commit -am \u0026ldquo;message\u0026rdquo; git commit -am \u0026quot;message\nAdds all the files in current working directory\nAlias git config --global alias.ac \u0026#34;commit -am\u0026#34; # How to use it: \u0026gt; git ac \u0026#34;message\u0026#34; Reword the last commit message git commit --amend -m \u0026quot;new message\u0026quot;\nAlso useful when you forgot to include or stage a couple of files with last commit.\ngit commit --amend --no-edit #if want no change in prev commit message This only works until before you havent alreday pushed your code to a remote repo.\nGit push with \u0026ndash;force (living dangerously) git push origin master --force This will overwrite the remote commits with state of your local code. (example if you wanted to correct the wording to be updated at remote too, because you earlier pushed the incorrect message - but beware, doing this will result in following:\nif you have commits on the remote branch that you dont have locally, they will be lost on remote! and your coworkeres wony be too happy about it. When pushed some garbage code to repo remote, and realized it should never have been on remote git revert \u0026lt;commit\u0026gt; If want to work on a repo, but not have local machine GitHub \u0026gt; open a repo \u0026gt; press .\nOpens a code editor.\nCan do almost everything, cant use terminal\nGithub codespace to use terminal creates terminal in cloud.\nGit Stash to temp \u0026lsquo;stash\u0026rsquo; (not ready to commit yet) git stash\nlater when ready git pop\nBetter Usage\ngit stash save name1 now you have a name for your stash\nyou can see all stashed by:\ngit stash list\ngit stash apply 0\nBetter reading git log git log --graph --oneline --decorate\nGit bisect \u0026ndash; didnt get fully\nSquashing commits git rebase master --interactive\nopens an editor:\npick asdfasdf\rsquash qwerqsdfa\rsquash etiuryuir\rsquash fdkmfkmpd Then set the new commit message\nIf you can use fixup instead of squash when doing rebase.\nGit hooks Whenever you perform an operation with Git, like a commit for e.g., it will create an event\nhooks allow you to run code either before or after the event\nsee .git \u0026gt; hooks - find many hooks there\nFor JS devs, there is a package Husky that makes it easier to configure hooks\nexample: you can configure to validate / lint your code before every commit.\nGo back to original state of remote repo. Because you made some changes in local, and things are not going well, and you want to start again.\ngit fetch origin git reset --hard origin/master Be careful! your local changes will be lost forever.\ngo back to the previous branch, if dont remember it after changing branch git checkout -\n","permalink":"https://anantcode.github.io/posts/2022-05-28-git-techniques-shortcuts/","summary":"git commit -am \u0026ldquo;message\u0026rdquo; git commit -am \u0026quot;message\nAdds all the files in current working directory\nAlias git config --global alias.ac \u0026#34;commit -am\u0026#34; # How to use it: \u0026gt; git ac \u0026#34;message\u0026#34; Reword the last commit message git commit --amend -m \u0026quot;new message\u0026quot;\nAlso useful when you forgot to include or stage a couple of files with last commit.\ngit commit --amend --no-edit #if want no change in prev commit message This only works until before you havent alreday pushed your code to a remote repo.","title":"Some cool Git Shortcuts"},{"content":"npx create-next-app took ~ 1min\nAdd components\\note\\NewNoteForm.js and its css return above component from main index.js pages\\index.js\nimport NewNoteForm from \u0026#34;../components/note/NewNoteForm\u0026#34;; export default function Home() { return \u0026lt;NewNoteForm /\u0026gt;; } Notice that Card is needed Add:\ncomponents\\ui\\Card.js components\\ui\\Card.module.css Note finally looks: Styling needed at root: Remember this, maybe _app.js that will work on ALL pages. Will do later\nCustomize NewNoteForm Add a heading\nremove unwanted fields and code to read them\nSet button to 100% width\ncommit\nAdd a Login Page Add components\\login\\LoginForm.js Add components\\login\\LoginForm.module.css\nCustomize LoginForm.js\nAdd pages\\login.js\nimport LoginForm from \u0026#34;../components/login/LoginForm\u0026#34;; export default function Home() { return \u0026lt;LoginForm /\u0026gt;; } on localhost:3000/login\ncommit\nDo something with Login Data From form (component) \u0026gt; page\npage has a handler that was passed as prop to form.\nwrite that handler in page: pages\\login.js\nimport LoginForm from \u0026#34;../components/login/LoginForm\u0026#34;; function onLogin(loginData) { console.log(loginData); } export default function Home() { return \u0026lt;LoginForm onLoginHandler={onLogin} /\u0026gt;; } Logs it in browser: console.log(loginData);\ncommit\nMake the login info go to backend Create a new route pages/api/login\nexport default function handler(req, res) { res.status(200).json({ name: \u0026#34;John Doe\u0026#34; }); } get the req body params, by req.body:\nexport default function handler(req, res) { const loginData = req.body; console.log(loginData); //notice this log!! see later what it prints // res.status(200).json({ name: \u0026#34;John Doe\u0026#34; }); } Write the part that sends req: in pages/login.js\n//make API call to backend to login fetch(\u0026#34;/api/login\u0026#34;, { method: \u0026#34;POST\u0026#34;, body: loginData, //WRONG! always stringify whatever you add in body - send it as JSON in body. }).then((res) =\u0026gt; { console.log(res.json()); // see later that this logs a Promise! I didnt want that! }); Kept getting:\nfrom req sender part:\nthis console.log should be response from server I was expecting, why is it a promise? Will check this after taking a look at server.\nBUT on the server log in api route (previous code block in pages/api/login.js) the log was strange:\n[object Object] This is strange. I was expecting\n{\u0026#34;username\u0026#34;:\u0026#34;asdf\u0026#34;,\u0026#34;password\u0026#34;:\u0026#34;asdf\u0026#34;} Maybe I need to parse? But parsing gave error!\nSyntaxError: Unexpected token o in JSON at position 1 Parse fails like this because the thing you are trying to parse is NOT a valid JSON. and this particular hint that there is o in \u0026ldquo;JSON\u0026rdquo; at position 1 usually shows the common case where [object Object] is the string you are trying to parse (thinking it is JSON). Whereas it is actually a string but not JSON string - \u0026quot;[object Object]\u0026quot;. This SO answer helps\nWhy is there a string \u0026quot;[object Object]\u0026quot; in req.body - what do I do with a string like this!\nits not an object - its not a JSON string!!! - this made me realize that the request sending has happend incorrectly !!\nThe req body when doing POST req should not be made to contain an object directly - otherwise be prepared for \u0026quot;[object Object]\u0026quot; at server req.body 😜\nCorrect thing - ALWAYS send an JS OBJECT as JSON string in req body\nIn other words, ALWAYS JSON.stringify any object you wanna pass in request body when doing POST call.\nAnd why is the req. sender logging a promise?\nReading docs of fetch\nGoogled node fetch Nahi Nahi browser fetch\nfrom MDN docs\nThe fetch() method takes one mandatory argument, the path to the resource you want to fetch. It returns a Promise that resolves to the Response to that request — as soon as the server responds with headers — even if the server response is an HTTP error status. You can also optionally pass in an init options object as the second argument (see Request).\nThen I saw how this works!\nfetch(\u0026#39;http://example.com/movies.json\u0026#39;) .then(response =\u0026gt; response.json()) .then(data =\u0026gt; console.log(data)); cant stop at response.json(), even that returns a promise. use one more then and you get the data.\nCool thing is, you get the data as object. That is what .json() did - get the json part from response and return object of it.\nFinally saw this works (see comments for learning from mistakes)\n//make API call to backend to login fetch(\u0026#34;/api/login\u0026#34;, { method: \u0026#34;POST\u0026#34;, body: JSON.stringify(loginData), }) .then((res) =\u0026gt; { // console.log(res.json()); //This causes problem!!! cant log and return later. Do .json() only once, when returning. Doing it during logging and returning both, caused error return res.json(); }) .then((data) =\u0026gt; console.log(\u0026#34;final: \u0026#34; + data.name)); It printed final: John Doe as expected, from the fake response from our server.\nAlso learnt that cant do .json more than once.\nbody stream already read\nremove comment and good to go.\nSo above code fixed everything.\nBut there\u0026rsquo;s more!!\nwe can improve: instead of promises, use asyc await\nasync function onLogin(loginData) { // ADD async console.log(loginData); //make API call to backend to login const resp = await fetch(\u0026#34;/api/login\u0026#34;, { // NOTE: await instead of promises method: \u0026#34;POST\u0026#34;, body: JSON.stringify(loginData), }); const data = await resp.json(); console.log(\u0026#34;final: \u0026#34; + data.name); //redirect using next/router \u0026gt; useRouter \u0026gt; .replace } export default function Home() { return \u0026lt;LoginForm onLoginHandler={onLogin} /\u0026gt;; } works!\ncommit\nRedirect after login But got this error:\n# Unhandled Runtime Error\rReferenceError: router is not defined\r##### Source\rpages\\login.js (17:2) @ _callee$\r15 | 16 | //redirect using next/router \u0026gt; useRouter \u0026gt; .replace\r\u0026gt; 17 | router.push(\u0026#34;/\u0026#34;);\r| ^\r18 | }\r19 | 20 | export default function Home() { Problem was:\nShould have done everthing in React Function Component:\nCorrected code:\nimport LoginForm from \u0026#34;../components/login/LoginForm\u0026#34;; import { useRouter } from \u0026#34;next/router\u0026#34;; export default function Login() { const router = useRouter(); async function onLogin(loginData) { console.log(loginData); //make API call to backend to login const resp = await fetch(\u0026#34;/api/login\u0026#34;, { method: \u0026#34;POST\u0026#34;, body: JSON.stringify(loginData), }); const data = await resp.json(); console.log(\u0026#34;final: \u0026#34; + data.name); //redirect using next/router \u0026gt; useRouter \u0026gt; .replace router.replace(\u0026#34;/\u0026#34;); } return \u0026lt;LoginForm onLoginHandler={onLogin} /\u0026gt;; } Works!\nNote: Clearly saw that had to restart the server npm run dev - then it worked fine. Without restarting it didnt work, wa showing old error! Seems to because change was done in RFC\nList of Notes (home after login) new home /pages/index.js\nimport NoteList from \u0026#34;../components/home/NoteList\u0026#34;; export default function Home() { return \u0026lt;NoteList /\u0026gt;; } Create NoteList\nmock NoteCard for now:\nNext thing to do:\nImprove the cards now. Introduce Navigation Introduce props with dummy data Introduce data fetching - DB Login Realized the usefulness of a Trello like utility/workflow have a list - so you know the steps for any next work too, and current work go smooth, with next steps visible.\nIntroduce Navigation and Links know that have to add it in _app.js but dont remember the components. Refer example.\nCreate:\n/components/layout/Layout.js\ncomponents\\layout\\MainNavigation.js\nexport default function MainNavigation() { return ( \u0026lt;div\u0026gt; \u0026lt;h1\u0026gt;Your Notes\u0026lt;/h1\u0026gt; \u0026lt;/div\u0026gt; ); } Add this to _app,js\n--- a/pages/_app.js +++ b/pages/_app.js @@ -1,7 +1,13 @@ -import \u0026#39;../styles/globals.css\u0026#39; +import MainNavigation from \u0026#34;../components/layout/MainNavigation\u0026#34;; +import \u0026#34;../styles/globals.css\u0026#34;; function MyApp({ Component, pageProps }) { - return \u0026lt;Component {...pageProps} /\u0026gt; + return ( + \u0026lt;div\u0026gt; + \u0026lt;MainNavigation /\u0026gt; + \u0026lt;Component {...pageProps} /\u0026gt; + \u0026lt;/div\u0026gt; + ); } No clue on what to add in Layout.\nReferring example: For CSS really no clue. So copy pasting:\nLayout.module.css - turns out very simple!!\n.main { margin: 3rem auto; width: 90%; max-width: 40rem; } MainNavigation.module.css from example\nUsing Layout:\nimport MainNavigation from \u0026#34;./MainNavigation\u0026#34;; import classes from \u0026#34;./Layout.module.css\u0026#34;; export default function Layout(props) { return ( \u0026lt;div\u0026gt; \u0026lt;MainNavigation /\u0026gt; \u0026lt;main className={classes.main}\u0026gt;{props.children}\u0026lt;/main\u0026gt; \u0026lt;/div\u0026gt; ); } And actually use Layout in _app.js\n--- a/pages/_app.js +++ b/pages/_app.js @@ -1,11 +1,13 @@ +import Layout from \u0026#34;../components/layout/Layout\u0026#34;; import MainNavigation from \u0026#34;../components/layout/MainNavigation\u0026#34;; import \u0026#34;../styles/globals.css\u0026#34;; function MyApp({ Component, pageProps }) { return ( \u0026lt;div\u0026gt; - \u0026lt;MainNavigation /\u0026gt; - \u0026lt;Component {...pageProps} /\u0026gt; + \u0026lt;Layout\u0026gt; + \u0026lt;Component {...pageProps} /\u0026gt; + \u0026lt;/Layout\u0026gt; \u0026lt;/div\u0026gt; ); } Improve how inbox looks - NoteList really dont know the CSS - copy pasting\ncomponents\\home\\NoteList.module.css\nYe to chota sa hai!\n.list { list-style: none; margin: 0; padding: 0; } NoteCard - styling from here\nNow use it in js\nreturn a li\nWrap it with whatever Card was - because elements can have children - you created Card without content - thinking where will component come! But Card\u0026rsquo;s usage and its filling was not done just by what you see on Card - it is done by creating children.\nSince the Card has button, it will need a function here, to work:\nChange NoteList - dynamic using map Going to make a [ ].js dynamic page.\ncreate a new folder\n/pages/[nodeId]/index.js\ncan name a file: [pageId].js or can name a folder: [pageId]/index.js Created this file:\nexport default function index() { return \u0026lt;div\u0026gt;This is {id}\u0026lt;/div\u0026gt;; } Connect to DB DBManager\nnpm install mongodb\nNoticed that if using\nconst { MongoClient, ServerApiVersion } = require(\u0026quot;mongodb\u0026quot;);\nIf ServerApiVersion is not in use in getStaticPaths or GSP for example, then we get error: Not sure, will need to check more\nMongo takes some time to deploy password change too:\nI was facing problem in connecting to DB - auth failed.\nI though password change on Mongoi Atlas UI is now working - because it didnt show new password. Showed something that was Chrome\u0026rsquo;s password maanger. It was a little confusing. Used other browser - it also didnt show set password editing the user.\nTo be sure, Created new cluster - deleted exising cluster (allowed only 1 free cluster)\nFinally found solution - itwas the file not getting correctly the user and pass- I was exporting a function from my secrets module. changeed it to export an object.\nThis SO artivle was very useful when I faced the error:\nError: Error serializing .noteId returned from getStaticProps in \u0026ldquo;/[noteId]\u0026rdquo;. Reason: undefined cannot be serialized as JSON. Please use null or omit this value.\nIn following, confused name of context with params.\nit was\nparams.params.noteId and I thought it looked strange.\nActually\ncontext.params.noteId is actual. **Rememer - ** lesson learnt - GSP has context as parameter (although name doesnt matter much - does not have to be context)\nexport async function getStaticProps(context) { const noteId = context.params.noteId; console.log(`ANN2 In props, noteId = ${context.params.noteId}`); return { props: { noteId, }, }; Did some more plumbing - got things working with DB - able to open single Note fetching data from DB. While looking at higher picture - realized that: URL should be:\n/[userId]/new-note\nUnauthenticated.\n/[userId]/inbox\nProtected. if session \u0026gt; proceed. if no session \u0026gt; redirect to Login\nIs there no way except bringing the username in URL ?\nleads to\nCan I make a link click do POST request? - Never thought this\nhttps://stackoverflow.com/questions/1651197/how-do-you-force-a-web-browser-to-use-post-when-getting-a-url https://stackoverflow.com/questions/3915917/make-a-link-use-post-instead-of-get Anyway, URL seems much clean, and doable for my use.\nOr maybe query param?\nwhole question comes to:\nURL route \u0026ndash;vs\u0026ndash; Query Param query param can look like\n/inbox?user=id // protected\n/new-post?user=id //\nhttps://stackoverflow.com/questions/49035670/is-it-wrong-to-use-routes-versus-query-string-parameters\nNot super duper important.\nI will go with query params then! 😄\nHow to get query string param from URL in nextjs - this SO\nRevising an old open point:\nIf using DB stuff outside of GSP, then need to do stringify and then parse again, otherwise get this error:\nServer Error\rError: Error serializing `.notes[0].id` returned from `getStaticProps` in \u0026#34;/\u0026#34;.\rReason: `object` (\u0026#34;[object Object]\u0026#34;) cannot be serialized as JSON. Please only return JSON serializable data types. Confirmed because when I removed the stfingify and parse, got the above error: More here: https://github.com/vercel/next.js/issues/11993#issuecomment-617375501\nBack.\nTo work with the login etc, need to think in detail, what user journeys we have - to understand the features needed to be added:\nAdd the pages:\nuser does not exist your message is sent export default function NotFound(props) { return ( \u0026lt;div\u0026gt; \u0026lt;h1\u0026gt;User Not Found\u0026lt;/h1\u0026gt; \u0026lt;p\u0026gt;The user you are looking for does not exist.\u0026lt;/p\u0026gt; \u0026lt;/div\u0026gt; ); } pages\\sent.js\nexport default function NotFound(props) { return ( \u0026lt;div\u0026gt; \u0026lt;h1\u0026gt;Message Sent!\u0026lt;/h1\u0026gt; \u0026lt;p\u0026gt;Your message has been sent to ___ anonymously.\u0026lt;/p\u0026gt; \u0026lt;/div\u0026gt; ); } Realized can also do like - a dedicated page, but shows component inside, so that props can be passed to the component.\nRead query param from URL, for /new-post?user= Google \u0026ldquo;reading query param in nextjs\u0026rdquo; This SO\nimport { useRouter } from \u0026#39;next/router\u0026#39; export default () =\u0026gt; { const router = useRouter() console.log(router.query); ... } but was getting empty object on logging (on strigify saw that object is empty,)\nimport { useRouter } from \u0026#34;next/router\u0026#34;; export default function NewNote() { const router = useRouter(); console.log(\u0026#34;query param\u0026#34; + JSON.stringify(router.query)); Saw some answers about it:\nhttps://github.com/vercel/next.js/issues/10521\nNoticed every doc is using the values in HTML, console log wil be empty because of:\nI tried same, and got the values:\nbtw, using object directly inside fails with error: Error: Objects are not valid as a React child (found: object with keys {}) More on this by googling: https://www.g2i.co/blog/understanding-the-objects-are-not-valid-as-a-react-child-error-in-react\nThis is correct behavior and documented here: https://nextjs.org/docs/routing/dynamic-routes#caveats Pages that are statically optimized by Automatic Static Optimization will be hydrated without their route parameters provided, i.e query will be an empty object ({}). After hydration, Next.js will trigger an update to your application to provide the route parameters in the query object.\nTHought if getting it in getStaticProps, but\ncant get query param in GSP : https://stackoverflow.com/a/64159389/11515646 because it is run serverside.\nTrying to use:\nAlso referred to as \u0026ldquo;SSR\u0026rdquo; or \u0026ldquo;Dynamic Rendering\u0026rdquo;. If a page uses Server-side Rendering, the page HTML is generated on each request.\nThe looking at this discussion realized that why am I worrying about getting data extracted from query param, when Next lets us do it from the URL route itself! the dynamic route.\nuse the username as slug\n/new-post/[username]\nLets do that\ngetServerSideProps used to get dynamic route Add new DB + collection for registered users. Added this to get that registered users:\nasync function getUser(username) { const uri = `mongodb+srv://${secret.user}:${secret.pass}@cluster0.xf7jy.mongodb.net/?retryWrites=true\u0026amp;w=majority`; const client = await MongoClient.connect(uri); const db = client.db(\u0026#34;users\u0026#34;); const user = await db.collection(\u0026#34;users\u0026#34;).findOne({ username }); client.close(); return user; } created corresponding DB and collection:\nUpdated the page to get Name from the username from DB, and use it:\nSubmit the message to a user on DB, by username Lets do this by using api routes of next\nBut this post has become too long! Continued in Part 2\n","permalink":"https://anantcode.github.io/posts/2022-05-17-my-next-project/","summary":"npx create-next-app took ~ 1min\nAdd components\\note\\NewNoteForm.js and its css return above component from main index.js pages\\index.js\nimport NewNoteForm from \u0026#34;../components/note/NewNoteForm\u0026#34;; export default function Home() { return \u0026lt;NewNoteForm /\u0026gt;; } Notice that Card is needed Add:\ncomponents\\ui\\Card.js components\\ui\\Card.module.css Note finally looks: Styling needed at root: Remember this, maybe _app.js that will work on ALL pages. Will do later\nCustomize NewNoteForm Add a heading\nremove unwanted fields and code to read them","title":"My Next Project"},{"content":"Listing impressions of nextjs from my experience with it so far, and how it differs from react from a devs perspective.\nHow reactjs works: In case of react, on a prod website, server could be a CDN. Need not be EC2 etc.\nCDN is dumb server - which is just a convenient way to say CDN is a server but optimized for file delivery, not for compute.\nindex.html contains bundle.js\nbundle.js contains\nreact runtime JSX and Components Routing info Page Layout info index.html is almost blank - everything in bundle.js\nClient has to execute the JS first, in order to understand what the page is supposed to look like.\nHere the server has minimal role in speeding up your app.\nThe server can only increase or decrease the TTFB (Time to first byte)\nTTBF = HTTP Req Time + time to process Req + HTTP resp. time\nYou can max TTBF here by using a CDN - dont want to use an EC2 instance or a droplet, if using a static website. Better use CDN that is optimized for static file delivery (placed around the world to speed up delivery of your static file).\nHow NextJS works Some of the featues of nextjs require you to have a server running (a live server - running).\ncould be serverless, but needs a nodejs process. When using Vercel - that has nextjs-first support - you can put a CDN between Server and client. (You could also you aws with nextjs support - there is a fll blown architecture in aws, aws-serverless-nextjs). But Vercel is more clean.(simple, easy to setup and use) What if nextjs sends the HTML after rendering it on server?\nGenerate the HTML on server, and send to the client. but HTML\nin React you write\nevent handlers functions access window useEffect that runs after component is mounted. All of this is not available on server! It is too costly to run say puppeteer or some headless browser and render it - so what people do - they wrote a server side renderer for react which is known as reactdom/server\nThis is a package you can also use to natively export the react DOM into static HTML string, which you can then rehydrate.\nre-hydrate rehydrate means - Magically attach all the eventlisteners again! to the static HTML blob.\nThis is where nextjs comes in - it abstracts away all these details of rehydrating and Serverside rendering. On top of it, since it is running on a server, it can give you additional superpowers! which are not present with static reactjs bundle.\nWhat nextjs does As first job, Next JS renders the same page on server that we see in a reactjs app. What\u0026rsquo;s it does that it creates a HTML blob. This HTML document is up and ready for a person to open in a browser - and also HTML is orders of magnitude faster than JavaScript - Means if browser has to render some HTML versus a browser has to run JavaScript that constructs that HTML from scratch, then always the former will be faster. Browsers are very optimised to display the HTML quickly, compared to executing JS. Because JS is a Programming language - it ~has to~ needs to bootup the whole V8 runtime environment, in order to parse the language syntax and do so much stuff.\nHTML on the other hand is just markup lang. - browsers are highly optimized to do this (construct layout) very quickly.\nHTML is very fast compared to JS based DOM rendering.\nIf time delay becomes between kindof 50-100ms. It can impact the user experience.\nEven 100-200ms affects UX.\nYou create HTML on server side. Make CDN store the HTML. CDN can deliver files super quickly.\nNodejs is not CPU friendly.\nSSR is slower TTFB because of slow compute of HTML.\nWith nextjs - it is not just SSR - it can also do SSR + revalidate\nRevalidate You render the page with SSR but then put it on CDN. Then you are regenerating the page in background on the server, every 5 secs or say every 2 secs or every 2 mins.\nWhy? Because even if your server is slow in regenerating the page completely from scratch, clients dont face the problem because they are served page by fast CDN.\nAny app that doesnt require super real time data - can use this.\nEven if you need real time data you can seperate your View layer from your real time data: client can connect to a websocket that is connected to say aws that can retrieve data - and the main document that serves the page itself can be from CDN. Performance, SEO friendly\nVercel does need a server running - because of server side revalidation.\nIf revalidate is on, vercel internally manages update - server regenerates, CDN flushes out old whenever there is new copy of the HTML available.\n","permalink":"https://anantcode.github.io/posts/2022-05-16-my-first-impressions-of-next-js-over-react/","summary":"Listing impressions of nextjs from my experience with it so far, and how it differs from react from a devs perspective.\nHow reactjs works: In case of react, on a prod website, server could be a CDN. Need not be EC2 etc.\nCDN is dumb server - which is just a convenient way to say CDN is a server but optimized for file delivery, not for compute.\nindex.html contains bundle.js","title":"NextJS vs React"},{"content":"MongoDB is the most popular document oriented DB.\nHistory Created in 2007 Company: doubleclick All data is stored in JSON-like documents which are organized in collections where they can be queried. Flexible schema Unlike relational ~DB~ table, predefined schema of a table is not necessary.\nThis allows you to evolve yout data rapidly without needing to write complex DB migrattion. Data frequently needed together is stored together, in same place This makes read operation extremely fast - because no joins are required.\nThis also makes DB easier to scale horizontally. Via sharding. Unlike relational tables, collections are self contained, making them much easier to work in distributed systems.\nWhen you create a new Document in mongo - it is assigned a unique object ID - unique to that collection.\nInside that document (document ~ JSON) you can define multiple fields. Each field can be of a data type.\nQuery API is used to work with your data in any language. Query API is used to perform basic read and write operations, as well as to do complex queries and transformations across the database.\nIndex for fast queries Secondary indexes can be created to make common queries extremely fast.\nAlso supports geospatial queries to find all documents near a geographical location.\nIn addition to queries you can also create data aggregation piplines.\nMongoDB is free and can be self hosted. But fastest way to get started is free tier on - Atlas.\nAtlas also launched serverless in Jul 21 - i.e. now benefit of pay per usage.\nAtlas has other essential features like\nTriggers: make it easy to run serverless functions when your underlying data changes. ","permalink":"https://anantcode.github.io/posts/2022-05-16-mongodb/","summary":"MongoDB is the most popular document oriented DB.\nHistory Created in 2007 Company: doubleclick All data is stored in JSON-like documents which are organized in collections where they can be queried. Flexible schema Unlike relational ~DB~ table, predefined schema of a table is not necessary.\nThis allows you to evolve yout data rapidly without needing to write complex DB migrattion. Data frequently needed together is stored together, in same place This makes read operation extremely fast - because no joins are required.","title":"An Introduction to MongoDB"},{"content":"Adding metadata Adding head elements:\ndescription metatag: shows up on google search results. title import a special component by nextjs: Head\nimport Head from \u0026#39;next/head\u0026#39; wrap with Fragment from react:\nadd \u0026lt;title\u0026gt; in \u0026lt;Head\u0026gt;\nInspect - it gets added.\n\u0026lt;meta name='description' content = ''\u0026gt;\nWe can do this on all pages.\nAdd this to:\nHomepage [noteId].js - get title, description from props Add Note Deploying the Site! 😍 Vercel\nSignup with a git repo provider. You will link your repo and deploy using it.\nGitHub - most popular git repo provider.\nCreate PAT (personal access token). I just used SSH that was already setup.\nIn package.json we can use build script with other hosting providers: but here with Vercel, dont need to use it. Might need to do it using build with other hosting providers.\nnpm run build Vercel will also do it but automatically on its servers. (creates a .next folder)\nIf not using Vercel, npm start starts a production server. You can do it on a remote server, that you administer, to run the server for your next application.\nOfcourse that server should stay up and running, as long as you want to expose it to the world.\nCan set environment variables.\nMongoDB - allow access Network Acces \u0026gt; ALLOW ACCESS FROM ANYWHERE This ensures that the vercel servers will be able to connect to the mongoDB (credentials to access the server)\nSet fallback to true or 'blocking' We set fallback to false till this point. But now set it to true or 'blocking'\nThis tells nextjs that the list of paths which we are specifying during build might not be exhaustive - So if nextjs cant find the page that is requested, instead of showing 404. it will pregenerate it if needed\nBoth pregenerate the file when needed.\ntrue - immediately return an empty page, and pull down the dynamically generated content. You have to handle the case when page does not have the data yet.\n'blocking' - User will not see anything unless the page is pregenerated with all the data needed - and finished page will be served.\nTo publish this change, just do git add . git commit -m \u0026quot;fix fallback\u0026quot; git push\nthat\u0026rsquo;s it! Vercel will automatically trigger the build! Vercel watches the GitHub branch.\nIf hosted elsewhere, you need to\nLogin into that remote machine Stop the running server run npm run build then run npm start You can do more:\nConnect custom domain Configure more. ways of optimizing images add authention with ease with next.js This and more on dedicated next course of Maxmilian.\n","permalink":"https://anantcode.github.io/posts/2022-05-16-day9-100doc/","summary":"Adding metadata Adding head elements:\ndescription metatag: shows up on google search results. title import a special component by nextjs: Head\nimport Head from \u0026#39;next/head\u0026#39; wrap with Fragment from react:\nadd \u0026lt;title\u0026gt; in \u0026lt;Head\u0026gt;\nInspect - it gets added.\n\u0026lt;meta name='description' content = ''\u0026gt;\nWe can do this on all pages.\nAdd this to:\nHomepage [noteId].js - get title, description from props Add Note Deploying the Site! 😍 Vercel\nSignup with a git repo provider.","title":"Day9 #100DaysOfCode"},{"content":"Now extend the fetching from MongoDB to\nIndividual page (dynamic page) of next. On the same dynamic page, the URLs also we will get from the DB (GSPa) Both of these to be done in dynamic page [ ]\nfetching URLs for GSPa export async function getStaticPaths() { const uri = `mongodb+srv://${secret.user}:${secret.pass}@cluster0.xf7jy.mongodb.net/myFirstDB?retryWrites=true\u0026amp;w=majority`; const client = await MongoClient.connect(uri); const db = client.db(); const notesCollection = db.collection(\u0026#34;notesColl2\u0026#34;); const notesIds = await notesCollection.find({}, { _id: 1 }).toArray(); client.close(); //test: preparing the material needed to be returned from GSPa console.log( notesIds.map((item) =\u0026gt; ({ params: { noteId: item._id.toString(), }, })) ); return { fallback: false, paths: notesIds.map((item) =\u0026gt; ({ params: { noteId: item._id.toString(), }, })), // paths should be something like this: // [ // { // params: { // noteId: \u0026#34;n1\u0026#34;, // }, // }, // { // params: { // noteId: \u0026#34;n2\u0026#34;, // }, // }, // ], }; } Fetch data for individual page export async function getStaticProps(context) { // way to get slug from URL in GSP - square bracket is key const noteId = context.params.noteId; console.log(`Loading ID: ${noteId}`); // fetch data for a single note. const uri = `mongodb+srv://${secret.user}:${secret.pass}@cluster0.xf7jy.mongodb.net/myFirstDB?retryWrites=true\u0026amp;w=majority`; const client = await MongoClient.connect(uri); const db = client.db(); const notesCollection = db.collection(\u0026#34;notesColl2\u0026#34;); const selectedNote = await notesCollection.findOne({ _id: ObjectId(noteId) }); client.close(); return { props: { noteData: { id: selectedNote._id.toString(), title: selectedNote.title, image: selectedNote.image, address: selectedNote.address, description: selectedNote.description, }, }, }; } Need to import ObjectId from mongodb because when doing find for a single page, we have string ID and the DB has Object for ID. To make them equal before comparing in findOne, wrap your string URL with ObjectId()\nimport { MongoClient, ObjectId } from \u0026quot;mongodb\u0026quot;;\nconst selectedNote = await notesCollection.findOne({ _id: ObjectId(noteId) });\nFinal Code for dynamic page: import NoteDetail from \u0026#34;../../components/notes/NoteDetail\u0026#34;; import secret from \u0026#34;../../secure/secrets\u0026#34;; import { MongoClient, ObjectId } from \u0026#34;mongodb\u0026#34;; function NoteDetails(props) { return ( \u0026lt;NoteDetail noteId={props.noteData.id} title={props.noteData.title} address={props.noteData.address} image={props.noteData.image} description={props.noteData.description} \u0026gt;\u0026lt;/NoteDetail\u0026gt; ); } export async function getStaticPaths() { const uri = `mongodb+srv://${secret.user}:${secret.pass}@cluster0.xf7jy.mongodb.net/myFirstDB?retryWrites=true\u0026amp;w=majority`; const client = await MongoClient.connect(uri); const db = client.db(); const notesCollection = db.collection(\u0026#34;notesColl2\u0026#34;); const notesIds = await notesCollection.find({}, { _id: 1 }).toArray(); client.close(); //test: preparing the material needed to be returned from GSPa console.log( notesIds.map((item) =\u0026gt; ({ params: { noteId: item._id.toString(), }, })) ); return { fallback: false, paths: notesIds.map((item) =\u0026gt; ({ params: { noteId: item._id.toString(), }, })), }; } export async function getStaticProps(context) { // way to get slug from URL in GSP - square bracket is key const noteId = context.params.noteId; console.log(`Loading ID: ${noteId}`); // fetch data for a single note. const uri = `mongodb+srv://${secret.user}:${secret.pass}@cluster0.xf7jy.mongodb.net/myFirstDB?retryWrites=true\u0026amp;w=majority`; const client = await MongoClient.connect(uri); const db = client.db(); const notesCollection = db.collection(\u0026#34;notesColl2\u0026#34;); const selectedNote = await notesCollection.findOne({ _id: ObjectId(noteId) }); client.close(); return { props: { noteData: { id: selectedNote._id.toString(), title: selectedNote.title, image: selectedNote.image, address: selectedNote.address, description: selectedNote.description, }, }, }; } export default NoteDetails; ","permalink":"https://anantcode.github.io/posts/2022-05-14-day8-100doc/","summary":"Now extend the fetching from MongoDB to\nIndividual page (dynamic page) of next. On the same dynamic page, the URLs also we will get from the DB (GSPa) Both of these to be done in dynamic page [ ]\nfetching URLs for GSPa export async function getStaticPaths() { const uri = `mongodb+srv://${secret.user}:${secret.pass}@cluster0.xf7jy.mongodb.net/myFirstDB?retryWrites=true\u0026amp;w=majority`; const client = await MongoClient.connect(uri); const db = client.db(); const notesCollection = db.collection(\u0026#34;notesColl2\u0026#34;); const notesIds = await notesCollection.find({}, { _id: 1 }).","title":"Day8 #100DaysOfCode"},{"content":"In last post\nMongoDB was set up - able to store data from a form. Redirecting to homepage after successful form submit. Use useRouter to do it:\nIn pages/new-note/index.js import { useRouter } from \u0026#39;next/router\u0026#39; .. const router = useRouter(); // as usual, hook should be called first in react functional component //after successful response of submit router.replace(\u0026#34;/\u0026#34;); // or push() Getting data from mongoDB We could do it like, in page component GSP write a connection to our API route \u0026gt; that API route connects to mongoDB i.e. page component GSP \u0026gt; nextjs api route \u0026gt; mongoDB\nbut its GSP and already serverside - so directly call DB from GSP.\npage component GSP \u0026gt; mongoDB\nbecause calling serverside route from serverside GSP is redundant.\nMap the data on MongoDB because of _id field. In pages\\index.js\nexport async function getStaticProps() { //fetch data from MongoDB const uri = `mongodb+srv://${secret.user}:${secret.pass}@cluster0.xf7jy.mongodb.net/myFirstDB?retryWrites=true\u0026amp;w=majority`; const dbName = \u0026#34;myFirstDB\u0026#34;; const coll = \u0026#34;notesColl2\u0026#34;; const client = new MongoClient(uri); await client.connect(); console.log(\u0026#34;Connected successfully to server!\u0026#34;); const db = client.db(dbName); const notesCollection = db.collection(coll); const notes = await notesCollection.find({}).toArray(); console.log(\u0026#34;Found documents =\u0026gt;\u0026#34;, notes); client.close(); return { props: { notes: notes.map((item, index) =\u0026gt; { return { id: item._id.toString(), //could do anything, e.g. index, title: item.title, image: item.image, address: item.address, description: item.description, }; }), }, }; } ","permalink":"https://anantcode.github.io/posts/2022-05-14-day7-100doc/","summary":"In last post\nMongoDB was set up - able to store data from a form. Redirecting to homepage after successful form submit. Use useRouter to do it:\nIn pages/new-note/index.js import { useRouter } from \u0026#39;next/router\u0026#39; .. const router = useRouter(); // as usual, hook should be called first in react functional component //after successful response of submit router.replace(\u0026#34;/\u0026#34;); // or push() Getting data from mongoDB We could do it like, in page component GSP write a connection to our API route \u0026gt; that API route connects to mongoDB i.","title":"Day7 #100DaysOfCode"},{"content":"Day 6 Using mongoDB in the nextjs app.\nSo far covered:\ngetStaticProps, and getStaticPaths and getServerSideProps They allow us to fetch data for pre-rendering those pages, So that we pre-render the pages with the data, instead of without the data they might need. Upto this point, we\u0026rsquo;re only working with dummy data though (not actually fetching from anywhere) - it is actually hard-coded data\nWe do have this Add New Meetup page here, which would allow users to enter data for a new meetup.\nWe will now add a real backend, with real DB, from which we then fetch it.\nWith this we will also see the last major NextJS feature API routes, which is added by Next to the React apps.\nNextJS makes it easy for us to build an API (a backend API) together with our front-end React app in the same project, using API routes.\nAPI routes are a special routes, (special pages - if you wanna call it like this) which don\u0026rsquo;t return HTML code, but which are instead about accepting incoming HTTP requests, also post, patch, put, delete requests, whatever you need - with JSON data attached to them and which then might do whatever you need to do. For example, store data in a database and then return JSON data.\nSo you could say API routes allow you to build your own API end points as part of this nextjs project.\nAnd they will then be served by the same server as your next app.\nWorking with API routes: Now to add API routes, you add a special folder in your pages folder, and that\u0026rsquo;s a folder named api.\nJust as the pages folder has to be named pages, this folder has to be named api and it has to be in the pages folder.\nThen NextJS will pick up any JavaScript files stored in there and turn those files into API routes that can be targeted by requests and that should receive JSON and return JSON\nfile names will act as path segments in the URL. For example, a new-note.js file again, In those JavaScript files here, you then don\u0026rsquo;t create a React component function. These API routes are not about defining, rendering or returning React components. Instead in there, we will define functions which contains server-side code because API routes will only run on the server, never on the client.\nDecoding them will never be exposed to the client. So we can also use credentials in API routes without compromising them.\nAnd those functions are then simply triggered whenever a request is sent to this route, i.e. /api/new-note here. This would be the URL of this file - a request to this URL will trigger the function which we have to define in this file.\nNow often these function are named handler but the name is up to you, the important thing is that it\u0026rsquo;s exported.\nMongoDB Cluster Tier = M0\nNetwork Access \u0026gt; add IP address\nDatabase Access \u0026gt; create 1 user\nClusters \u0026gt; Connect \u0026gt; Connet your application\nnpm install mongodb\nimport {MongoClient} from mongodb\nin /pages\ncreate a folder api a js file in /pages/api export a function (name it say handler(req, res)) Make sure the folder is api and not apis etc. Wasted 1.5 hrs details below.\nif req.method == \u0026ldquo;POST\u0026rdquo;\ncall MongoClient.connect (.....) - It returns a promise, so make the handler async, and do await MongoClient.connect(....)\npass the URL of your DB.\nWrite name of DB in URL - if doesnt exist it will be created on the fly.\nconst client = await MongoClient.connect.....\nCollections ~are like tables Documents ~are like entries in those tables\n1 note = 1 document\nOverall a collection holds multiple notes (multiple documents)\nconst db = client.db()\nconst notesCollection = db.collection('notes')\nmeetsupCollection.insertOne({});\n//insert your data here\nconst data = req.body;\n//its async\nawait meetsupCollection.insertOne(data);\nconst result = await meetupsCollection.insertOne(data)\nconsole.log(result);\n//also possible: catch, error handlng in DB collection - not done here.\n//send back a response, using res object\n201 - to indicate that something was inserted.\nres.status(201).json({message: \u0026quot;Note inserted!\u0026quot;})\nSending request to API route from Frontend. Do it in /pages/api/new-meetup/index.js\nasync function addMeetupHandler(data){ const response = await fetch (\u0026#39;/api/new-neetup\u0026#39;); } but this is not complete yet, not indicated that this is POST req! no data sent!\nconst resonse = await fetch(\u0026#39;/api/new-meetup\u0026#39;, { method: \u0026#39;POST\u0026#39;, body: ///////////// } ); what to pass in body - an object with data.\nJSON.stringify the data, add set this content type in header\nAlso add headers:\nconst response = await fetch(\u0026#39;/api/new-meetup\u0026#39;, { method: \u0026#39;POST\u0026#39;, body: JSON.stringify(enteredNoteData), headers: { \u0026#39;Content-Type\u0026#39;: \u0026#39;application/json\u0026#39; } } ); const data = await response.json(); // just like we always do to responses from fetch function console.log(data); Check by logs - submit form and see \u0026ldquo;inserted!\u0026rdquo; log on browser console Navigate away from the form - use useRouter hook const router = useRouter(); // at start of react function component. //// // when want to redirect after all calls, submit successful // 2 options - replace and push. // by doing replace, people cant go back with back button. router.push(\u0026#39;/\u0026#39;) Getting data from DB next adds feature of using fetch on serverside fns as well (GSP etc)\nWe could do it like, in page component GSP write a connection to our API route \u0026gt; that API route connects to mongoDB\npage component GSP \u0026gt; nextjs api route \u0026gt; mongoDB\nbut its GSP and already serverside - directly call DB from GSP.\npage component GSP \u0026gt; mongoDB\nWhen you import something here in a page component file and that something is then only used in getServerSideProps or getStaticProps, the imported package will not be part of the client side bundle. import {MongoClient} from \u0026#39;mongodb\u0026#39; //nextjs will detect that if this package is only used in GSP, GSSP etc, it wont include them in the client bundle on build. Security win. Bundle size win. in GSP:\nconst client = await MongoClient.connect(....) const db = client.db() const notesCollection = db.collection(\u0026#39;notes\u0026#39;); // meetsupCollection.find(); //async returns a promise const notes = await notesCollection.find().toArray(); //close connection to mongoDB before returning the data. client.close(); return { props:{ notes: notes } } will Get this error just by using above.\nlooking at data on DB:\nthe object is not directly useable as we are trying.\nTransform the array. Map the array, for e.g. like this:\nreturn { props:{ notes: notes.map(item =\u0026gt; { title: item.title, address: item.address, image: item.image, id: item._id.toString() // this was causing problem , so needed to transform. }) } } Remove all dummy now, it works with DB!\nThe data will be fetched from DB! When? whenever the page is regenerated, data will be fetched.\non every visit? No its not GSSP on build? yes - fetch from DB on build. Because GSP is used. If revalidate is used, it would build on every few time interval, so fetch every few time interval that is set. Some very silly mistakes on handson:\nNamed the folder pages/apis by mistake. Next gave error as if trying to use MongoDB from client side - because it was not under /pages/api. The error was Module not found: Can't resolve 'dns' Wasted 1.5 hrs.\nA slightly different syntax used (not doing MongoClient.connnect(), but initializing new MongoClient\u0026hellip; as per npm documentation of mongodb package. But above mongodb code of Maxmilian also works - tested)\n","permalink":"https://anantcode.github.io/posts/2022-05-11-day6-100doc/","summary":"Day 6 Using mongoDB in the nextjs app.\nSo far covered:\ngetStaticProps, and getStaticPaths and getServerSideProps They allow us to fetch data for pre-rendering those pages, So that we pre-render the pages with the data, instead of without the data they might need. Upto this point, we\u0026rsquo;re only working with dummy data though (not actually fetching from anywhere) - it is actually hard-coded data\nWe do have this Add New Meetup page here, which would allow users to enter data for a new meetup.","title":"Day6 #100DaysOfCode"},{"content":"Day 5 Key learnings:\nReact hooks like useRouter cant be used in GSP (getStaticProps) - it can only be used in React function component.\nSo can\u0026rsquo;t use useRouter to get the slug (like ID of note/post). But we dont need it - we have context param in GSP. In GSP the context will not hold req and res - it has params:\nthe params object has key = the thing between [] in the filename. (e.g. pages\\[noteId]\\index.js) value = gets it from actual current URL getStaticPaths (GSPa) is needed when working with GSP - it can be used to load the key/slugs/ids of each post form DB, so that next knows about them and is able make the info available in GSP.\nGoing to use getStaticProps for our Notes page. Why? because page wont be frequently changing.\nIn pages\\[noteId]\\index.js\nuse GSP return fake data for now - at props key The ID (slug or id) to identify the note / post is embedded in URL\nCant use useRouter - in GSP - to get URL embedded in URL - have alternative: use the context.params of GSP\nexport async function getStaticProps(context) { //TODO fetch data for a single note. const noteId = context.params.noteId; console.log(noteId); //This will show on development server log, not in browser because (dev server reruns for every code change to assist in development, because it is dev env). GSP Actually runs on Build time only. So this log is NOT in browser but in env. of whoever did the build - the Dev env! return { props: { noteData: { id: noteId, title: \u0026#34;Selfie from Mars\u0026#34;, details: \u0026#34;This is Curiosity\u0026#39;s selfie from Mars\u0026#34;, image: \u0026#34;https://www.nasa.gov/sites/default/files/thumbnails/image/pia23378-16.jpg\u0026#34;, }, }, }; } preparing paths with getStaticPaths GSPa is another reserved fn that nextjs understands\nUse GSPa if\nif its a dynamic page like pages\\[noteId]\\index.js\nAND if using GSP, (not needed if using GSSP)\nIts async\nWith GSP a page is rendered during build. NextJS has to\nrender all the versions of the dynamic page - for all supported IDs (jinka jinka data hai existing available - uss har data ke liye) GSPa has job of returning an object where we describe all the dynamic segment values - so all the note IDs in this case, for whom the page should be generated.\npaths is reserved params is reserved export async function getStaticPaths(){ return { paths: [ { params: { noteId: \u0026#39;n1\u0026#39;, }, params: { noteId: \u0026#39;n2\u0026#39;, } } ] }; } The array at paths is in real world - fatched from a database.\nOn reaching so till here, we get error:\nServer Error\rError: The `fallback` key must be returned from getStaticPaths in /[noteId].\rExpected: { paths: [], fallback: boolean } fallback If using GSP, need to include fallback key in GSPa\nfallback : false // If set this, user sees 404 error if any URL is not supported (means the dynamic page for i was never rendered)\nfallback : true is good in the sense that - while some of the (supported) keywords will cause page to generate on build time, the unsupported keywords wont show 404 but a page will be generated for them at the instance when request comes with a xyz URL.\nIf your usecase is - if you are sure you have defined all the supported paths for which req will be coming in, then set the fallback to false. We will do this.\nGenerated the most visited / most popular pages by returning their ID from the GSPa\nWasted 30mins - /n1 /n2 were always showing as 404. Problem was with my GSPa return object structure - be careful! Used this: wrong\nWrong\nexport async function getStaticPaths() { return { fallback: false, paths: [ { params: { notesId: \u0026#34;n1\u0026#34;, }, params: { notesId: \u0026#34;n2\u0026#34;, }, }, ], }; } Correct:\nexport async function getStaticPaths() { return { fallback: false, paths: [ { params: { noteId: \u0026#34;n1\u0026#34;, }, }, { params: { noteId: \u0026#34;n2\u0026#34;, }, }, ], }; } ","permalink":"https://anantcode.github.io/posts/2022-05-10-day5-100doc/","summary":"Day 5 Key learnings:\nReact hooks like useRouter cant be used in GSP (getStaticProps) - it can only be used in React function component.\nSo can\u0026rsquo;t use useRouter to get the slug (like ID of note/post). But we dont need it - we have context param in GSP. In GSP the context will not hold req and res - it has params:\nthe params object has key = the thing between [] in the filename.","title":"Day5 #100DaysOfCode"},{"content":"In Promise there is a finally() - runs after all chains, error are done.\nAnything similar in Array.forEach() ? May be needed when you want to do something at the end of the async stuff that happens on each of the array elements - when all are done.\nThis can be easily done by following:\nref\nUsing a basic counter function callback () { console.log(\u0026#39;all done\u0026#39;); } var itemsProcessed = 0; [1, 2, 3].forEach((item, index, array) =\u0026gt; { asyncFunction(item, () =\u0026gt; { itemsProcessed++; if(itemsProcessed === array.length) { callback(); } }); }); Important to use a independent counter here: depending on the value of the index parameter does not provide the same guarantee, because the order of return of the asynchronous operations is not guaranteed.\nMore methods on the ref.\n","permalink":"https://anantcode.github.io/posts/2022-05-10-callback-after-all-foreach-js/","summary":"In Promise there is a finally() - runs after all chains, error are done.\nAnything similar in Array.forEach() ? May be needed when you want to do something at the end of the async stuff that happens on each of the array elements - when all are done.\nThis can be easily done by following:\nref\nUsing a basic counter function callback () { console.log(\u0026#39;all done\u0026#39;); } var itemsProcessed = 0; [1, 2, 3].","title":"'Finally' for forEach - Callback After All forEach are done running"},{"content":"This article has a good summary\nThe basic: const readline = require(\u0026#39;readline\u0026#39;).createInterface({ input: process.stdin, output: process.stdout }); readline.question(\u0026#39;Who are you?\u0026#39;, name =\u0026gt; { console.log(`Hey there ${name}!`); readline.close(); }); Using prompt-sync package After npm install prompt-sync\nconst prompt = require(\u0026#39;prompt-sync\u0026#39;)(); const name = prompt(\u0026#39;What is your name?\u0026#39;); console.log(`Hey there ${name}`); Working with Numbers All user input will be read as a String, so in order to treat user input as numbers, you’ll need to convert the input:\nconst num = prompt(\u0026#39;Enter a number: \u0026#39;); console.log(\u0026#39;Your number + 4 =\u0026#39;); console.log(Number(num) + 4); // or use parseInt() ","permalink":"https://anantcode.github.io/posts/2022-05-10-node-user-input-from-terminal/","summary":"This article has a good summary\nThe basic: const readline = require(\u0026#39;readline\u0026#39;).createInterface({ input: process.stdin, output: process.stdout }); readline.question(\u0026#39;Who are you?\u0026#39;, name =\u0026gt; { console.log(`Hey there ${name}!`); readline.close(); }); Using prompt-sync package After npm install prompt-sync\nconst prompt = require(\u0026#39;prompt-sync\u0026#39;)(); const name = prompt(\u0026#39;What is your name?\u0026#39;); console.log(`Hey there ${name}`); Working with Numbers All user input will be read as a String, so in order to treat user input as numbers, you’ll need to convert the input:","title":"Node: User Input from Terminal"},{"content":"This SO shows a neat way to customize color of your console.log text\n","permalink":"https://anantcode.github.io/posts/2022-05-10-node-change-console-log-color/","summary":"This SO shows a neat way to customize color of your console.log text","title":"Node: Change the color of your console.log"},{"content":"Official Doc: File System API\nconst fs = require(\u0026#39;fs\u0026#39;); Append to a file (if file doesnt exist, create it) Useful when need to log to a file.\nfs.appendFile(\u0026#39;message.txt\u0026#39;, \u0026#39;data to append\u0026#39;, function (err) { if (err) throw err; console.log(\u0026#39;Saved!\u0026#39;); }); Write a file const fs = require(\u0026#39;fs\u0026#39;); fs.writeFile(\u0026#34;/tmp/test\u0026#34;, \u0026#34;Hey there!\u0026#34;, function(err) { if(err) { return console.log(err); } console.log(\u0026#34;The file was saved!\u0026#34;); }); // Or fs.writeFileSync(\u0026#39;/tmp/test-sync\u0026#39;, \u0026#39;Hey there!\u0026#39;); Read a file one line at a time Since Node.js v0.12 and as of Node.js v4.0.0, there is a stable readline core module. Here\u0026rsquo;s the easiest way to read lines from a file, without any external modules:\nconst fs = require(\u0026#39;fs\u0026#39;); const readline = require(\u0026#39;readline\u0026#39;); async function processLineByLine() { const fileStream = fs.createReadStream(\u0026#39;input.txt\u0026#39;); const rl = readline.createInterface({ input: fileStream, crlfDelay: Infinity }); // Note: we use the crlfDelay option to recognize all instances of CR LF // (\u0026#39;\\r\\n\u0026#39;) in input.txt as a single line break. for await (const line of rl) { // Each line in input.txt will be successively available here as `line`. console.log(`Line from file: ${line}`); } } processLineByLine(); Or alternatively: var lineReader = require(\u0026#39;readline\u0026#39;).createInterface({ input: require(\u0026#39;fs\u0026#39;).createReadStream(\u0026#39;file.in\u0026#39;) }); lineReader.on(\u0026#39;line\u0026#39;, function (line) { console.log(\u0026#39;Line from file:\u0026#39;, line); }); The last line is read correctly (as of Node v0.12 or later), even if there is no final \\n.\nCredit: this SO\nRead all files in a directory var fs = require(\u0026#39;fs\u0026#39;); function readFiles(dirname, onFileContent, onError) { fs.readdir(dirname, function(err, filenames) { if (err) { onError(err); return; } filenames.forEach(function(filename) { fs.readFile(dirname + filename, \u0026#39;utf-8\u0026#39;, function(err, content) { if (err) { onError(err); return; } onFileContent(filename, content); }); }); }); } Credit: this SO\n","permalink":"https://anantcode.github.io/posts/2022-05-10-node-fs/","summary":"Official Doc: File System API\nconst fs = require(\u0026#39;fs\u0026#39;); Append to a file (if file doesnt exist, create it) Useful when need to log to a file.\nfs.appendFile(\u0026#39;message.txt\u0026#39;, \u0026#39;data to append\u0026#39;, function (err) { if (err) throw err; console.log(\u0026#39;Saved!\u0026#39;); }); Write a file const fs = require(\u0026#39;fs\u0026#39;); fs.writeFile(\u0026#34;/tmp/test\u0026#34;, \u0026#34;Hey there!\u0026#34;, function(err) { if(err) { return console.log(err); } console.log(\u0026#34;The file was saved!\u0026#34;); }); // Or fs.writeFileSync(\u0026#39;/tmp/test-sync\u0026#39;, \u0026#39;Hey there!\u0026#39;); Read a file one line at a time Since Node.","title":"Node: fs common uses"},{"content":"Build $ npm run build generates static pages.\nTerminal:\nPage Size First Load JS\r┌ ● / 724 B 78.2 kB\r├ └ css/233a1356c16eb650.css 416 B\r├ /_app 0 B 77.5 kB\r├ ○ /[noteId] 484 B 78 kB\r├ └ css/f0a2be9a550dc29f.css 79 B\r├ ○ /404 193 B 77.7 kB\r└ ○ /new-note 749 B 78.2 kB\r└ css/29ba8ee8d48d1f49.css 359 B\r+ First Load JS shared by all 77.5 kB\r├ chunks/framework-1f10003e17636e37.js 45 kB\r├ chunks/main-fc7d2f0e2098927e.js 28.7 kB\r├ chunks/pages/_app-b327587a412059ea.js 3.03 kB\r├ chunks/webpack-69bfa6990bb9e155.js 769 B\r└ css/555e77c84496ecf7.css 464 B\r○ (Static) automatically rendered as static HTML (uses no initial props)\r● (SSG) automatically generated as static HTML + JSON (uses getStaticProps) Full dot means - getStaticProps was used. (only the root page for now)\nHollow dot means - only static rendered.\nPossible problems in getStaticProps in some websites - data could be outdated - because build time done right! no client side data fetching - so can get outdated. Solution:\nWe can rebuild our site and redeploy WHEN OUT DATA CHANGES - good if data doesnt change frequently like personal blog.\nIf data does change frequently - there is an extra property revalidate that takes in a number (say 10), this number is the no. of seconds NextJS will wait until it regenerates the page for an incoming request.\nexport async function getStaticProps() { return { props: { notes: DUMMY_NOTES, }, revalidate: 10 }; } build process will run, but pages wont just generated on build process alone. pages will be generated every couple of seconds on server continuously (if there are incoming requests for the page). The regen. pages will replace old pages. How many seconds to set? Dependson your dat update freqenmecy\nIf yout data changes once every hour - then set this to 3600 If yout data all the time, then 1 sec will be better. Benefit We are ensuring that the page is ocasionally re-pregenerated on the server and after deployment.\nBenefit: You dont have to rebuild and redeploy all the time just because the data changed - done automatically.\nOther option - SSR with getServerSideProps Sometimes regular update (of page) is not enough. Sometimes our real requirement is to regenerate the page on every incoming request. So you want to pre-generate automatically dynamically after deployment on the server - NOT during the build process, and NOT every couple of seconds\ngetServerSideProps() This is also a reserved name.\nexport async function getServerSideProps() { return { props: { notes: DUMMY_NOTES, } }; } This function will not run during the build process, but instead always on the server after deployment. It also returns an object with props key.\nAny code you write here will always run on the server. Never on the client\nYou can also perform operations whcih use credentials, which sould be not exposed to client. We can do it because this code only runs on Server.\nCant set revalidate here - which is obvious because there is no longer need to revalidate because he function gssp runs every incoming request anyway.\ncontext parameter in getServerSideProps() export async function getServerSideProps(context) { const req = context.req; const res = context.res; //fetch data from an API return { props: { notes: DUMMY_NOTES, } }; } context param gives access to request and response.\nthe above may look kindof familiar (if you have worked on node, express) (we also get req and res objects in middleware, to then work with those)\nYou can work on authentication (check session cookie) etc.\nHave access to all headers, req body etc.\nUltimately you DON\u0026rsquo;T return response using context.res \u0026ndash; you return only the objects with props key.\nWhich one to use - getStaticProps / getServerSideProps GSSP\nalways updated data - but more time processing every incoming req\nUse it for data that changes a lot (think multiple times every second)\nOnly 2 reasons to use GSSP -\nYou need access to req (not possible ni GSP) Data changes many times a second. GSP\nIf you dont need access to request object - for lets say authentication - if you dont need authentication, then getStaticProps is better. Because here we pre generate an HTML file. That file can then be stored and served by a CDN - and that is simply faster than fetchnig data + regenerating for every incoming request. Your page will be faster with getStaticProps - because then it can be cached and reused, instead of regenerated every time.\n","permalink":"https://anantcode.github.io/posts/2022-05-10-day4-100doc/","summary":"Build $ npm run build generates static pages.\nTerminal:\nPage Size First Load JS\r┌ ● / 724 B 78.2 kB\r├ └ css/233a1356c16eb650.css 416 B\r├ /_app 0 B 77.5 kB\r├ ○ /[noteId] 484 B 78 kB\r├ └ css/f0a2be9a550dc29f.css 79 B\r├ ○ /404 193 B 77.7 kB\r└ ○ /new-note 749 B 78.2 kB\r└ css/29ba8ee8d48d1f49.css 359 B\r+ First Load JS shared by all 77.5 kB\r├ chunks/framework-1f10003e17636e37.","title":"Day4 #100DaysOfCode"},{"content":"Replace mock data with a real datasource:\nSend HTTP request once the page has loaded - we would typically use useEffect() Runs whenever component is frist rendered, never after. Do: fetch your data inside it.\nManage state for the component - use useState() hook\nconst [loadedNotes, setLoadedNotes] = useState([]); useEffect(()=\u0026gt; { //send http request and fetch data. //set on component setLoadedNotes(LOADED_NOTES); }, []); Full code (with function component):\nfunction HomePage(){ const [loadedNotes, setLoadedNotes] = useState([]); useEffect(()=\u0026gt; { //send http request and fetch data. //set on component setLoadedNotes(LOADED_NOTES); }, []); return \u0026lt;NoteList notes={LOADED_NOTES} /\u0026gt; } export default HomePage; useEffect() works like - whatever fn you pass into it - it executes that fn AFTER the function component is executed.\nThis means:\nFirst time the HomePage function component is executed, LOADED_NOTES will be an empty array. Then this useEffect will execute- update the state, due to which the component function will execute again (because state changed), and will render again. Therefore 2 render cycles. Why emphasing on the 2 render cycle?\nBecause UX affected because (rerender/flickering) - and SEO affected - in the first render, data is not there! - because it is rendered in the second component execution cycle.\nthe prerendered HTML page (generated by nextjs automatically) does not wait for the second cycle - it always takes the result of the first render cycle and returns that as the pre rendered HTML code.\nThankfully nextjs has solution to this: Page Pre-rendering\nPage pre rendering Can use getStaticProps\nreserved name only works in pages/ (components under pages) This executes before the component function is run is allowed to be async. (ie you ca return promise) (nextjs will wait for the promise to get resolved) You can use getSP to run code that woukd usualyy run on a server - like ccess file sytem, connect to a DB. Any code you write in here will never end up in client side, never execute on client side. simply because this code is executed during the build process, not on the server and especially not on the clients of your visitors.\nSo the code in here will never reach the machines of your visitors.\nIt will never execute on their machines.\nNow, here in getStaticProps, you can do whatever you want, for example, fetch data from an API or from a database or read data from some files in the file system.\nBut then once you\u0026rsquo;re done with whatever you did to get the data you need, you need to return an object here in getStaticProps.\nYou always need to return an object from gsp.\nNow, in this object, you can configure various things but most importantly, you typically set a props property here and it has to be named props.\nWhat props holds will be the props object you receive in your component function (HomePage(props)).\nThe structure of this props object is totally up to you, (we could have our notes key in there.) which holds our DUMMY_NOTES.\nexport async function getStaticProps(){ //fetch data from an API return { props: { notes: DUMMY_NOTES } } } Therefore in our HomePage() we no longer need to manage state! We no longer need useEffect! - because we now get the data from props (thanks to gsp)\nFinal:\nfunction HomePage(props){ // const [loadedNotes, setLoadedNotes] = useState([]); // useEffect(()=\u0026gt; { // //send http request and fetch data. // //set on component // setLoadedNotes(LOADED_NOTES); // }, []); return \u0026lt;NoteList notes={props.notes} /\u0026gt; } export async function getStaticProps(){ //fetch data from an API return { props: { notes: DUMMY_NOTES } } } export default HomePage; We moved the data-fetching away from client (moved it to during the build process)\n","permalink":"https://anantcode.github.io/posts/2022-05-09-day3-100doc/","summary":"Replace mock data with a real datasource:\nSend HTTP request once the page has loaded - we would typically use useEffect() Runs whenever component is frist rendered, never after. Do: fetch your data inside it.\nManage state for the component - use useState() hook\nconst [loadedNotes, setLoadedNotes] = useState([]); useEffect(()=\u0026gt; { //send http request and fetch data. //set on component setLoadedNotes(LOADED_NOTES); }, []); Full code (with function component):\nfunction HomePage(){ const [loadedNotes, setLoadedNotes] = useState([]); useEffect(()=\u0026gt; { //send http request and fetch data.","title":"Day3 #100DaysOfCode"},{"content":"Day 2 Key Learnings:\npages folder name is reserved in nextjs. Others like components is not reserved. How props are passed to a component. Utilize _app.js for anything that affects all pages like Layout - wrap with Layout component, Navigation (with links) etc Using Programmatic (Imperative) Navigation The usual rule of a Reach Hook: Only use directly only at the root level of component function. (e.g. using useRouter) useRouter has not just query that gives slug, it also has push() whose job is equivalent to Link component Starting point of project with some templates\nCreate a home page with list of cards Props are passed to a component.\nComponent NoteList then uses the notes prop)\nimport NoteItem from \u0026#34;./NoteItem\u0026#34;; import classes from \u0026#34;./NoteList.module.css\u0026#34;; function NoteList(props) { return ( \u0026lt;ul className={classes.list}\u0026gt; {props.notes.map((note) =\u0026gt; ( \u0026lt;NoteItem key={note.id} id={note.id} image={note.image} title={note.title} address={note.address} /\u0026gt; ))} \u0026lt;/ul\u0026gt; ); } export default NoteList; Passing the props to component:\nimport NoteList from \u0026#34;../components/notes/NoteList\u0026#34;; let note = [ { id: 1, image: \u0026#34;https://cdn.pixabay.com/photo/2015/04/23/22/00/tree-736885__480.jpg\u0026#34;, title: \u0026#34;sunset\u0026#34;, address: \u0026#34;Beach Hawaii\u0026#34;, }, ]; function HomePage() { return \u0026lt;NoteList notes={note} /\u0026gt;; } export default HomePage; Adding a New Note page - where user can add a new note. Notice the path - its under pages\nBut need a form component now!\nCreate a form component Use this sample implementation:\nUses useRef (standard React) Relies on a Prop onAddNote to do something, when submit is pressed. The prop as usual comes from the ? _____ the parent page Page(nextjs) - Component (form) Page that contains component - is a style I see in Next or Maxmilian. import { useRef } from \u0026#34;react\u0026#34;; import Card from \u0026#34;../ui/Card\u0026#34;; import classes from \u0026#34;./NewNoteForm.module.css\u0026#34;; function NewNoteForm(props) { const titleInputRef = useRef(); const imageInputRef = useRef(); const addressInputRef = useRef(); const descriptionInputRef = useRef(); function submitHandler(event) { event.preventDefault(); const enteredTitle = titleInputRef.current.value; const enteredImage = imageInputRef.current.value; const enteredAddress = addressInputRef.current.value; const enteredDescription = descriptionInputRef.current.value; const noteData = { title: enteredTitle, image: enteredImage, address: enteredAddress, description: enteredDescription, }; props.onAddNote(noteData); } return ( \u0026lt;Card\u0026gt; \u0026lt;form className={classes.form} onSubmit={submitHandler}\u0026gt; \u0026lt;div className={classes.control}\u0026gt; \u0026lt;label htmlFor=\u0026#34;title\u0026#34;\u0026gt;Note Title\u0026lt;/label\u0026gt; \u0026lt;input type=\u0026#34;text\u0026#34; required id=\u0026#34;title\u0026#34; ref={titleInputRef} /\u0026gt; \u0026lt;/div\u0026gt; \u0026lt;div className={classes.control}\u0026gt; \u0026lt;label htmlFor=\u0026#34;image\u0026#34;\u0026gt;Note Image\u0026lt;/label\u0026gt; \u0026lt;input type=\u0026#34;url\u0026#34; required id=\u0026#34;image\u0026#34; ref={imageInputRef} /\u0026gt; \u0026lt;/div\u0026gt; \u0026lt;div className={classes.control}\u0026gt; \u0026lt;label htmlFor=\u0026#34;address\u0026#34;\u0026gt;Address\u0026lt;/label\u0026gt; \u0026lt;input type=\u0026#34;text\u0026#34; required id=\u0026#34;address\u0026#34; ref={addressInputRef} /\u0026gt; \u0026lt;/div\u0026gt; \u0026lt;div className={classes.control}\u0026gt; \u0026lt;label htmlFor=\u0026#34;description\u0026#34;\u0026gt;Description\u0026lt;/label\u0026gt; \u0026lt;textarea id=\u0026#34;description\u0026#34; required rows=\u0026#34;5\u0026#34; ref={descriptionInputRef} \u0026gt;\u0026lt;/textarea\u0026gt; \u0026lt;/div\u0026gt; \u0026lt;div className={classes.actions}\u0026gt; \u0026lt;button\u0026gt;Add Note\u0026lt;/button\u0026gt; \u0026lt;/div\u0026gt; \u0026lt;/form\u0026gt; \u0026lt;/Card\u0026gt; ); } export default NewNoteForm; Import the form (component) in page: Form (component): Just created above\nPage pages\\new-note\\index.js\nImport and Use:\nimport NewNoteForm from \u0026#34;../../components/notes/NewNoteForm\u0026#34;; function NewNotePage() { return \u0026lt;NewNoteForm /\u0026gt;; } export default NewNotePage; Something is missing: The prop we need to pass!\nimport NewNoteForm from \u0026#34;../../components/notes/NewNoteForm\u0026#34;; function NewNotePage() { function onAddNoteHandler(noteData) { console.log(noteData); } return \u0026lt;NewNoteForm onAddNote={onAddNoteHandler} /\u0026gt;; } export default NewNotePage; Learnt from this error - Error: EISDIR: illegal operation on a directory, read because had creaed the folder new-note by mistake named as new-note.js pages\\new-note.js\\index.js. The error means node is trying to treat a folder (by mistake) as a file.\nAdd Layout and Navigation Layout - to wrap out components Gives a general layout to our components.\nNavigation Bar - for links\nUse this ready template for Layout and Navigation as reference.\nAdding Layout Original pages\\_app.js:\nimport \u0026#39;../styles/globals.css\u0026#39; function MyApp({ Component, pageProps }) { return \u0026lt;Component {...pageProps} /\u0026gt; } export default MyApp Adding Layout:\nimport \u0026#34;../styles/globals.css\u0026#34;; import Layout from \u0026#34;../components/layout/Layout\u0026#34;; function MyApp({ Component, pageProps }) { return ( \u0026lt;Layout\u0026gt; \u0026lt;Component {...pageProps} /\u0026gt; \u0026lt;/Layout\u0026gt; ); } export default MyApp; Add Navigation bar Its part of Layout! so by adding to _app.js, navigation also gets added to all pages!\nFix this small pending stuff in MainNavigation.js\nimport Link user href Remove margin on top bar Final!\nProgrammatic Navigation (Imperative) We want the buttons to work (Show Details button on home list) On click - Load individual Note item So we would need link to single individual note URL, and can use Link.\nWe could use the Link Component, or \u0026lt;button\u0026gt; component. But for learning, lets try programmatically changing pages (navigating)\nusing useRouter : General rule of React: use a react hook directly only at the root level of component function. Go to index.js \u0026gt; look for components\u0026hellip;. \u0026gt; NoteItem has the button Show Details\nAdd onClick to \u0026lt;button\u0026gt;\nWrite the function - where!?? - got stuck here\na. In parent - and pass in propr and use here from prop?\nb. or in same NoteItem\nHad to refer - example chooses to got with b.\nAb kya kare!\nTried this wrong:\nimport Card from \u0026#34;../ui/Card\u0026#34;; import classes from \u0026#34;./NoteItem.module.css\u0026#34;; import { useRouter } from \u0026#34;next/router\u0026#34;; function NoteItem(props) { const router = useRouter(); function handleShowDetailsClick(event) { console.log(event); let noteId = event.target.id; router.push(`/${noteId}`); } ... } Solution: Actually nothing to do ith event.target.id to get the URL.\nWe want URL of page. We need nothing from button info. We can know the individual card\u0026rsquo;s (items\u0026rsquo;s) detail like key and since it is used on the URL as slug, we can use it - create URL - push on Router. Using useRouter to get redirect using push: The key was passed originally as prop: \u0026hellip;and futher as prop: We can see that on click, it redirects to the URL! 😁 Although there is no such page yet, so we get an error.\ngetserversideprops-dynamic-route.gif\nAdd individual Note component At /pages/[niteId]/index.js\nimport { Fragment } from \u0026#34;react\u0026#34;; function Note() { return ( \u0026lt;Fragment\u0026gt; \u0026lt;img src=\u0026#34;https://www.nasa.gov/sites/default/files/thumbnails/image/pia23378-16.jpg\u0026#34; alt=\u0026#34;selfie from mars\u0026#34; \u0026gt;\u0026lt;/img\u0026gt; \u0026lt;h1\u0026gt;First Note\u0026lt;/h1\u0026gt; \u0026lt;p\u0026gt;This is Curiosity\u0026#39;s selfie from Mars\u0026lt;/p\u0026gt; \u0026lt;/Fragment\u0026gt; ); } export default Note; The styling looks off. So create a new STYLING\nNaming the css files in a particular way - e.g. say component is Comp, then its css file should be named Comp.module.css. Doing this restricts the scope of the CSS class styles defined to Comp only. Its a React thing, that Next also supports. This is called CSS Modules\nBefore going into styling let\u0026rsquo;s try to make everything on this page flexible: Create a pure component - that does everything from its props\nBy doing this we are also trying to keep pages folder lean\nCreate function component in components\\notes\\NoteDetail.js\nimport classes from \u0026#34;./NoteDetail.module.css\u0026#34;; function NoteDetail(props) { return ( \u0026lt;segment className={classes.detail}\u0026gt; \u0026lt;img src={props.image} alt={props.title}\u0026gt;\u0026lt;/img\u0026gt; \u0026lt;h1\u0026gt;{props.title}\u0026lt;/h1\u0026gt; \u0026lt;p\u0026gt;{props.details}\u0026lt;/p\u0026gt; \u0026lt;/segment\u0026gt; ); } export default NoteDetail; Also create related CSS:\nat components\\notes\\NoteDetail.module.css\n.detail img { /* Makes the large image fit the container */ width: 100%; } .detail { text-align: center; } Now pass dummy data as props:\nat pages\\[noteId]\\index.js\nimport NoteDetail from \u0026#34;../../components/notes/NoteDetail\u0026#34;; function NoteDetails() { return ( \u0026lt;NoteDetail title=\u0026#34;Selfie from Mars\u0026#34; details=\u0026#34;This is Curiosity\u0026#39;s selfie from Mars\u0026#34; image=\u0026#34;https://www.nasa.gov/sites/default/files/thumbnails/image/pia23378-16.jpg\u0026#34; \u0026gt;\u0026lt;/NoteDetail\u0026gt; ); } export default NoteDetails; ","permalink":"https://anantcode.github.io/posts/2022-05-08-day2-100doc/","summary":"Day 2 Key Learnings:\npages folder name is reserved in nextjs. Others like components is not reserved. How props are passed to a component. Utilize _app.js for anything that affects all pages like Layout - wrap with Layout component, Navigation (with links) etc Using Programmatic (Imperative) Navigation The usual rule of a Reach Hook: Only use directly only at the root level of component function. (e.g. using useRouter) useRouter has not just query that gives slug, it also has push() whose job is equivalent to Link component Starting point of project with some templates","title":"Day 2 #100DaysOfCode"},{"content":"The most updated documentation to get started with Heroku is the official Heroku Dev Center documentation.\nFollowing is to get started with Node.js on Heroku\n1. Install git and perform first time git setup Git installation First-time Git setup 2. Install heroku cli from here\n3. Login in heroku using heroku cli heroku login On successful authentication, you get success message.\nLogging in... done\rLogged in as xxxxxxxx@xxxxx.com Prepare the app If dont already have the project in your local, clone it from your remote:\ngit clone https://github.com/heroku/node-js-getting-started.git\rcd node-js-getting-started Create an App on Heroku you can either use the CLI or do it on Heroku UI.\nUsing CLI $ heroku create Creating sharp-rain-871... done, stack is heroku-18 http://sharp-rain-871.herokuapp.com/ | https://git.heroku.com/sharp-rain-871.git Git remote heroku added When you create an app, a git remote (called heroku) is also created and associated with your local git repository.\nHeroku generates a random name (in this case sharp-rain-871) for your app, or you can pass a parameter to specify your own app name.\nUsing Heroku UI Create from your Heroku Dashboard: Deploy the app $ git push heroku main Note: If you did not use the heroku create on heroku cli, you may get the error:\n$ git push heroku main\rfatal: \u0026#39;heroku\u0026#39; does not appear to be a git repository\rfatal: Could not read from remote repository. Please make sure you have the correct access rights\rand the repository exists. In such case, add the 2nd remote as heroku (get the URL for you app from Heroku website) (first remote is the GitHub remote) by:\n$ git remote add heroku https://git.heroku.com/xxxx You can check remotes now:\nDeploy git push heroku main should give logs like:\n$ git push heroku main\rEnumerating objects: 27, done.\rCounting objects: 100% (27/27), done.\rDelta compression using up to 4 threads\rCompressing objects: 100% (23/23), done.\rWriting objects: 100% (27/27), 12.46 KiB | 797.00 KiB/s, done.\rTotal 27 (delta 11), reused 3 (delta 0), pack-reused 0\rremote: Compressing source files... done.\rremote: Building source:\rremote:\rremote: -----\u0026gt; Building on the Heroku-20 stack\rremote: -----\u0026gt; Determining which buildpack to use for this app\rremote: -----\u0026gt; Node.js app detected\rremote:\rremote: -----\u0026gt; Creating runtime environment\rremote:\rremote: NPM_CONFIG_LOGLEVEL=error\rremote: NODE_VERBOSE=false\rremote: NODE_ENV=production\rremote: NODE_MODULES_CACHE=true\rremote:\rremote: -----\u0026gt; Installing binaries\rremote: engines.node (package.json): unspecified\rremote: engines.npm (package.json): unspecified (use default)\rremote:\rremote: Resolving node version 16.x...\rremote: Downloading and installing node 16.15.0...\rremote: Using default npm version: 8.5.5\rremote:\rremote: -----\u0026gt; Installing dependencies\rremote: Installing node modules\rremote: added 78 packages, and audited 79 packages in 2s\rremote:\rremote: 19 packages are looking for funding\rremote: run `npm fund` for details\rremote:\rremote: found 0 vulnerabilities\rremote:\rremote: -----\u0026gt; Build\rremote:\rremote: -----\u0026gt; Caching build\rremote: - node_modules\rremote:\rremote: -----\u0026gt; Pruning devDependencies\rremote:\rremote: up to date, audited 79 packages in 447ms\rremote:\rremote: 19 packages are looking for funding\rremote: run `npm fund` for details\rremote:\rremote: found 0 vulnerabilities\rremote:\rremote: -----\u0026gt; Build succeeded!\rremote: -----\u0026gt; Discovering process types\rremote: Procfile declares types -\u0026gt; (none)\rremote: Default types for buildpack -\u0026gt; web\rremote:\rremote: -----\u0026gt; Compressing...\rremote: Done: 32.5M\rremote: -----\u0026gt; Launching...\rremote: Released v3\rremote: https://this-day8.herokuapp.com/ deployed to Heroku\rremote:\rremote: Verifying deploy... done.\rTo https://git.heroku.com/this-day8.git\r* [new branch] main -\u0026gt; main But on visiting the URL I got error:\nCheck logs for troubleshooting heroku logs \u0026ndash;tail\nTurns out nodemon was not found!\n2022-05-06T09:58:26.000000+00:00 app[api]: Build succeeded\r2022-05-06T09:58:27.023226+00:00 heroku[web.1]: Starting process with command `npm start`\r2022-05-06T09:58:28.969211+00:00 app[web.1]:\r2022-05-06T09:58:28.969223+00:00 app[web.1]: \u0026gt; testapifors@1.0.0 start\r2022-05-06T09:58:28.969223+00:00 app[web.1]: \u0026gt; nodemon server.js\r2022-05-06T09:58:28.969224+00:00 app[web.1]:\r2022-05-06T09:58:28.974214+00:00 app[web.1]: sh: 1: nodemon: not found\r2022-05-06T09:58:29.085724+00:00 heroku[web.1]: Process exited with status 127\r2022-05-06T09:58:29.234553+00:00 heroku[web.1]: State changed from starting to crashed\r2022-05-06T09:58:29.251259+00:00 heroku[web.1]: State changed from crashed to starting\r2022-05-06T09:58:30.864850+00:00 heroku[web.1]: Starting process with command `npm start`\r2022-05-06T09:58:32.548489+00:00 app[web.1]:\r2022-05-06T09:58:32.548500+00:00 app[web.1]: \u0026gt; testapifors@1.0.0 start\r2022-05-06T09:58:32.548500+00:00 app[web.1]: \u0026gt; nodemon server.js\r2022-05-06T09:58:32.548500+00:00 app[web.1]:\r2022-05-06T09:58:32.554184+00:00 app[web.1]: sh: 1: nodemon: not found\r2022-05-06T09:58:32.671680+00:00 heroku[web.1]: Process exited with status 127\r2022-05-06T09:58:32.851593+00:00 heroku[web.1]: State changed from starting to crashed nodemon not found! changed the package.json to not use nodemon, and use node instead, on npm start\nPut nodemon in start.dev script in package.json\nRetry: ..\r..\r2022-05-06T10:12:06.000000+00:00 app[api]: Build succeeded\r2022-05-06T10:12:06.034850+00:00 heroku[web.1]: State changed from crashed to starting\r2022-05-06T10:12:07.725643+00:00 heroku[web.1]: Starting process with command `npm start`\r2022-05-06T10:12:09.567392+00:00 app[web.1]: 2022-05-06T10:13:13.742775+00:00 app[web.1]: \u0026gt; node server.js\r2022-05-06T10:13:13.742775+00:00 app[web.1]:\r2022-05-06T10:13:13.934105+00:00 app[web.1]: Server started on port 3000\r2022-05-06T10:14:07.870659+00:00 heroku[router]: at=error code=H20 desc=\u0026#34;App boot timeout\u0026#34; method=GET path=\u0026#34;/wiki/today\u0026#34; host=this-day8.herokuapp.com request_id=be0d1924-0259-46d1-8b71-79eb4ee86ae6 fwd=\u0026#34;183.83.140.195\u0026#34; dyno= connect= service= status=503 bytes= protocol=https\r2022-05-06T10:14:10.927180+00:00 heroku[web.1]: Error R10 (Boot timeout) -\u0026gt; Web process failed to bind to $PORT within 60 seconds of launch\r2022-05-06T10:14:10.958959+00:00 heroku[web.1]: Stopping process with SIGKILL\r2022-05-06T10:14:11.227878+00:00 heroku[web.1]: Process exited with status 137\r2022-05-06T10:14:11.278031+00:00 heroku[web.1]: State changed from starting to crashed\r2022-05-06T10:14:11.718507+00:00 heroku[router]: at=error code=H10 desc=\u0026#34;App crashed\u0026#34; method=GET path=\u0026#34;/wiki/today\u0026#34; host=this-day8.herokuapp.com request_id=6ac67c9b-a0df-4c51-8c09-6ceaee4e30f7 fwd=\u0026#34;183.83.140.195\u0026#34; dyno= connect= service= status=503 bytes= protocol=https\r2022-05-06T10:14:12.789253+00:00 heroku[router]: at=error code=H10 desc=\u0026#34;App crashed\u0026#34; method=GET path=\u0026#34;/wiki/today\u0026#34; host=this-day8.herokuapp.com request_id=71d9a0f5-84cc-49d4-822a-280f47d0f17d fwd=\u0026#34;183.83.140.195\u0026#34; dyno= connect= service= status=503 bytes= protocol=https Notice Error R10 (Boot timeout) -\u0026gt; Web process failed to bind to $PORT within 60 seconds of launch\nJust starting your express server at process.env.PORT fixes this. Heroku automatically assigns a port that can be used by referencing process.env.PORT\nSee this SO answer for more.\n","permalink":"https://anantcode.github.io/posts/2022-05-05-deploy-to-heroku/","summary":"The most updated documentation to get started with Heroku is the official Heroku Dev Center documentation.\nFollowing is to get started with Node.js on Heroku\n1. Install git and perform first time git setup Git installation First-time Git setup 2. Install heroku cli from here\n3. Login in heroku using heroku cli heroku login On successful authentication, you get success message.\nLogging in... done\rLogged in as xxxxxxxx@xxxxx.com Prepare the app If dont already have the project in your local, clone it from your remote:","title":"Deploy to Heroku"},{"content":"Ctrl + Shift + A lets you type and select tab by its title:\n","permalink":"https://anantcode.github.io/posts/2022-05-04-too-many-chrome-tabs/","summary":"Ctrl + Shift + A lets you type and select tab by its title:","title":"Too many Chrome Tabs? Use this to find your tab"},{"content":"Google Search Console is a free service offered by Google that helps you monitor, maintain, and troubleshoot your site\u0026rsquo;s presence in Google Search results.\nYou don\u0026rsquo;t have to sign up for Search Console to be included in Google Search results, but Search Console helps you understand and improve how Google sees your site.\nSearch Console offers tools and reports for the following actions:\nConfirm that Google can find and crawl your site. Fix indexing problems and request re-indexing of new or updated content. View Google Search traffic data for your site: how often your site appears in Google Search, which search queries show your site, how often searchers click through for those queries, and more. Add/verify your property (your site) with Google Search Console Google Search Console lets you add your site after verification:\nYou can use any of the multiple verification methods: In this article we will be talking about the HTML tag method.\nFaced problem with adding meta verification tag on my PaperMod theme Hugo site Followed the PaperMod\u0026rsquo;s theme\u0026rsquo;s documentation to add the google-site-verification meta tag.\nOn inspecting the homepage, did not find the \u0026lt;meta\u0026gt; tag added to the HTML.\nLooking at themes\\PaperMod\\layouts\\partials\\head.html\nModified my config.yml\nand on rebuild got the meta tag added finally!\n","permalink":"https://anantcode.github.io/posts/2022-05-03-google-search-console-verification-with-papermod-hugo/","summary":"Google Search Console is a free service offered by Google that helps you monitor, maintain, and troubleshoot your site\u0026rsquo;s presence in Google Search results.\nYou don\u0026rsquo;t have to sign up for Search Console to be included in Google Search results, but Search Console helps you understand and improve how Google sees your site.\nSearch Console offers tools and reports for the following actions:\nConfirm that Google can find and crawl your site.","title":"How to verifiy Hugo Papermod theme site on Google Search Console"},{"content":"Observed that when doing GET using Axios on https://www.twitter.com/\u0026lt;id\u0026gt; I did not get the HTML that I was expecting (having the tweets etc.) (although got the text in HTML on browser)\nSaw this on googling: Twitter has updated their layout to render data primarily through Javascript. You will need to scrape https://mobile.twitter.com rather than https://twitter.com. As mobile twitter still renders html in the source. We will be updating the scraper soon to be able to crawl js rendered content.\nTried mobile. too but as of 2022 May it seems mobile also doest have the HTML.\n","permalink":"https://anantcode.github.io/posts/2022-05-01-tried-scraping-twitter/","summary":"Observed that when doing GET using Axios on https://www.twitter.com/\u0026lt;id\u0026gt; I did not get the HTML that I was expecting (having the tweets etc.) (although got the text in HTML on browser)\nSaw this on googling: Twitter has updated their layout to render data primarily through Javascript. You will need to scrape https://mobile.twitter.com rather than https://twitter.com. As mobile twitter still renders html in the source. We will be updating the scraper soon to be able to crawl js rendered content.","title":"I tried scraping Twitter"},{"content":"They serve two different purposes.\nNodemon to restart a node app when file changes in a directory are detected.\nLive server will refresh your browser when changes are detected to any supported file types (e.g. HTML, JS, CSS). It also enables Ajax requests when you are working locally — these don\u0026rsquo;t normally work with the file:// protocol.\n","permalink":"https://anantcode.github.io/posts/2022-05-01-nodemon-vs-liveserver/","summary":"They serve two different purposes.\nNodemon to restart a node app when file changes in a directory are detected.\nLive server will refresh your browser when changes are detected to any supported file types (e.g. HTML, JS, CSS). It also enables Ajax requests when you are working locally — these don\u0026rsquo;t normally work with the file:// protocol.","title":"Nodemon vs Live Server"},{"content":"https://superuser.com/questions/341192/how-can-i-display-the-contents-of-an-environment-variable-from-the-command-promp\nYou can see all env. variables using:\nset Works with cmd - Yes Works with Windows Terminal - No In Windows Command-Prompt see only the Path variable:\necho %PATH% ","permalink":"https://anantcode.github.io/posts/2022-05-01-path-environment-variable-windows/","summary":"https://superuser.com/questions/341192/how-can-i-display-the-contents-of-an-environment-variable-from-the-command-promp\nYou can see all env. variables using:\nset Works with cmd - Yes Works with Windows Terminal - No In Windows Command-Prompt see only the Path variable:\necho %PATH% ","title":"Path environment variable in Windows"},{"content":"https://stackoverflow.com/questions/1098786/run-bash-script-from-windows-powershell\n","permalink":"https://anantcode.github.io/posts/2022-05-01-run-sh-from-anywhere/","summary":"https://stackoverflow.com/questions/1098786/run-bash-script-from-windows-powershell","title":"Run Shell script from anywhere on Windows"},{"content":"Install a npm package globally npm install -g \u0026lt;name\u0026gt; Installing without -g option will install a module to your working directory (in node_modules folder)\nCheck where global packages/libraries are installed: npm list -g to see which global libraries are installed and where they\u0026rsquo;re located.\nAdditionally --depth=0 can be used to avoid including every package\u0026rsquo;s dependencies in the tree view (show only the global packages that you installed, not dependencies of them)\nnpm list -g --depth=0 References: https://stackoverflow.com/questions/17937960/how-to-list-npm-user-installed-packages\n","permalink":"https://anantcode.github.io/posts/2022-05-01-where-are-global-npm-packages-installed/","summary":"Install a npm package globally npm install -g \u0026lt;name\u0026gt; Installing without -g option will install a module to your working directory (in node_modules folder)\nCheck where global packages/libraries are installed: npm list -g to see which global libraries are installed and where they\u0026rsquo;re located.\nAdditionally --depth=0 can be used to avoid including every package\u0026rsquo;s dependencies in the tree view (show only the global packages that you installed, not dependencies of them)","title":"Where are Global npm packages installed?"},{"content":"DNS Lookup (resolving the web address) The first step in navigating to a web page is finding where the assets for that page are located (HTML, CSS, Javascript and other kind of files)\nIf we\u0026rsquo;ve never visited this site before, a Domain Name System (DNS) lookup must happen.\nDNS servers are computer servers that contain a database of public IP addresses and their associated hostnames (this is commonly compared to a phonebook in that people\u0026rsquo;s names are associated to a particular phone number). In most cases these servers serve to resolve or translate those names to IP addresses as requested (right now there are over 600 different DNS root servers distributed across the world).\nSo when we request a DNS lookup, what we actually do is interogate one of these servers and ask to find out which IP address coresponds to the https://example.com name.\nAfter this initial lookup, the IP address will probably be cached for a while, so next visits on the same website will happen faster since there\u0026rsquo;s no need for a DNS lookup (remember, a DNS lookup only happens the first time we visit a website).\nTCP (Transmission Control Protocol) Handshake Once the web browser knows the IP address of the website, it will try and set up a connection to the server holding the resources, via a TCP three-way handshake (also called SYN-SYN-ACK, or more accurately SYN, SYN-ACK, ACK, because there are three messages transmitted by TCP to negotiate and start a TCP session between two computers).\nTCP stands for Transmission Control Protocol, a communications standard that enables application programs and computing devices to exchange messages over a network. It is designed to send packets (of data) across the Internet and ensure the successful delivery of data and messages over networks.\nThe TCP Handshake is a mechanism designed so that two entities (in our case the browser and the server) that want to pass information back and forth to each other can negotiate the parameters of the connection before transmitting data.\nThe browser sends a SYNC message to the server and asks for SYNchronization (synchronization means the connection).\nThe server will then reply with a SYNC-ACK message (SYNChronization and ACKnowledgement):\nIn the last step, the browser will reply with an ACK message.\nNow that the TCP connection (a two way connection) has been established through the 3 way handshake, the TLS negotiation can begin.\nTLS negotiation For secure connections established over HTTPS, anotherhandshake is needed.\nThis handshake (TLS negotiation)\ndetermines which cipher will be used to encrypt the communication, verifies the server and establishes that a secure connection is in place before beginning the actual transfer of data. Transport Layer Security (TLS), the successor of the now-deprecated Secure Sockets Layer (SSL), is a cryptographic protocol designed to provide communications security over a computer network. The protocol is widely used in applications such as email and instant messaging but its use in securing HTTPS remains the most publicly visible. Since applications can communicate either with or without TLS (or SSL), it is necessary for the client (browser) to request that the server sets up a TLS connection.\nReference: https://dev.to/arikaturika/how-web-browsers-work-part-1-with-illustrations-1nid\n","permalink":"https://anantcode.github.io/posts/2022-04-30-how-web-browsers-work-1/","summary":"DNS Lookup (resolving the web address) The first step in navigating to a web page is finding where the assets for that page are located (HTML, CSS, Javascript and other kind of files)\nIf we\u0026rsquo;ve never visited this site before, a Domain Name System (DNS) lookup must happen.\nDNS servers are computer servers that contain a database of public IP addresses and their associated hostnames (this is commonly compared to a phonebook in that people\u0026rsquo;s names are associated to a particular phone number).","title":"How Web Browsers Work Part - 1"},{"content":"When working on multiple simultaneously open VSCode windows, use Peacock for Visual Studio Code\nPeacock enables you to easily distinguish between and locate different VSCode workspaces.\nYou can set color of your choice for each of the VSCode projects (at workspace level).\nSo you can have different colors for each of your frontend, backend etc. apps.\nkeywords:\nmultiple windows in vscode, window management,\n","permalink":"https://anantcode.github.io/posts/2022-04-28-peacock-vscode-extension/","summary":"When working on multiple simultaneously open VSCode windows, use Peacock for Visual Studio Code\nPeacock enables you to easily distinguish between and locate different VSCode workspaces.\nYou can set color of your choice for each of the VSCode projects (at workspace level).\nSo you can have different colors for each of your frontend, backend etc. apps.\nkeywords:\nmultiple windows in vscode, window management,","title":"Peacock VSCode Extension - working with multiple VSCode workspaces made easy"},{"content":"My email ID (with gmail) contains. .\nLike ab.cd@gmail.com.\nUsually with Google/gmail it is not a problem - login etc work as usual if I skip the .\nab.cd@gmail.com abcd@gmail.com\nOn Gmail, both are equivalemt. Login works with both, as Google ignores dots in Gmail addresses.\nBut for GitHub it is not the case.\nI had GH setup with ab.cd@gmail.com I was using commit email without the dot, i.e. git config user.email as abcd@gmail.com According to GitHub the contribution is counted only if email in commit-email is same as the one defined on GitHub\nChanged the config in my local repo\nupdated the email in git config git config user.email \u0026#34;ab.cd@gmail.com\u0026#34; and the contributions started showing fron thet point.\nUnfortunately, the older contributions with the \u0026ldquo;wrong\u0026rdquo; email still dont show. I may look into it later, if there is a way.\n","permalink":"https://anantcode.github.io/posts/2022-04-26-github-contribution-not-counted-due-to-dot-in-email/","summary":"My email ID (with gmail) contains. .\nLike ab.cd@gmail.com.\nUsually with Google/gmail it is not a problem - login etc work as usual if I skip the .\nab.cd@gmail.com abcd@gmail.com\nOn Gmail, both are equivalemt. Login works with both, as Google ignores dots in Gmail addresses.\nBut for GitHub it is not the case.\nI had GH setup with ab.cd@gmail.com I was using commit email without the dot, i.e. git config user.","title":"GitHub Contribution not counted!"},{"content":"When creating blog posts on my Hugo site, I used to run into requirement of adding image - there are 2 choices:\nPut the image as static file in my site Should I use a public URL from a quick Google search (hosted by someone else!) I decided to go with a 3rd option - host my own image on cloud and use its URL.\nDoing it with imgur.\nIt allows unlimited storage with limit of 50 uploads per hour.\nAt first I signed up on imgur on the onset, without realizing it is possible to upload even without signing up, and that too using the screenshot capture tool that I already use (Greenshot).\nTools to upload screenshots to imgur myimgur Found myimgur on a quick search. Didnt find it to have the most friendly UX.\nGreenshot (preferred) Greenshot has an option to Upload to imgur!\nUsing this option uploads your image to imgur anonymously! No account needed. The link to the uploaded image gets added to the clipboard - simply go and paste it where you need the link! (in your md file if writing post).\nPro Tip 1: In case you overwrite your clipboard by accidently copying something, you can use the Clipboard History - press Win + V to paste any past copied content from clipboard (image, text).\nIn case your Clipboard history is not enabled, you can still go and look at the URL at following path:\nOpen C:\\Users\\\u0026lt;your use name\u0026gt;\\AppData\\Roaming\\Greenshot\\Greenshot.ini Search for history or Imgur upload history and you will see: ; Imgur upload history (ImgurUploadHistory.hash=deleteHash)\rImgurUploadHistory.lsVueG2=BuN9UvajnoT0mNY\rImgurUploadHistory.BSmH9Ti=ZNiHg5XxmRzQxzO\rImgurUploadHistory.zqH2N6T=QkbcS7GOt0zfeJF\rImgurUploadHistory.57OEveQ=pMjHK1yBmHk18zQ courtesy: This SO answer.\nHere e.g. lsVueG2 denotes the image uploaded, and the image can be accessed by https://i.imgur.com/lsVueG2.png and so on.\nPro Tip 2: If you accidently uploaded a file that you did not intend to, the image can be accessed by anyone who has the link. Fortunately there is a way to delete the image after its uploaded anonymously - you can use the information in C:\\Users\\\u0026lt;your use name\u0026gt;\\AppData\\Roaming\\Greenshot\\Greenshot.ini to do this:\nImgurUploadHistory.lsVueG2=BuN9UvajnoT0mNY The 15 character hash value after = can be used to delete the image:\nBuN9UvajnoT0mNY # this is called deletehash The 15 digit alpha-numeric is called deletehash.\nUse it to delete the anonymously uploaded image:\nimgur.com/delete/{deletehash} ","permalink":"https://anantcode.github.io/posts/2022-04-26-save-your-images-to-imgur/","summary":"When creating blog posts on my Hugo site, I used to run into requirement of adding image - there are 2 choices:\nPut the image as static file in my site Should I use a public URL from a quick Google search (hosted by someone else!) I decided to go with a 3rd option - host my own image on cloud and use its URL.\nDoing it with imgur.\nIt allows unlimited storage with limit of 50 uploads per hour.","title":"Save Your Images to imgur and use URL in blog"},{"content":"What is the smallest number that can be represented without a problem in JavaScript, for integers? Number.MIN_SAFE_INTEGER is a constant in JS that represents the smallest possible value that can be safely used, that is (-(2^53 - 1)) or -9007199254740991\nFor values smaller that this, BigInt can be used\n\u0026ldquo;Safe\u0026rdquo; refers to the ability of JavaScript to represent integers exactly and to correctly compare them.\nExample: Value of Number.MIN_SAFE_INTEGER value = Number.MIN_SAFE_INTEGER; console.log(value); // -9007199254740991 value_minus_1 = value - 1; value_minus_2 = value - 2; // JS Number cannot exactly represent integers smaller than \u0026#39;value\u0026#39; // and correctly compare them console.log(value_minus_1 == value_minus_2); // true Output\n-9007199254740991\rtrue Why does this happen! The reasoning behind this number is that JavaScript uses double-precision floating-point format numbers as specified in IEEE 754 and can only safely represent numbers between -(2^53 - 1) and 2^53\nRelated Recommended Readings:\nNumber.MAX_SAFE_INTEGER Number.isSafeInteger() BigInt Reference:\nhttps://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number/MIN_SAFE_INTEGER\nhttps://www.programiz.com/javascript/library/number/min_safe_integer\n","permalink":"https://anantcode.github.io/posts/2022-04-26-min-safe-integer-in-js/","summary":"What is the smallest number that can be represented without a problem in JavaScript, for integers? Number.MIN_SAFE_INTEGER is a constant in JS that represents the smallest possible value that can be safely used, that is (-(2^53 - 1)) or -9007199254740991\nFor values smaller that this, BigInt can be used\n\u0026ldquo;Safe\u0026rdquo; refers to the ability of JavaScript to represent integers exactly and to correctly compare them.\nExample: Value of Number.MIN_SAFE_INTEGER value = Number.","title":"Minimum Safe Integer in JavaScript"},{"content":"Sometimes all those open Chrome tabs may be too much for your RAM to handle.\nUse the following on your Powershell to kill all chrome services:\ntaskkill /F /IM chrome.exe ","permalink":"https://anantcode.github.io/posts/kill-all-chrome-processes-win/","summary":"Sometimes all those open Chrome tabs may be too much for your RAM to handle.\nUse the following on your Powershell to kill all chrome services:\ntaskkill /F /IM chrome.exe ","title":"How to kill all Chrome processes on Windows"},{"content":"I have following global git configs:\ngit config commit.gpgsign # true for work, false for personal git config user.name # different for work(global) and personal git config user.email # different for work(global) and personal Assuming the default(global) git config is my work related configs, which I dont want to use for personal git repos\nSo I can switch to personal every time I work on a personal project. To change all the 3 with predetermined values, use following shell script.\n#!/bin/bash echo \u0026#34;Settings before update:\u0026#34; git config user.name git config user.email git config commit.gpgsign git config user.name \u0026#34;\u0026lt;your-personal-name\u0026gt;\u0026#34; git config user.email \u0026#34;\u0026lt;your-personal-email\u0026gt;\u0026#34; git config commit.gpgsign false echo echo \u0026#34;Settings updated to personal\u0026#34; Create the .sh file say gitpersonal.sh and place in a location from where it can be run anywhere (see how to run a .sh file from anywhere in gitbash and powershell)\nUpdate: Improved script based on above. Added color. Added pause.\n#!/bin/bash # Personal Info PERSONAL_EMAIL=\u0026#34;anant.code@gmail.com\u0026#34; PERSONAL_USER=\u0026#34;Anant\u0026#34; # Colors RED=\u0026#39;\\033[0;31m\u0026#39; LIGHTGREEN=\u0026#39;\\033[1;32m\u0026#39; NC=\u0026#39;\\033[0m\u0026#39; # No Color echo \u0026#34;in pwd:\u0026#34; pwd echo \u0026#34;Settings before update:\u0026#34; printf \u0026#34;${RED}git config user.name${NC}\\n\u0026#34; git config user.name printf \u0026#34;${RED}git config user.email${NC}\\n\u0026#34; git config user.email printf \u0026#34;${RED}git config commit.gpgsign${NC}\\n\u0026#34; git config commit.gpgsign git config user.name $PERSONAL_USER git config user.email $PERSONAL_EMAIL git config commit.gpgsign false echo echo \u0026#34;Settings updated to personal!\u0026#34; echo \u0026#34;New Settings:\u0026#34; printf \u0026#34;${LIGHTGREEN}git config user.name${NC}\\n\u0026#34; git config user.name printf \u0026#34;${LIGHTGREEN}git config user.email${NC}\\n\u0026#34; git config user.email printf \u0026#34;${LIGHTGREEN}git config commit.gpgsign${NC}\\n\u0026#34; git config commit.gpgsign echo \u0026#34;press any key to close...\u0026#34; read -n 1 -s ","permalink":"https://anantcode.github.io/posts/bash-script-to-switch-git-config-in-new-repo/","summary":"I have following global git configs:\ngit config commit.gpgsign # true for work, false for personal git config user.name # different for work(global) and personal git config user.email # different for work(global) and personal Assuming the default(global) git config is my work related configs, which I dont want to use for personal git repos\nSo I can switch to personal every time I work on a personal project. To change all the 3 with predetermined values, use following shell script.","title":"Bash Script to switch Git Configs"},{"content":"Based on the way described in a previous article, following shell script can be run to create new md file (new blog post) based on archetype.\n#!/bin/sh echo \u0026#34;Enter post title (.md will be automatically added)\u0026#34; echo \u0026#34;Post title: \u0026#34; read posttitle hugo new -k post posts/$posttitle.md running this will create a new md file in /content/posts based on the archetype in /archetype\nCreate a file called new.sh and place this .sh file in root of hugo project, and run:\nPowerShell and bash: ./new.sh ","permalink":"https://anantcode.github.io/bash-new-hugo-post/","summary":"Based on the way described in a previous article, following shell script can be run to create new md file (new blog post) based on archetype.\n#!/bin/sh echo \u0026#34;Enter post title (.md will be automatically added)\u0026#34; echo \u0026#34;Post title: \u0026#34; read posttitle hugo new -k post posts/$posttitle.md running this will create a new md file in /content/posts based on the archetype in /archetype\nCreate a file called new.sh and place this .","title":"Bash Script to create new page (MD File) in Hugo"},{"content":"Following the \u0026ldquo;2 repo\u0026rdquo; approach of hugo site as described in previous post How to create Hugo Blog hosted on GitHub:\nFirst repo for hugo-project Second repo for the static site (public dir in hugo project is created as git submodule I came across this approach first here.\nWhen using this approach, I tried to do cleanup of public directory after some inital builds, because in previous builds they were many folders and files created which I no longer wanted to be present on root of generated site(these were things like multiple folders for images - later I wanted to put all images under single directory), but in subsequent builds using hugo command these files and directories were not getting removed.\nMy first approach was to delete the public folder and then build again using hugo command, but the problem was that the git submodule configuration also gets removed if I delete the public folder. Adding the git submodule again was tedious, had to use some force options etc.\nSolution to this was to avoid deleting public folder and instead delete its contents, so as to not delete .git and .github from the public dir, but This was a lot of manual steps, considering already there are so many manual steps like\npushing to the first repo, doing a build, and pushing the second repo So I decided to write a shell script.\nBut on a quick search found that people have already done it! Found this bat file that would work in windows, by ycchaos on this forum.\n@echo off rem This script is help to deploy public from Hugo to GitPage rem public directory at root is generated by hugo (and is git submodule as your xxx-github-io) rem Put this script under your hugo site\u0026#39;s root (near by hugo config file (config.yml or config.toml etc)) rem ------------------------------------------------------------- rem Input commit message set /P commit-message=Please input your git commit message: echo Your commit message: \u0026#34;%commit-message%\u0026#34; echo %CD% rem cd to /public cd public echo %CD% rem Keep .git and .github workflow alive set \u0026#34;keep1=.git\u0026#34; set \u0026#34;keep2=.github\u0026#34; echo keep %keep1% echo keep %keep2% rem Delete others FOR /d %%a IN (\u0026#34;%CD%\\*\u0026#34;) DO IF /i NOT \u0026#34;%%~nxa\u0026#34;==\u0026#34;%keep2%\u0026#34; RD /S /Q \u0026#34;%%a\u0026#34; FOR %%a IN (\u0026#34;%CD%\\*\u0026#34;) DO IF /i NOT \u0026#34;%%~nxa\u0026#34;==\u0026#34;%keep1%\u0026#34; DEL \u0026#34;%%a\u0026#34; rem Back to root folder cd.. echo Back to... %CD% rem Build hugo hugo rem Push public to GitPage repository cd public git add --all git commit -m \u0026#34;%commit-message%\u0026#34; git push cd.. rem Push Hugo to source repository git add --all git commit -m \u0026#34;%commit-message%\u0026#34; git push pause Place this file on root of your hugo project. Optionally you can add it to .gitignore\nRun this batch script\nby doublclicking the bat file in powershell or gitbash by ./deploy.bat or ./deploy in powershell, abort by Ctrl + C Ctrl + C doesnt work to abort in gitbash, directly exit gitbash window if needed. ","permalink":"https://anantcode.github.io/posts/bat-script-to-deploy-and-clean-static-site-root/","summary":"Following the \u0026ldquo;2 repo\u0026rdquo; approach of hugo site as described in previous post How to create Hugo Blog hosted on GitHub:\nFirst repo for hugo-project Second repo for the static site (public dir in hugo project is created as git submodule I came across this approach first here.\nWhen using this approach, I tried to do cleanup of public directory after some inital builds, because in previous builds they were many folders and files created which I no longer wanted to be present on root of generated site(these were things like multiple folders for images - later I wanted to put all images under single directory), but in subsequent builds using hugo command these files and directories were not getting removed.","title":"Hugo: Batch script to deploy to GitHub after cleaning the output public dir (static-site's root)"},{"content":"If you had a local repo and a remote repo connected to it (say on GitHub) - and for some reason you decide to change the repo name on remote, what do you need to do locally to keep things working? (as push/fetch/pull from local start to fail due to rename)\nRename the remote repo(1,2), and then tweak the local repo(3,4,5) so that things work as expected:\nGo to the remote host (for example, https://github.com/user/project). Rename the repo following the host\u0026rsquo;s instructions (may differ from host to host, but you should be able to find it under Settings). Determine the new URL (for example, git@github.com:user/project-new.git) Go to your local repository directory (i.e., open a command prompt and cd to the repository\u0026rsquo;s directory). Set the new URL using Git: git remote set-url origin git@github.com:user/project-new.git and your push/pull/fetch should start working as usual\nEDIT:\nI later found out that in case of GitHub, it automatically takes care of repo rename - it continues to remember the old repo URL and any push, clone, fetch done on old remote URL is automatically redirected to the new URL.\nHowever they do recommend changing URL on local As described in this article to avoid any confusion\nWhat could be the confusion you ask? As also mentioned in above GitHub documentation:\nWarning: If you create a new repository under your account in the future, do not reuse the original name of the renamed repository. If you do, redirects to the renamed repository will break.\nI faced this problem! and had to use the changing remote URL.\nChanged remote repo name from A to B. Created a new repo with name A Faced problem with local B push etc. So be safe - if you rename a Remote repo also update the local remote repo URL\n","permalink":"https://anantcode.github.io/posts/9-renaming-remote-git-repo/","summary":"If you had a local repo and a remote repo connected to it (say on GitHub) - and for some reason you decide to change the repo name on remote, what do you need to do locally to keep things working? (as push/fetch/pull from local start to fail due to rename)\nRename the remote repo(1,2), and then tweak the local repo(3,4,5) so that things work as expected:\nGo to the remote host (for example, https://github.","title":"Renaming remote git repo"},{"content":"Hi there, I am Anant.\nI enjoy software development and working and learning the amazing technologies of our time.\nEnjoy music, playing and experimenting with instruments.\nAstronomy fascinates me, love watching Astrum\nPrincipal Engineer at Oracle NetSuite.\nBTech, IIT(BHU) Electrical Engineering.\nCurrently into JavaScript, Node.js, Java, Android Development.\nPlease reach me at anant.code@gmail.com\n","permalink":"https://anantcode.github.io/about/","summary":"Hi there, I am Anant.\nI enjoy software development and working and learning the amazing technologies of our time.\nEnjoy music, playing and experimenting with instruments.\nAstronomy fascinates me, love watching Astrum\nPrincipal Engineer at Oracle NetSuite.\nBTech, IIT(BHU) Electrical Engineering.\nCurrently into JavaScript, Node.js, Java, Android Development.\nPlease reach me at anant.code@gmail.com","title":"About"},{"content":"https://formito.com/tools/favicon\n","permalink":"https://anantcode.github.io/posts/8-free-svg-favicon-generator-from-text/","summary":"https://formito.com/tools/favicon","title":"Free Svg Favicon Generator From Text"},{"content":"redketchup.io has a free favicon generator(only generates PNG) I also used for it this blog.\nEdit: replaced with better SVG generator\n","permalink":"https://anantcode.github.io/posts/7-free-favicon-generator-from-text/","summary":"redketchup.io has a free favicon generator(only generates PNG) I also used for it this blog.\nEdit: replaced with better SVG generator","title":"Free Favicon Generator From Text"},{"content":"Greatly simplifies working with images in md file in VSCode, and IMO one of the best ways to create blog post md in VSCode\nWhen working on a blog post that is written in .md, adding an image in the .md file can be tedious.\nYou can point to an image by its URL:\n![alt-text](\u0026lt;url-of-image\u0026gt;) Alternatively you can place the image locally in static folder in hugo project root, as described in How to add image to a Hugo blogpost\nAs a improvement in the above workflow, following can be used additionally to automate storing of image in appropriate directory (project-root/static/\u0026lt;dir-of-post\u0026gt;/img1.png) and using its reference in the blog post md, i.e.:\n![alt-text](/\u0026lt;dir-of-post\u0026gt;/img1.png) Setup Install the VSCode plugin Paste Image Overview of features from official documentation: Use following configs: Update these configs in your workspace settings.json file in VSCode (press F1 and search for Open Workspace Settings (JSON))\n\u0026#34;pasteImage.path\u0026#34;: \u0026#34;${projectRoot}/static/${currentFileNameWithoutExt}\u0026#34;,\r\u0026#34;pasteImage.basePath\u0026#34;: \u0026#34;${projectRoot}/static\u0026#34;,\r\u0026#34;pasteImage.prefix\u0026#34;: \u0026#34;/\u0026#34;,\r\u0026#34;pasteImage.namePrefix\u0026#34;: \u0026#34;${currentFileNameWithoutExt}_\u0026#34;, Now we are ready to start pasting images from clipboard in MD files.\nUsage Use Greenshot or any snip software to copy a sample screenshot (example Shift + Win + S on Windows). We will paste this in the md file.\nPaste in md file in VSCode using Ctrl + Alt + V\nWhat this does Creates a folder with name of your post article in /static folder. This new folder will be used by the plugin to store any subsequent images that you paste when working on this md file. Creates an image file for the pasted image under the folder. Adds the relevant image link to the created image file in md file with correct relative path /\u0026lt;folder-for-article\u0026gt;/\u0026lt;image-file.png\u0026gt; ","permalink":"https://anantcode.github.io/posts/6-simple-add-image-in-markdown-vscode-plugin/","summary":"Greatly simplifies working with images in md file in VSCode, and IMO one of the best ways to create blog post md in VSCode\nWhen working on a blog post that is written in .md, adding an image in the .md file can be tedious.\nYou can point to an image by its URL:\n![alt-text](\u0026lt;url-of-image\u0026gt;) Alternatively you can place the image locally in static folder in hugo project root, as described in How to add image to a Hugo blogpost","title":"Best way to add image in markdown file in VSCode - using VSCode plugin 'Paste Image'"},{"content":"YML is a document (plain text file) that is used generally as configuration file, just like json file would be used. It is meant to be more human readable and have minimal syntax. Refer this Quickstart guide on YML.\nYou can write strings without \u0026quot; \u0026quot; and I wanted to write a multiline string, but faced a problem.\nI tried this SO, first problem I faced is - in yml corrent indentation is important else you get errors like:\nfailed to unmarshal YAML: yaml: line 79: could not find expected \u0026#39;:\u0026#39; Corrected the indentation.\nAnyway didnt work for me because of the Theme I am using(PaperMod Hugo). But I learnt how to write multiline string in yml, atleast.\nReferences: this SO\nEdit: Found a way to make it work later:\nContent: |\r- Line 1\r-\r- Line 2 / Para 2 with multiple Sentences.\r-\r- Line 3 ","permalink":"https://anantcode.github.io/posts/4-write-multiline-text-in-yml-file/","summary":"YML is a document (plain text file) that is used generally as configuration file, just like json file would be used. It is meant to be more human readable and have minimal syntax. Refer this Quickstart guide on YML.\nYou can write strings without \u0026quot; \u0026quot; and I wanted to write a multiline string, but faced a problem.\nI tried this SO, first problem I faced is - in yml corrent indentation is important else you get errors like:","title":"How to Write Multiline Text in YML File"},{"content":"Method 1 hugo new posts/\u0026lt;name-of-post-file.md\u0026gt; Method 2 Directly create a MD file under content/posts and add frontmatter manually / copy from a existing md file.\nMethod 3 Learnt from a hugo theme(PaperMod) documentation here\nCreate new post md file based on a archetype.\nBefore doing this, add the archetype md file at archetypes/post.md\nhugo new --kind post \u0026lt;name\u0026gt; # name must have .md or\nhugo new -k post \u0026lt;name\u0026gt; # use -k instead of --kind But above creates new md file directly in content whereas I want it in content/posts/ (I could not see md files appear as posts in this theme until the md files are in content/posts/). Its not a problem because I can easily change this by:\nhugo new -k post posts/test4.md Also check bash script to create post in Hugo based on this archetype approach.\nand now new md files are added in content/posts/ and will be based on the archetype you set.\nAlso check: Automatically set current datetime in new post.\n","permalink":"https://anantcode.github.io/ways-to-create-new-hugo-post/","summary":"Method 1 hugo new posts/\u0026lt;name-of-post-file.md\u0026gt; Method 2 Directly create a MD file under content/posts and add frontmatter manually / copy from a existing md file.\nMethod 3 Learnt from a hugo theme(PaperMod) documentation here\nCreate new post md file based on a archetype.\nBefore doing this, add the archetype md file at archetypes/post.md\nhugo new --kind post \u0026lt;name\u0026gt; # name must have .md or\nhugo new -k post \u0026lt;name\u0026gt; # use -k instead of --kind But above creates new md file directly in content whereas I want it in content/posts/ (I could not see md files appear as posts in this theme until the md files are in content/posts/).","title":"How to create a new Post in a Hugo blog"},{"content":"Adding image in body of your post in Markdown in Hugo.\nYou can add the image file say image.png to static folder, and then reference it in your md file which is at content/posts/ just like following:\n![alt-text](/image.png) Reference: page\nAlso see: Add image in markdown file in VSCode using plugin Paste Image\n","permalink":"https://anantcode.github.io/posts/3-add-image-in-hugo-markdown/","summary":"Adding image in body of your post in Markdown in Hugo.\nYou can add the image file say image.png to static folder, and then reference it in your md file which is at content/posts/ just like following:\n![alt-text](/image.png) Reference: page\nAlso see: Add image in markdown file in VSCode using plugin Paste Image","title":"How to add image to a Hugo blogpost"},{"content":"Hugo is one of the most popular open-source static site generators. Static sites can be created with Markdown files using Hugo.\nThis article outlines the steps to generate a blog(static site) using Hugo and hosting it on GitHub.\nInstalling Hugo Hugo is available as an executable binary for all platforms, so no \u0026lsquo;installation\u0026rsquo; is required as such. Just download and add its location to your Path to access it from anywhere in your terminal.\nCreating new site with Hugo After installing Hugo,\nhugo new site \u0026lt;name-of-site\u0026gt; Choose a Hugo theme Choose a theme (say PaperMod) from Hugo Themes\nClone the theme\u0026rsquo;s git repo in themes dir in your new site dir.\nconfig.toml / config.yml Edit config.toml:\nset the theme set the title set baseURL \u0026lsquo;https://\u0026hellip;.\u0026rsquo; (e.g. if you want to publish to github, you would use \u0026lt;your-git-username\u0026gt;.github.io) You may see different themes use different conventions, like some use config.yml instead of toml etc. Best practice is to follow the documentation of the particular theme you are using.\nStart the local server hugo server starts server locally and it refreshes on every change, while you develop.\nCreate a new Post hugo new posts/mypost.md This will create a new md file under content/posts/ Open the file and you can delete draft or set it to false.\nYou can now start editing this md file and write your blog post!\nCreate 2 GitHub repos 1st repo - to store the code (does not store the static site)\n2nd repo(static site repo) - to store the static site.\n2nd must have atleast 1 commit and should have main branch (commit it from somewhere + push to main, so remote has them, or use inbuilt github when it asked \u0026ldquo;initialize with readme?\u0026rdquo;)\nAdd a git submodule The submodule will refer to 2nd repo and will exist at the folder public that is inside 1st repo.\ngit submodule add -b main \u0026lt;url of 2nd\u0026gt; public` Notice the folder for submodule is specified and is named public here.\ngiving public failed and had to cd into public because public got created when I ran hugo server For similiar case later, I just deleted the public folder, and retried submodule add.\nalso the 1st (your blog-code-repo) should be a git repo already, then adding the submodule would work. So better make your hugo-project a git repo first.\nThis will create a public folder and populate it with 2nd repo.\nAdding 2nd repo as submodule makes it possible to directly push generated stuff in 2nd repo (that will effectively deploy the site on GutHub pages)\nBuild the code hugo -t \u0026lt;name of theme\u0026gt;` example hugo -t PaperMod creates static content (say 10 pages, one sitemap etc\u0026hellip;) in public dir.\nbtw if you just check where the origin is pointing to when you are inside the public folder - it will point to the 2nd repo - because you are inside public folder that you created using submodule.\ngit remote -v Deploy site to GitHub Now, cd into the public folder, see the files generated by Hugo, and push them to origin (2nd repo)\ncd public\rgit push origin main Enable Github Pages in your 2nd repo, and see the site live!\nCongrats! you now have a live static-site created using Hugo.\nThanks to adityatelange for the theme PaperMod that is also used to create this blog.\n","permalink":"https://anantcode.github.io/posts/create-blog-with-hugo/","summary":"Hugo is one of the most popular open-source static site generators. Static sites can be created with Markdown files using Hugo.\nThis article outlines the steps to generate a blog(static site) using Hugo and hosting it on GitHub.\nInstalling Hugo Hugo is available as an executable binary for all platforms, so no \u0026lsquo;installation\u0026rsquo; is required as such. Just download and add its location to your Path to access it from anywhere in your terminal.","title":"Create Blog With Hugo"},{"content":"This is in continuation to Part 1 What is great about the way we did this (using Next.js) is - we can now export this as a static website. The static website can be deployed anywhere now!\nUpdate build script - use next export Notice in package.json, there is a command called build. This is build script.\nnpm run build npm run build will build for production, but there is one more command called next export that will export you site as a static website.\nWe can add it to the build script in package.json\n\u0026#34;build\u0026#34;: \u0026#34;next build \u0026amp;\u0026amp; next export\u0026#34; Save package.json\nCut off the server (That you may have started. It is started using npm run dev. If already running, stop it) . (Close by Ctrl + C etc.)\nTime to build npm run build This will create a folder on root called out that will have the static site.\nGot some warnings and errors: Do not use Do not use \u0026lt;img\u0026gt; . Instead use Image from next/image - this is what the next build process tells in error. However, it is not mandatory and can be overridden like below: (infact I got it as a warning in latest Next.js version 12.1.4 , not as a Error ;)\nMy Warning:\nError: Missing \u0026ldquo;key\u0026rdquo; prop for element in iterator In the home page, list of Posts - each post should have a key (and unique key) We can easily add it as the index of array item.\nAfter fixing all errors, (like class was used instead of className)\nFinally running again npm run build and success!\nExport successful. Files written to ___________\\out Now you can test (serve this static site locally) Use for e.g. a package called serve\nInstall it globally\nnpm i -g serve now run\nserve -s ./out -p 8000 But got this error on my Windows machine:\nAbout this error:\n.ps1 cannot be loaded because the execution of scripts is disabled on this system\nbased on this answer\nWorked!\nOpening the static site at localhost:8000\nIts working!\nIts a static website you can deploy it anywhere!\nDone testing.\nDeploy! I am going to deploy to Vercel.\nVercel is great for any nextjs website - static, whether it uses API routes, anything Create an account on Vercel Create a new github repo (I already had) Deploy from the github repo to Vercel - its fairly straightforward. ","permalink":"https://anantcode.github.io/posts/publishing-nextjs-site-blog/","summary":"This is in continuation to Part 1 What is great about the way we did this (using Next.js) is - we can now export this as a static website. The static website can be deployed anywhere now!\nUpdate build script - use next export Notice in package.json, there is a command called build. This is build script.\nnpm run build npm run build will build for production, but there is one more command called next export that will export you site as a static website.","title":"Creating a Blog with Next.js and Markdown - Part 2"},{"content":"Special mention to Traversy Media for content that is referenced here.\nNext.js Setup and Styling $ npx create-next-app blog npm i marked gray-matter To run (opens default app): npm run dev ready - started server on 0.0.0.0:3000, url: http://localhost:3000 wait - compiling... event - compiled client and server successfully in 9s (125 modules) Deleting the unwanted: Not using api routes, so delete pages/api folder index.js is home page Each page in Next.js is a functional component, example: Home here is a functional component of react.\nAnytime you create a component in pages folder like say about.js , that will allow us to go to /about and that component will get automatically rendered - easy routing due to Next.js\nRemove some unwanted boilerplate Keep Head import because we need the title of page.\nDelete this class because we will have a single global CSS file.\nGet rid of main tag and footer tag\nChange \u0026lt;title\u0026gt; etc.\nFinal is very basic:\nAdd a global css Get global.css from here and add it to styles/\nCreate a components folder for components that are not pages, like Header etc.\nTip: Use ES7 react redux extension for VSCode - do _rfc and it will give you a function component.\nUse rfc to create a basic react functional component\nAdd a div with className “container”\nTip: Enable Emmet for .js files:\nNothing’s going to show up now, because we have not added it yet.\nNow go to _app.js and import Header\nand add the Header in _app.js\nAdd a \u0026lt;main\u0026gt; tag with “container” class, and move the Component into the main tag\nCreate a Markdown File index.js (HOME PAGE) is where we want to use a data fetching method - to fetch our Markdown posts.\nThe markdown posts are going to go in root in a folder called posts, so lets create that.\nCreate a folder called posts on root. Create a folder images in public also create public/images/posts to store images of your post.\nCreate a frontmatter - it is always at the top In the test md file,\nGet post on homepage from md: getStaticProps() allows us to fetch data at build time - we can use this to create static website - use this to fetch data for static website.\nIn index.js\nexport async function getStaticProps() { // here data can even come from strapi etc.(any headless CMS) return { props: { posts: \u0026#34;The Posts\u0026#34; }, //test }; } getStaticProps() makes it available in the main component: (here in Home functional component)\nImport fs Although as soon as you add the import\nimport fs from \u0026#34;fs\u0026#34;; You will see error by Next\nReason for the error is - fs is not something you can import on the client side. fs is the filesystem node.js module and we are trying to import it in client side code (react code).\nHowever next.js is smart enough to know that if you use the fs module inside the getStaticProps() which will run on Server Side, then fs will work.\nNo more errors! :) Even if import fs from \u0026quot;fs\u0026quot; is still in code, fs was used only inside getStaticProps() function and hence the error is no longer shown by Next.\n1 = array of all files (names?) on posts directory.\n2 = 3, they are same.\nCreate an array that will contain all the slugs. ~15:00 mins in https://youtu.be/MrjeefD8sac?t=895\n(For now there is only 1 test.md - its slug)\nUse gray-matter import matter from \u0026#34;gray-matter\u0026#34;; in getStaticProps()\n// destructring - renaming the data to frontmatter. const { data: **frontmatter** } = matter(markdownWithMeta); return { slug, **frontmatter**, }; Now return the posts instead of test string, from getStaticProps()\nreturn { props: { posts: posts }, }; we are logging it in component start\nSo for log at line 7, we see:\nwhy array? because its result of map()\nAlso array size = no. of files. We have only 1 test.md :\nNotice that we dont have the body of markdown - we dont need it because we will not put it in index.js but will do in another component.\nAdd some more .md files see them getting displayed.\nCreate a component for post, instead of the h3 Added links to Post component\nIt is redirecting to the URL (but getting 404 ofcourse, we dont have those pages yet).\nNeed to work on inner page now. We wants url of the blog page to be like /blog/slug\nSince this is a static site, we need to create these paths at build time obviously. They way we will do that with specific data fetching method called getStaticPaths\nWe wants url of the blog page to be like /blog/slug and slug can be anything. So we have to format the pages like following, for routing:\nSo starting:\nCreate a new folder blog under pages/ Create a js file under blog [slug].js It is named with because we want to be dynamic. Create react component in the js file - call it PostPage export default function PostPage() { return \u0026lt;div\u0026gt;post\u0026lt;/div\u0026gt;; } We also want to do a couple of things\nObviously Fetch the data from the markdown files, for the PostPage Statically generate these paths (because this is going to be a static website - and it needs to know paths beforehand, and we need to do that based on the data) Write 2 functions - getStaticPath and getStaticProps\nimport fs from \u0026#34;fs\u0026#34;; import path from \u0026#34;path\u0026#34;; export default function PostPage() { return \u0026lt;div\u0026gt;post\u0026lt;/div\u0026gt;; } export async function getStaticPaths() { const files = fs.readdirSync(path.join(\u0026#34;posts\u0026#34;)); const paths = files.map((filename) =\u0026gt; ({ params: { slug: filename.replace(\u0026#34;.md\u0026#34;, \u0026#34;\u0026#34;), }, })); console.log(paths); return { paths, // paths will be like [{params: {slug: 1}}] fallback: false, //if doesnt find a page, for 404 }; } //its incomplete now export async function getStaticProps() { return { props: {}, }; } paths logged just before return is\nSince we are returning paths (it has the slugs we needed) from getStaticPaths we can access that in the other function getStaticProps export async function getStaticProps({ params: { slug } }) { console.log(slug); return { props: {}, }; } We are able to see the log : (when page 3 was refreshed/loaded) :\nSo we now have direct access to whatever is the slug is, inside getStaticProps\nNow work on content To see what exactly is frontmatter, JSON.stringify (we have see in past for the list page)\nBtw \u0026lt;\u0026gt; \u0026lt;/\u0026gt; is called an empty fragment\nWe add a button on the PostPage to go to home:\nWe construct the actual page content, using the CSS classes present in the global.css:\nimport fs from \u0026#34;fs\u0026#34;; import path from \u0026#34;path\u0026#34;; import matter from \u0026#34;gray-matter\u0026#34;; import Link from \u0026#34;next/link\u0026#34;; import { marked } from \u0026#34;marked\u0026#34;; export default function PostPage({ frontmatter: { title, date, cover_image }, slug, content, }) { return ( \u0026lt;\u0026gt; \u0026lt;Link href=\u0026#34;/\u0026#34;\u0026gt; \u0026lt;a className=\u0026#34;btn btn-back\u0026#34;\u0026gt;Go Back\u0026lt;/a\u0026gt; \u0026lt;/Link\u0026gt; \u0026lt;div className=\u0026#34;card card-page\u0026#34;\u0026gt; \u0026lt;h1 className=\u0026#34;post-title\u0026#34;\u0026gt;{title}\u0026lt;/h1\u0026gt; \u0026lt;div className=\u0026#34;postdate\u0026#34;\u0026gt;Posted on {date}\u0026lt;/div\u0026gt; \u0026lt;img src={cover_image} alt=\u0026#34;post-image\u0026#34; /\u0026gt; \u0026lt;div className=\u0026#34;post-body\u0026#34;\u0026gt; {/* will use marked here - will insert the MD HTML here Basicall inserting HTML - when we do that within JSX we have to use an attribute called dangerouslySetInnerHTML. It is set with double curly braces, like {{__html: }}*/} \u0026lt;div dangerouslySetInnerHTML={{ __html: marked(content) }}\u0026gt;\u0026lt;/div\u0026gt; \u0026lt;/div\u0026gt; \u0026lt;/div\u0026gt; \u0026lt;/\u0026gt; ); } Notice the use of attrib: dangerouslySetInnerHTML\nWe set it with {{ }} and __html as the key.\nWe notice the dates of posts on the homepage may not be sorted.\nSort it in index.js\nimport a utility function sortByDate to help with sorting\nWe are done with basic blog site creation, now deployment!\nContinued in Part 2\n","permalink":"https://anantcode.github.io/posts/2-create-blog-with-nextjs-markdown/","summary":"Special mention to Traversy Media for content that is referenced here.\nNext.js Setup and Styling $ npx create-next-app blog npm i marked gray-matter To run (opens default app): npm run dev ready - started server on 0.0.0.0:3000, url: http://localhost:3000 wait - compiling... event - compiled client and server successfully in 9s (125 modules) Deleting the unwanted: Not using api routes, so delete pages/api folder index.js is home page Each page in Next.","title":"Creating a Blog with Next.js and Markdown - Part 1"},{"content":"Emmet is a popular plugin available for multiple IDEs including VSCode.\nBy Default it works when you are on .html file.\nYou can also make it work on .js files when working with JSX.\nOpen Settings in VSCode: Ctrl + , Navigate to Workspace tab \u0026gt; Extensions Use “Edit in settings.json\u0026quot; Add following config to the settings.json file: { \u0026#34;emmet.includeLanguages\u0026#34;: { \u0026#34;javascript\u0026#34;: \u0026#34;javascriptreact\u0026#34; } } Emmet should start working in .js files now. Thanks to Eshwaren M\n","permalink":"https://anantcode.github.io/posts/enable-emmet-in-jsx-for-vscode/","summary":"Emmet is a popular plugin available for multiple IDEs including VSCode.\nBy Default it works when you are on .html file.\nYou can also make it work on .js files when working with JSX.\nOpen Settings in VSCode: Ctrl + , Navigate to Workspace tab \u0026gt; Extensions Use “Edit in settings.json\u0026quot; Add following config to the settings.json file: { \u0026#34;emmet.includeLanguages\u0026#34;: { \u0026#34;javascript\u0026#34;: \u0026#34;javascriptreact\u0026#34; } } Emmet should start working in .","title":"Enable Emmet for JSX in VSCode"},{"content":"Programming Blog can be one of the best first projects for any programmer.\nBenefits Document your entire journey and learning experience. Keeps you accountable for learning. Gives a level of professionalism. Following the tips/suggestions available online for your programming blog Wordpress or from scratch (HTML CSS, JAMstack)? It is a personal choice, and based on what you are looking out of it when you spend your time creating a blog, you have the freedom to choose your platform/tech stack.\nReaching larger audience - use platforms like Medium, dev.to, hashnode. Documenting your progress - anything is fine. My Motivation Wanted to have a programming blog/website of my own for a long time. Wanted to do 100 days of code. This short was a recent trigger. My research before starting What tools/platform Any other things to keep in mind. YouTubed it - found some suggestions of using platforms like Medium or Hashnode for blogging. Common tips I came across Use a Template Use free templates, if you are not a designer.\nHost on free services Netlify Amazon S3 GitHub Use a static site generator Gatsby Hugo Jekyll Next.js What to write Doesn\u0026rsquo;t have to be essay. Can be small tips tricks that I learn, on new tech maybe. Helps you remember and revisit what you learnt. All Set! I decided to create a Next.js and Markdown based blog, because I really like Markdown and Next.js and wanted some hands-on with Next.js. More details in upcoming posts.\nUpdate: This blog was originally written in Markdown and published later on the now Live blog!\n","permalink":"https://anantcode.github.io/posts/1-why-should-you-blog/","summary":"Programming Blog can be one of the best first projects for any programmer.\nBenefits Document your entire journey and learning experience. Keeps you accountable for learning. Gives a level of professionalism. Following the tips/suggestions available online for your programming blog Wordpress or from scratch (HTML CSS, JAMstack)? It is a personal choice, and based on what you are looking out of it when you spend your time creating a blog, you have the freedom to choose your platform/tech stack.","title":"Why should you start a blog"},{"content":"Server Side Rendering(SSR) and Client Side Rendering are two different ways in which a website is served to a client.\nSSR and CSR both have their own advantages and disadvantges.\nWhich one would you prefer for better SEO (e.g. blog, ecommerce etc), and what are the quirks of search engines that affects your page ranking?\nThis whole debate has JS at the center - if there is no JavaScript in picture(hardly possible in modern websites and apps) and there is plain old HTML and CSS, then there is no CSR and SSR - its a static site!\nWhat is CSR The site (HTML, CSS, JS) will reach to client in minimal HTML(usually a single page served from e.g. a CDN) then the JS does most of the actual HTML generation(creating DOM) and then the HTML starts to exist on client. All other pages are also rendered by the JS by modifying DOM in the same page(hence Single Page Application) Client-side rendering means that a website’s JavaScript is rendered in your browser, rather than on the website’s server.\nWhat are the benefits of client-side rendering? As all the burden of rendering content is on the client (i.e. person or bot trying to view your page), Client-side rendering is the cheaper option for the website owner because it reduces the load on their own servers. What are the risks of client-side rendering? Client-side rendering can in general increase chances of a poor user experience. It is because JS can add seconds of load time to a page, and if that burden is fully on the client (website visitor), then they could get frustrated and leave your site.\nCSR\u0026rsquo;s effect on search engine bots: For example, Googlebot has something called a second wave of indexing. In this process, they crawl and index the HTML of a page first, then come back to render the JavaScript when resources become available. This two-phased approach means that sometimes, JavaScript content might be missed, and not included in Google’s index (see “What is render budget?” for more information). Other search engines are worse at rendering JavaScript than Google.\nJavaScript can also slow search engine bots down while they’re crawling a website, which on large sites, can introduce crawl budget issues.\nWhat is SSR The site will be ready with the final intended HTML (all rendered) when it reaches over internet from server to client. Any JS that has to run, executes on Server and HTML is created. Frameworks like Next.js and Nuxt.js provide SSR capabilities.\nWhat are the benefits of server-side rendering? Because JavaScript is rendered on the website’s server, both\nsearch engine bots, and humans get a faster page experience. This not only means a better UX (which is also part of Google’s ranking algorithm), but it also eliminates speed-related crawl budget issues.\nSending fully-rendered pages to search engine bots also means that you’re not risking the “partial indexing” that can happen with client-side rendered content. When Google and other search engine bots try to access your page, instead of having to wait for rendering resources to become available before seeing your full page, they’ll get the fully-rendered page right from the get-go.\nWhat are the risks of server-side rendering? Server-side rendering can be expensive and resource-intensive. Expensive: because the full burden of rendering your content for bots and human website visitors is on your servers. Resource-intensive to implement: since it’s not the default for JavaScript websites and will require work from your engineering team to execute. Server-side rendering also tends not to work with third-party JavaScript. So, if you use services like Bazaarvoice to pull in reviews on your website, they won’t be rendered with server-side rendering.\nWhy SSR is better for SEO bots get full HTML when crawling. UX is better - its one of the params for better ranking. Third approach - Dynamic Rendering SSR for search engine bots, CSR in all other cases.\nSend a fully rendered page to search engine bot when it tries to access the page. When a human tries to access the same page, their browser has to render the page. References:\nhttps://www.botify.com/blog/client-side-server-side-rendering-seo#:~:text=Between%20the%20two%20options%2C%20server,better%20in%20Google%20search%20results. ","permalink":"https://anantcode.github.io/posts/diff-bw-csr-and-ssr/","summary":"Server Side Rendering(SSR) and Client Side Rendering are two different ways in which a website is served to a client.\nSSR and CSR both have their own advantages and disadvantges.\nWhich one would you prefer for better SEO (e.g. blog, ecommerce etc), and what are the quirks of search engines that affects your page ranking?\nThis whole debate has JS at the center - if there is no JavaScript in picture(hardly possible in modern websites and apps) and there is plain old HTML and CSS, then there is no CSR and SSR - its a static site!","title":"Server Side Rendering(SSR) vs Client Side Rendering - for SEO"}]